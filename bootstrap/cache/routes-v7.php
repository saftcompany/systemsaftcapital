<?php

/*
|--------------------------------------------------------------------------
| Load The Cached Routes
|--------------------------------------------------------------------------
|
| Here we will decode and unserialize the RouteCollection instance that
| holds all of the route information for an application. This allows
| us to instantaneously load the entire route map into the router.
|
*/

app('router')->setCompiledRoutes(
    array (
  'compiled' => 
  array (
    0 => false,
    1 => 
    array (
      '/docs/api.json' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'scramble.docs.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/docs/api' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'scramble.docs.api',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/terms-of-service' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'terms.show',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/privacy-policy' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'policy.show',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/profile' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.profile.show',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/api-tokens' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'api-tokens.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/sanctum/csrf-cookie' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'sanctum.csrf-cookie',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/livewire/upload-file' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'livewire.upload-file',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/livewire/livewire.js' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::JwQr1idxQOFPdV9J',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/livewire/livewire.js.map' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::jYIgAmeb5kK6J3M7',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/laravel-pix/pix/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'laravel-pix.qr-code.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/log-viewer/api/hosts' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'log-viewer.hosts',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/log-viewer/api/folders' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'log-viewer.folders',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/log-viewer/api/files' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'log-viewer.files',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/log-viewer/api/clear-cache-all' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'log-viewer.files.clear-cache-all',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/log-viewer/api/delete-multiple-files' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'log-viewer.files.delete-multiple-files',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/log-viewer/api/logs' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'log-viewer.logs',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/_ignition/health-check' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ignition.healthCheck',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/_ignition/execute-solution' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ignition.executeSolution',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/_ignition/update-config' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ignition.updateConfig',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/broadcasting/auth' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::nNlbpmiiStYMaHOO',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'POST' => 1,
            'HEAD' => 2,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/api/login' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'token.login',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/api/register' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::4ce53XaRQI0FJlex',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/api/news' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::r0jjYByYi6vfgbQH',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/api/symbols' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::74Jp5O6PbivnQIL8',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/api/tickers' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::KjheTHq6EM4vE1C8',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/api/orderbook' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::U5OI9NdXduJ1Gqqw',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/api/chart' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::LvTHmHfKbyUeRu6v',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/api/trade' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::Mm404btBbO5DlTcs',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/api/orders' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::rupi0hDKdg6qIZO4',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/api/wallets' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::wtLY5bEzxLlWqZyC',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/api/wallet/transactions' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::z7X4NRNM9dI3knr3',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/api/deposit' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::xvJbzXE5S3HtTYvU',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/api/v1/eco/index' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::nxhyLelOwNpfcCYz',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/api/v1/eco/trades' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::S9NXGAmmOjAOv8Xn',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/api/v1/eco/orderbook' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::7iYWfvXGLP4PwowP',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/api/v1/eco/orders' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::ilJWrmiD3lupWnAe',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/api/v1/eco/trade/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::oHeNEq95YteqoZLi',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/api/v1/eco/order/cancel' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::ej8NzRVyQ0xHZThu',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/clear' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::j3j9pHK8VrmecAUH',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/login/wp' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'login.wp.user',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/verify-csrf' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'verify-csrf',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cron' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cron',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cron/practice' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'practice.cron',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cron/schedule' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'schedule.cron',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cron/crypto/price' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'crypt.price',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cron/bot/result' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'bot.result',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cron/bot/missed' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'bot.missed',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cron/mlm/ranks' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'mlm.ranks',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cron/mlm/daily' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'mlm.daily',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cron/mlm/membership' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'mlm.membership',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cron/forex/result' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'forex.result',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cron/forex/missed' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'forex.missed',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cron/staking/profit' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'staking.profit',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cron/utxo/verify/transaction' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cron.utxo.verify.transaction',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cron/mailwiz/send' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cron.mailwiz.send',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cron/provider/currencies' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'provider.currencies',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cron/provider/currenciesToTable' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'provider.currenciesToTable',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cron/provider/marketsToTable' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'provider.marketsToTable',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cron/provider/pairsToTable' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'provider.pairsToTable',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cron/provider/fetch/order' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'provider.fetchorder',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cron/check_update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cron.check_update',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/cron/investment/check' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'cron.check_investment',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/generate-qrcode' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::1tGcxY9cc8CjCTQd',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ipn/paypal' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ipn.paypal',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ipn/paypal_sdk' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ipn.paypal_sdk',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ipn/perfect_money' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ipn.perfect_money',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ipn/stripe' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ipn.stripe',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ipn/stripe_js' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ipn.stripe_js',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ipn/stripe_v3' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ipn.stripe_v3',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ipn/skrill' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ipn.skrill',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ipn/paytm' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ipn.paytm',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ipn/payeer' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ipn.payeer',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ipn/paystack' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ipn.paystack',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ipn/voguepay' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ipn.voguepay',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ipn/razorpay' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ipn.razorpay',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ipn/instamojo' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ipn.instamojo',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ipn/blockchain' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ipn.blockchain',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ipn/blockio' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ipn.blockio',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ipn/coinpayments' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ipn.coinpayments',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ipn/coinpayments_fiat' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ipn.coinpayments_fiat',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ipn/coingate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ipn.coingate',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ipn/coinbase_commerce' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ipn.coinbase_commerce',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ipn/mollie' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ipn.mollie',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/ipn/cashmaal' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ipn.cashmaal',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/install' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'install',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'home',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/about' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'frontend.pages.about',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/banned' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'banned',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/subscribe' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'subscribe',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/contact' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'contact',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'contact.send',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/profile' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.profile.show',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/login' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'login',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'generated::2s4dRYJRwYNVb5Vp',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/login/web3-login-message' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'web3.login.message',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/login/web3-login-verify' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'web3.login.verify',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/_web3/signature' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'web3.signature',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/_web3/link' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'web3.link',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/_web3/login' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'web3.login',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/logout' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'logout',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/forgot-password' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'password.request',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'password.email',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/reset-password' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'password.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/register' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'register',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'generated::5OG6HLWzfULKSR4A',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/email/verify' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'verification.notice',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/email/verification-notification' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'verification.send',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/profile-information' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user-profile-information.update',
          ),
          1 => NULL,
          2 => 
          array (
            'PUT' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/password' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user-password.update',
          ),
          1 => NULL,
          2 => 
          array (
            'PUT' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/confirm-password' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'password.confirm',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'generated::Wv9XLVJ92EyM8cwB',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/confirmed-password-status' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'password.confirmation',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/two-factor-challenge' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'two-factor.login',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'generated::St5aMuntbQd1xDe3',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/two-factor-authentication' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'two-factor.enable',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'two-factor.disable',
          ),
          1 => NULL,
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/two-factor-qr-code' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'two-factor.qr-code',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/two-factor-recovery-codes' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'two-factor.recovery-codes',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'generated::V3yyhbjRV9bt48xg',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/app' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'app.home',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
            'POST' => 2,
            'PUT' => 3,
            'PATCH' => 4,
            'DELETE' => 5,
            'OPTIONS' => 6,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/pusher/auth' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/dashboard' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.profile.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.home',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/binary/crypto/rate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.binary.crypto.rate',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/binary/trade/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.binary.trade.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/binary/trade/result' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.binary.trade.result',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/binary/trade/schedule' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.binary.trade.schedule',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/binary/add/practice/balance' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.binary.add.practice.balance',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/binary/practice/crypto/rate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.binary.practice.crypto.rate',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/binary/practice/exchange' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.binary.practice.exchange',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/binary/practice/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.binary.practice.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/binary/practice/result' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.binary.practice.result',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/binary/practice/schedule' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.binary.practice.schedule',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/api/tokens/edit' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::m4uMkqLhtgzBe87f',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/api/tokens/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::0Hc0JTIXWaIMePbn',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/api/tokens/delete' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::veRSC1YL0JPOb9ge',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/fetch/api/tokens' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/fetch/data' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.generated::6yrI7RNwDyCmmqnO',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/fetch/kyc/data' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.generated::oWvLHtJf02Qkk0wl',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/fetch/support' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.generated::sP6A5hDvXJvRRtc6',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/fetch/trade/orders' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.generated::nnQfYnK6tvtZvHAG',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/fetch/binary/data' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.binary.',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/fetch/binary/trade/wallet' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.binary.trade.wallet',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/fetch/binary/trade/contracts' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.binary.trade.contract.log',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/fetch/binary/trade/orders' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.binary.trade.orders',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/fetch/binary/practice/contracts' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.binary.practice.contract.log',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/fetch/binary/practice/orders' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.binary.practice.orders',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/fetch/wallets' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.wallets',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/fetch/wallet' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.wallet.balance',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/fetch/withdraw/history' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.withdraw.history',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/fetch/deposit/history' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.deposit.history',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/fetch/transaction/history' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.transaction.history',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/fetch/news' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.news',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/trade/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.trade.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/trade/cancel' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.trade.cancel',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/trade/fetch_order' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.trade.',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/wallet/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.wallet.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/wallet/fetch' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.wallet.fetch',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/wallet/regenerate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.wallet.regenerate',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/wallet/deposit' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.wallet.deposit',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/wallet/withdraw' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.wallet.withdraw',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/wallet/transfer' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.wallet.transfer',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/wallet/connect' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.wallet.connect',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/wallet/disconnect' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.wallet.disconnect',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/watchlists' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.watchlists',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/watchlist/data' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::yXqlLuefBDxKI6FH',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/watchlist/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.watchlist.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/watchlist/delete' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.watchlist.delete',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/kyc' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.kyc',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/kyc/application' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.kyc.application',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/kyc/application/view' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.kyc.application.view',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/kyc/submit' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.kyc.submit',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/fetch/bot' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.info',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/fetch/bot/info' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.bot',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/store/bot' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.store.bot',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/fetch/ico' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.ico',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/store/ico' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.store.ico',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/store/ico/rec_wallet' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.store.ico.rec_wallet',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/fetch/network' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.network',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/mlm/withdraw' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.mlm.withdraw',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/mlm/deposit' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.mlm.deposit',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/fetch/forex' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.forex',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/forex/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.forex.create',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/forex/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.forex.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/forex/withdraw' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.forex.withdraw',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/forex/deposit' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.forex.deposit',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/fetch/staking' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.staking',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/fetch/staking/logs' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.staking.logs',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/staking/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.staking.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/staking/claim' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.staking.claim',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/staking/cancel' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.staking.cancel',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/p2p/offers' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::ZNNX3gJZ61dYt5s2',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::GYI5P3PI3NrVwSIm',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/p2p/orders' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::buC8oQARK49tGoOw',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::FFggc4NaEOy84BmQ',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/p2p/orders/user' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::T0n1fHmmcFVqvwpD',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/p2p/seller' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::6mE1t6MYxiSfy1c2',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/eco/market/pair' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::UEZLEhEYVw9M6tBX',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/eco/market/volume' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::krLCTbTnY5HAW3go',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/eco/market/symbol' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::5AnSxyTgR3ubrexS',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/eco/trades' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::VBBIiDDjBHsVwyDM',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/eco/orders' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::XnCzPNIB8tNb8Glg',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/eco/orderbook' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::vSiVu9aUdGKF0iAC',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/eco/orderbook/history' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::BzvEJ7X5icqPmT15',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/eco/index' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::P4LeDDiO4wMYpMMv',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/eco/trade/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::qCFMjLGsx2JJs3Rs',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/eco/order/cancel' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::WQgXCBaV6DObS5s2',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/eco/wallets' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::TcqbSVLIe2GbUFkZ',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/eco/wallet/balance' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::crGub1u7gVgsHB6S',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/eco/wallet/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::sKEXfU4PjcFSXTL0',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/eco/wallet/transfer' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::0nKcw00rLOFXPA6c',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/eco/wallet/withdraw' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::YYkDPbo46o3zJbpz',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/knowledge/categories/check_slug' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.knowledge.categories.check_slug',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/knowledge/tags/check_slug' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.knowledge.tags.check_slug',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/knowledge/articles/check_slug' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.knowledge.articles.check_slug',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/knowledge/articles' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.knowledge.articles.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/knowledge/faq' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.knowledge.faq.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/knowledge' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.knowledge.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/marketplace/fetch' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.marketplace.',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/marketplace/wishlist' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.marketplace.generated::QT0J3EtnFCBy75cM',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/marketplace/order-history' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.marketplace.generated::Db9DbCqyF1ZaCAyh',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/marketplace/order/activate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.marketplace.generated::jaZDXO41vZWdFpHY',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/marketplace/purchase' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.marketplace.generated::YGRzpe1aciIS3gPb',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/marketplace/wishlist/add' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.marketplace.generated::ctPCTCNDBCGwAZHo',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/marketplace/wishlist/remove' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.marketplace.generated::Bly3gAnhYstZnYjN',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/marketplace/get-wishlist-product' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.marketplace.generated::8MDeq92WFkKuxPiW',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/deposit/wallet' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.deposit',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
            'POST' => 2,
            'PUT' => 3,
            'PATCH' => 4,
            'DELETE' => 5,
            'OPTIONS' => 6,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/deposit/insert' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.deposit.insert',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/deposit/preview' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.deposit.preview',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/deposit/confirm' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.deposit.confirm',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/deposit/manual' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.deposit.manual.confirm',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'user.deposit.manual.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/deposit/history' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.deposit.history',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/withdraw' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.withdraw.money',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/withdraw/preview' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.withdraw.preview',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'user.withdraw.submit',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/withdraw/history' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.withdraw.history',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/support/tickets' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.support.ticket.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'user.support.ticket.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/support/tickets/upload-image' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.support.ticket.upload-image',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/popups/disable' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.popups.disable',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/investment' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::sfKrhrSMHDyGxuM3',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/investment/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::pLQVD9wat03zATeH',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/user/investment/log/cancel' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.log.generated::ySnI3zeP11rglloD',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/dashboard' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.dashboard',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/market' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.market',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/tokens' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.tokens.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.tokens.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/tokens/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.tokens.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/api-tokens' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.api.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/clear' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.clean',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.update',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'POST' => 1,
            'HEAD' => 2,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/update/check' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.update.check',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/lic/activate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.lic.activate',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'POST' => 1,
            'HEAD' => 2,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/lic/deactivate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.lic.deactivate',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'POST' => 1,
            'HEAD' => 2,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/tests' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.tests',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/test/cors' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.test.cors',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/terminal' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.terminal',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/cron' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.cron',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/notification' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.notifications',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/notification/clean' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.notifications.clean',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/notification/clean/seen' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.notifications.clean.seen',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/users' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.all',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/users/import' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.import',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/users/importing' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.importing',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/users/template' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.template',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/users/remove' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.remove',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/users/send-email' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.email.all',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.email.send',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/user/wallet/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.wallet.create',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/user/wallet/frozen/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.wallet.frozen.create',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/binary/trade/log' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.binary.trade.log.list',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/binary/practice/trade/log' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.binary.practice.log.list',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/trade/log' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.exchange.log.list',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/provider' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.provider.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/provider/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.provider.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/provider/activate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.provider.activate',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/provider/deactivate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.provider.deactivate',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/provider/verify' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.provider.verify',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/provider/markets/activate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.provider.market.activate',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/provider/markets/deactivate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.provider.market.deactivate',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/provider/markets/bulk/activate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.provider.market.bulk.activate',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/provider/markets/bulk/deactivate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.provider.market.bulk.deactivate',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/provider/markets/delete' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.provider.market.delete',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/provider/refresh' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.provider.refresh',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/payment/provider' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.payment.provider.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/payment/manual' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.payment.manual.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/payment/manual/new' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.payment.manual.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.payment.manual.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/deposit' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.deposit.list',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/deposit/reject' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.deposit.reject',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/deposit/approve' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.deposit.approve',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/deposit/thirdparty/confirm' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.deposit.thirdparty.confirm',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/withdraw/log' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.withdraw.log',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/withdraw/approve' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.withdraw.approve',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/withdraw/reject' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.withdraw.reject',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/withdraw' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.withdraw.method.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/withdraw/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.withdraw.method.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.withdraw.method.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/withdraw/activate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.withdraw.method.activate',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/withdraw/deactivate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.withdraw.method.deactivate',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/report/transaction' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.report.transaction',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/report/wallet' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.report.wallet',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/report/wallet/cancel' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.report.wallet.cancel',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/report/wallet/transfer/funding/approve' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.report.wallet.transfer.funding.approve',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/report/wallet/transfer/funding/reject' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.report.wallet.transfer.funding.reject',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/report/login/history' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.report.login.history',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/tickets' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ticket',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/ticket/delete' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ticket.delete',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/settings' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.setting.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.setting.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/settings/cors/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.setting.cors.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/currencies' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.currency.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.currency.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/currencies/rates' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.currency.rates',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/activate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.currency.activate',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/scripts' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.scripts',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.script.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        2 => 
        array (
          0 => 
          array (
            '_route' => 'admin.script.delete',
          ),
          1 => NULL,
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/scripts/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.script.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/platform' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.platform',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.platform.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/setting/logo-icon' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.setting.logo_icon',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.setting.logo_icon_update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/extensions' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.extensions.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/extensions/verify' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.extensions.verify',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/extensions/activate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.extensions.activate',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/extensions/deactivate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.extensions.deactivate',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/bot' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.bot.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/bot/new' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.bot.new',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/bot/set' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.bot.set',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/bot/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.bot.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/bot/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.bot.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/bot/log' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.bot.log.list',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/ico' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ico.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/ico/new' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ico.new',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/ico/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ico.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/ico/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ico.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/ico/log' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ico.log.list',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/ico/log/pay' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ico.pay',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/mlm' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mlm.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/mlm/new' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mlm.new',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/mlm/set' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mlm.set',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/mlm/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mlm.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/mlm/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mlm.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/mlm/remove' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mlm.remove',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/mlm/regenerate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mlm.regenerate',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/mlm/log' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mlm.log.list',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/mlm/transaction/logs' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mlm.transaction.logs',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/mlm/transaction/statusUpdate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mlm.transaction.statusUpdate',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/mlm/bv/logs' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mlm.bv.logs',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/forex' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.forex.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/forex/new' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.forex.new',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/forex/verify' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.forex.verify',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/forex/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.forex.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/forex/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.forex.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/forex/investment' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.forex.investment.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/forex/investment/new' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.forex.investment.new',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/forex/investment/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.forex.investment.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/forex/investment/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.forex.investment.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/forex/investment/set' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.forex.investment.set',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/forex/investment/log' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.forex.investment.log.list',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/forex/signals' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.forex.signals.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/forex/signals/new' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.forex.signals.new',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/forex/signals/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.forex.signals.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/forex/signals/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.forex.signals.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/forex/log' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.forex.log.list',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/staking' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.staking.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/staking/new' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.staking.new',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/staking/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.staking.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/staking/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.staking.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/staking/logs' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.staking.log.list',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/p2p' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.p2p.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/p2p/sellers' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.p2p.sellers.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/p2p/orders' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.p2p.orders.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/p2p/offers' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.p2p.offers.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/p2p/methods' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.p2p.methods.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/eco/blockchains' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/eco/markets' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.markets.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/eco/markets/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.markets.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/eco/markets/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.markets.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/eco/transactions' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.transactions.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/knowledge/categories/destroy' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.categories.massDestroy',
          ),
          1 => NULL,
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/knowledge/categories' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.categories.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.categories.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/knowledge/categories/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.categories.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/knowledge/tags/destroy' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.tags.massDestroy',
          ),
          1 => NULL,
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/knowledge/tags' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.tags.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.tags.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/knowledge/tags/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.tags.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/knowledge/articles/destroy' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.articles.massDestroy',
          ),
          1 => NULL,
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/knowledge/articles' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.articles.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.articles.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/knowledge/articles/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.articles.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/knowledge/faq-categories/destroy' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.faq-categories.massDestroy',
          ),
          1 => NULL,
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/knowledge/faq-categories' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.faq-categories.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.faq-categories.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/knowledge/faq-categories/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.faq-categories.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/knowledge/faq-questions/destroy' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.faq-questions.massDestroy',
          ),
          1 => NULL,
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/knowledge/faq-questions' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.faq-questions.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.faq-questions.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/knowledge/faq-questions/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.faq-questions.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/ecommerce/dashboard' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ecommerce.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/ecommerce/categories' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ecommerce.category.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ecommerce.category.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/ecommerce/categories/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ecommerce.category.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/ecommerce/orders' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ecommerce.orders.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/ecommerce/product' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ecommerce.product.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/ecommerce/product/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ecommerce.product.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/ecommerce/product/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ecommerce.product.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/mailwiz/campaigns' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.campaigns.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.campaigns.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/mailwiz/campaigns/all/progress' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.campaigns.progress',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/mailwiz/templates' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.templates.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.templates.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/mailwiz/templates/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.templates.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/mailwiz/templates/rename' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.templates.rename',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/mailwiz/blocks' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.blocks.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.blocks.update',
          ),
          1 => NULL,
          2 => 
          array (
            'PUT' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        2 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.blocks.destroy',
          ),
          1 => NULL,
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/mailwiz/editor/auth' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/mailwiz/editor/session' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.generated::McnCjouBAo25ipbm',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/mailwiz/editor/blocks' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.generated::CF5rELYisRpD1rNV',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/mailwiz/editor/blocks/delete' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.generated::iJPn2vh0zVDmK13y',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/mailwiz/images/upload-url' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.generated::cHHLpte7V4L81iF9',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/mailwiz/images/upload' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.generated::z6SQaRtDEcUazt9d',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/mailwiz/images/save' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.generated::F0oKJ0fDLKvnKlP6',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/mailwiz/image' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.generated::JTHh9rBpQAouNNr2',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/mailwiz/images' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.generated::sYVl8Ps49Ryq5eAT',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.generated::3n5Jkz8fOvkGv39O',
          ),
          1 => NULL,
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/total-emails-sent' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.totalEmailsSent',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/active-campaigns-count' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.activeCampaignsCount',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/completed-campaigns-count' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.completedCampaignsCount',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/seo-manager' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.seo',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/template/index' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.template.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/template/save' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.template.save',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/template/set' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.template.set',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/kyc/list' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.kyc.list',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/kyc/templates' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.kyc.templates',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/kyc/template/new' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.kyc.template.new',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/kyc/tempalte/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.kyc.template.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/kyc/tempalte/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.kyc.template.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/kyc/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.kyc.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/kyc/delete' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.kyc.delete',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/kyc/activate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.kyc.activate',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/kyc/deactivate' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.kyc.deactivate',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/sidebar/admin' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.sidebar.admin',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/sidebar/user' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.sidebar.user',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/settings/database' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.settings.database',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/database/binary/practice/logs/clean' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.database.binary.practice.logs.clean',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/database/binary/trade/logs/clean' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.database.binary.trade.logs.clean',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/database/trade/logs/clean' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.database.trade.logs.clean',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/database/forex/investments/logs/clean' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.database.forex.investments.logs.clean',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/database/bot/investments/logs/clean' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.database.bot.investments.logs.clean',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/database/staking/logs/clean' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.database.staking.logs.clean',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/database/ico/logs/clean' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.database.ico.logs.clean',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/database/wallets/clean' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.database.wallets.clean',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/database/refresh/permissions' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.database.refresh.permissions',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/database/sidebar/refresh' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.database.refresh.sidebar',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/database/investment/table/fix' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.database.investment.table.fix',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/alerts/remove/install' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.alerts.remove_install_file',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/popups' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.popups.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/popups/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.popups.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/popups/store' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.popups.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/popups/remove' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.popups.remove',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/locale' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.locale.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.locale.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/locale/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.locale.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/permissions/destroy' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.permissions.massDestroy',
          ),
          1 => NULL,
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/permissions' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.permissions.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.permissions.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/permissions/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.permissions.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/roles/destroy' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.roles.massDestroy',
          ),
          1 => NULL,
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/roles' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.roles.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.roles.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/roles/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.roles.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/users/email/send' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.email',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/settings/email' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.settings.mail.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/settings/email/update' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.settings.mail.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/settings/email/templates' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.settings.mail.templates',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/settings/email/settings' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.settings.mail.email',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.settings.mail.settings.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/settings/email/test' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.settings.mail.test',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/settings/email/test-smtp' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.settings.mail.test.smtp',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.settings.mail.test.smtp.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/settings/email/sms/settings' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.settings.mail.sms',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.settings.mail.',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/settings/email/sms/test' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.settings.mail.sms.test',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/settings/email/push-notification/settings' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.settings.mail.push',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.settings.mail.push.update',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/investment/plans' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.investment.plans.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.investment.plans.store',
          ),
          1 => NULL,
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/investment/plans/create' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.investment.plans.create',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/admin/investment/logs' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.investment.logs.index',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      '/pix' => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'pix',
          ),
          1 => NULL,
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
    ),
    2 => 
    array (
      0 => '{^(?|/livewire/message/([^/]++)(*:33)|/([^/]++)/livewire/message/([^/]++)(*:75)|/l(?|ivewire/preview\\-file/([^/]++)(*:117)|ang/([^/]++)(*:137))|/a(?|dmin/(?|lo(?|g\\-viewer(?|/api/f(?|olders/([^/]++)(?|/(?|download(*:215)|clear\\-cache(*:235))|(*:244))|iles/([^/]++)(?|/(?|download(*:281)|clear\\-cache(*:301))|(*:310)))|(?:/((?:.*)))?(*:334))|cale/([^/]++)(?|(*:359)|/edit(*:372)|(*:380)))|t(?|okens/([^/]++)(?|(*:411)|/edit(*:424)|(*:432))|erminal/run/([^/]++)(*:461)|icket(?|s/(?|view/([^/]++)(*:495)|([^/]++)/chat(?|(*:519)))|/(?|reply/([^/]++)(*:547)|close/([^/]++)(*:569)|download/([^/]++)(*:594))))|notification/read/([^/]++)(*:631)|user(?|s/(?|login/history/([^/]++)(*:673)|referral/log/([^/]++)(*:702))|/(?|detail/([^/]++)(*:730)|update/([^/]++)(*:753)|add\\-sub\\-balance/([^/]++)(*:787)|([^/]++)/wallets/(?|fetch(*:820)|eco(*:831))|add\\-sub\\-balance\\-frozen/([^/]++)(*:874)|send\\-email/([^/]++)(?|(*:905))|tra(?|nsactions/([^/]++)(*:938)|de/(?|traded/([^/]++)(*:967)|wining/([^/]++)(*:990)|losing/([^/]++)(*:1013)|draw/([^/]++)(*:1035)))|deposits/(?|([^/]++)(*:1066)|via/([^/]++)/([^/]++)/([^/]++)(*:1105))|withdrawals/(?|([^/]++)(*:1138)|via/([^/]++)/([^/]++)/([^/]++)(*:1177))|practice/trade/([^/]++)(*:1210)))|p(?|rovider/(?|edit/([^/]++)(*:1249)|balances/([^/]++)(*:1275)|install/([^/]++)(*:1300)|activater/([^/]++)(*:1327)|updater/([^/]++)(*:1352)|([^/]++)/(?|currencies(*:1383)|markets(*:1399)))|ayment/(?|provider/(?|edit/([^/]++)(*:1445)|update/([^/]++)(*:1469)|remove/([^/]++)(*:1493))|manual/(?|edit/([^/]++)(*:1526)|update/([^/]++)(*:1550)))|2p/(?|sellers/([^/]++)(*:1583)|o(?|rders/(?|([^/]++)(*:1613)|offer/([^/]++)(*:1636)|view/([^/]++)(*:1658)|m(?|essage(*:1677)|oderate/([^/]++)(*:1702)))|ffers/([^/]++)(*:1727))|methods/([^/]++)(*:1753))|opups/(?|edit/([^/]++)(*:1785)|update/([^/]++)(*:1809))|ermissions/([^/]++)(?|(*:1841)|/edit(*:1855)|(*:1864)))|deposit/(?|details/([^/]++)(*:1902)|via/([^/]++)(?:/([^/]++))?(*:1937)|thirdparty/remove/([^/]++)(*:1972))|withdraw/(?|via/([^/]++)(?:/([^/]++))?(*:2020)|details/([^/]++)(*:2045)|edit/([^/]++)(?|(*:2070)))|r(?|eport/login/ipHistory/([^/]++)(*:2115)|oles/(?|([^/]++)(?|(*:2143)|/edit(*:2157)|(*:2166))|del(?|ete(*:2185)|/([^/]++)(*:2203))|assign(*:2219)))|e(?|xtensions/(?|install/([^/]++)(*:2263)|activater/([^/]++)(*:2290)|update/([^/]++)(*:2314))|co(?|/(?|blockchains/([^/]++)/(?|wallet(?|(*:2366)|/(?|create(*:2385)|add(?|/(?|mnemonic(*:2412)|xpub(*:2425)|privateKey(*:2444))|(*:2454))|remove(*:2470)|encryptData(*:2490)))|tokens(?|(*:2510)|/(?|new(*:2526)|s(?|tore/([^/]++)(*:2552)|ync/([^/]++)(*:2573))|update(?|/([^/]++)(*:2601)|Status(*:2616))|re(?|move(*:2635)|gister(*:2650))|fe(?|tch/contract/([^/]++)(*:2686)|es/account/create(*:2712))|add(?|/(?|contract(*:2740)|icon(*:2753))|(*:2763))|deploy(*:2779)|withdraw/settings(?:/([^/]++))?(*:2819)))|fees(?|(*:2837)|/withdraw(*:2855))|mainnet_tokens(*:2879)|([^/]++)/addresses(?|(*:2909)|/(?|store(*:2927)|activate/(?|([^/]++)(*:2956)|check/([^/]++)(*:2979))))|utxo(?|(*:2998)|/(?|store(*:3016)|clean(*:3030)|encryptData(*:3050)))|([^/]++)/withdrawal(*:3080))|transactions/([^/]++)(*:3111))|mmerce/(?|categories/(?|edit/([^/]++)(*:3158)|([^/]++)(*:3175)|delete/([^/]++)(*:3199))|product/(?|edit/([^/]++)(*:3233)|update/([^/]++)(*:3257)|delete/([^/]++)(*:3281)|license/(?|([^/]++)(*:3309)|store(*:3323)|update(*:3338))))))|bot/(?|edit/([^/]++)(*:3372)|time/(?|([^/]++)(*:3397)|store(*:3411)|update(*:3426)))|i(?|co/edit/([^/]++)(*:3457)|nvestment/(?|plans/([^/]++)(?|/toggle\\-(?|status(*:3514)|recommanded(*:3534))|(*:3544))|logs/([^/]++)/cancel(*:3574)))|m(?|lm/edit/([^/]++)(*:3605)|ailwiz/(?|campaigns/(?|create(?:/([^/]++))?(*:3657)|([^/]++)(?|/(?|edit(*:3685)|st(?|art(*:3702)|op(*:3713))|res(?|tart(*:3733)|ume(*:3745))|pause(*:3760)|targets(*:3776))|(*:3786)))|templates/([^/]++)(?|/edit(*:3823)|(*:3832))))|f(?|orex/(?|edit/([^/]++)(*:3869)|investment/edit/([^/]++)(*:3902)|signals/edit/([^/]++)(*:3932))|rontend\\-content/([^/]++)(*:3967))|s(?|taking/(?|edit/([^/]++)(*:4004)|verify/([^/]++)(*:4028))|idebar/(?|edit/([^/]++)/([^/]++)(*:4070)|update/([^/]++)/([^/]++)(*:4103)|([^/]++)/(?|activate(*:4132)|deactivate(*:4151))|edit/([^/]++)/([^/]++)/submenu/([^/]++)(*:4200)|update/([^/]++)/([^/]++)/submenu/([^/]++)(*:4250)|submenu/([^/]++)/(?|activate/([^/]++)/([^/]++)(*:4305)|deactivate/([^/]++)/([^/]++)(*:4342)))|ettings/email/template/(?|edit/([^/]++)(*:4392)|update/([^/]++)(*:4416)))|k(?|nowledge/(?|categories/([^/]++)(?|(*:4465)|/edit(*:4479)|(*:4488))|tags/([^/]++)(?|(*:4514)|/edit(*:4528)|(*:4537))|articles/([^/]++)(?|(*:4567)|/edit(*:4581)|(*:4590))|faq\\-(?|categories/([^/]++)(?|(*:4630)|/edit(*:4644)|(*:4653))|questions/([^/]++)(?|(*:4684)|/edit(*:4698)|(*:4707))))|yc/(?|tempalte/edit/([^/]++)(*:4747)|view/([^/]++)/([^/]++)(*:4778))))|p(?|i/v1/eco/chart/([^/]++)/([^/]++)/([^/]++)/(?|json(*:4843)|([^/]++)/([^/]++)(*:4869))|p/([\\/\\w\\.-]*)(*:4893)))|/ipn/flutterwave/([^/]++)/([^/]++)(*:4938)|/trad(?|ing/([^/]++)(*:4967)|e/([^/]++)/([^/]++)(?|(*:4998)))|/placeholder\\-image/([^/]++)(*:5037)|/re(?|set\\-password/([^/]++)(*:5074)|gister/([^/]++)(*:5098))|/email/verify/([^/]++)/([^/]++)(*:5139)|/user/(?|fetch/(?|support/ticket/([^/]++)(*:5189)|trade/orders/([^/]++)/([^/]++)(*:5228)|binary/(?|trade/(?|([^/]++)/([^/]++)(*:5273)|wining/contracts(*:5298)|losing/contracts(*:5323)|draw/contracts(*:5346))|practice/([^/]++)/([^/]++)(*:5382)|contract/view/([^/]++)/([^/]++)(*:5422))|wallet/([^/]++)/([^/]++)/([^/]++)(*:5465)|ico/([^/]++)(*:5486))|trade/([^/]++)/([^/]++)(*:5519)|w(?|allet/deposit/(?|verify/([^/]++)(*:5564)|cancel/([^/]++)(*:5588))|ithdraw/wallet/([^/]++)(*:5621))|p2p/(?|o(?|ffers/([^/]++)(?|(*:5659))|rders/([^/]++)(?|(*:5686)|/(?|c(?|hat(?|(*:5709))|onfirm(*:5725)|ancel(*:5739))|review(*:5755)|transaction(*:5775))))|seller/(?|([^/]++)(?|(*:5808))|offer(?|(*:5826)|/([^/]++)(*:5844))|apply(*:5859)|payment\\-methods(?|(*:5887)|/([^/]++)(?|(*:5908)))))|eco/(?|wallet/(?|([^/]++)/([^/]++)(*:5955)|logs/([^/]++)/([^/]++)(*:5986)|transfer/funds(*:6009))|chart/([^/]++)/([^/]++)/([^/]++)/(?|json(*:6059)|request(*:6075)|([^/]++)/([^/]++)(*:6101)))|knowledge/(?|categories/([^/]++)/([^/]++)(*:6153)|tags/([^/]++)/([^/]++)(*:6184)|articles/([^/]++)/([^/]++)(*:6219)|faq/([^/]++)(*:6240))|marketplace/(?|product/(?|details/([^/]++)/([^/]++)(*:6301)|tag/([^/]++)(*:6322))|add\\-to\\-wishlist/([^/]++)(*:6358)|wishlist\\-remove/([^/]++)(*:6392))|support/tickets/([^/]++)/(?|messages(*:6438)|send(*:6451))|investment/(?|([^/]++)(?|(*:6486))|log(*:6499)))|/(.*)(*:6515))/?$}sDu',
    ),
    3 => 
    array (
      33 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'livewire.message',
          ),
          1 => 
          array (
            0 => 'name',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      75 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'livewire.message-localized',
          ),
          1 => 
          array (
            0 => 'locale',
            1 => 'name',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      117 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'livewire.preview-file',
          ),
          1 => 
          array (
            0 => 'filename',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      137 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::c2LxJyOumLUJFUNS',
          ),
          1 => 
          array (
            0 => 'locale',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      215 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'log-viewer.folders.download',
          ),
          1 => 
          array (
            0 => 'folderIdentifier',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      235 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'log-viewer.folders.clear-cache',
          ),
          1 => 
          array (
            0 => 'folderIdentifier',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      244 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'log-viewer.folders.delete',
          ),
          1 => 
          array (
            0 => 'folderIdentifier',
          ),
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      281 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'log-viewer.files.download',
          ),
          1 => 
          array (
            0 => 'fileIdentifier',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      301 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'log-viewer.files.clear-cache',
          ),
          1 => 
          array (
            0 => 'fileIdentifier',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      310 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'log-viewer.files.delete',
          ),
          1 => 
          array (
            0 => 'fileIdentifier',
          ),
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      334 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'log-viewer.index',
            'view' => NULL,
          ),
          1 => 
          array (
            0 => 'view',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      359 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.locale.show',
          ),
          1 => 
          array (
            0 => 'locale',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      372 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.locale.edit',
          ),
          1 => 
          array (
            0 => 'locale',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      380 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.locale.update',
          ),
          1 => 
          array (
            0 => 'locale',
          ),
          2 => 
          array (
            'PUT' => 0,
            'PATCH' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.locale.destroy',
          ),
          1 => 
          array (
            0 => 'locale',
          ),
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      411 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.tokens.show',
          ),
          1 => 
          array (
            0 => 'token',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      424 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.tokens.edit',
          ),
          1 => 
          array (
            0 => 'token',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      432 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.tokens.update',
          ),
          1 => 
          array (
            0 => 'token',
          ),
          2 => 
          array (
            'PUT' => 0,
            'PATCH' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.tokens.destroy',
          ),
          1 => 
          array (
            0 => 'token',
          ),
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      461 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.terminal.run',
          ),
          1 => 
          array (
            0 => 'command',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      495 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ticket.view',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      519 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ticket.chat.get',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ticket.chat.send',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      547 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ticket.reply',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      569 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ticket.close',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      594 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ticket.download',
          ),
          1 => 
          array (
            0 => 'ticket',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      631 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.notification.read',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      673 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.login.history.single',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      702 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.referral.log',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      730 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.detail',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      753 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      787 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.addSubBalance',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      820 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      831 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.generated::1Jng4YmN5I4ii9Gd',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      874 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.addSubBalanceFrozen',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      905 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.email.single',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.generated::3BK5opYWfWsnHcul',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      938 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.transactions',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      967 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.traded',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      990 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.wining',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1013 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.losing',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1035 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.draw',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1066 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.deposits',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1105 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.deposits.method',
            'type' => NULL,
          ),
          1 => 
          array (
            0 => 'method',
            1 => 'type',
            2 => 'userId',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1138 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.withdrawals',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1177 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.withdrawals.method',
            'type' => NULL,
          ),
          1 => 
          array (
            0 => 'method',
            1 => 'type',
            2 => 'userId',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1210 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.users.practice.log',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1249 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.provider.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1275 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.provider.balances',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1300 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.provider.install',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'POST' => 1,
            'HEAD' => 2,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1327 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.provider.activater',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1352 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.provider.updater',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1383 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.provider.currencies.index',
          ),
          1 => 
          array (
            0 => 'provider',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1399 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.provider.markets.index',
          ),
          1 => 
          array (
            0 => 'provider',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1445 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.payment.provider.edit',
          ),
          1 => 
          array (
            0 => 'alias',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1469 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.payment.provider.update',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1493 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.payment.provider.remove',
          ),
          1 => 
          array (
            0 => 'code',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1526 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.payment.manual.edit',
          ),
          1 => 
          array (
            0 => 'alias',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1550 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.payment.manual.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1583 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.p2p.sellers.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1613 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.p2p.orders.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1636 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.p2p.orders.offer',
          ),
          1 => 
          array (
            0 => 'offer_id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1658 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.p2p.orders.view',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1677 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.p2p.orders.message',
          ),
          1 => 
          array (
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1702 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.p2p.orders.moderate',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1727 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.p2p.offers.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1753 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.p2p.methods.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1785 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.popups.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1809 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.popups.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1841 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.permissions.show',
          ),
          1 => 
          array (
            0 => 'permission',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1855 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.permissions.edit',
          ),
          1 => 
          array (
            0 => 'permission',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      1864 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.permissions.update',
          ),
          1 => 
          array (
            0 => 'permission',
          ),
          2 => 
          array (
            'PUT' => 0,
            'PATCH' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.permissions.destroy',
          ),
          1 => 
          array (
            0 => 'permission',
          ),
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1902 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.deposit.details',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1937 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.deposit.method',
            'type' => NULL,
          ),
          1 => 
          array (
            0 => 'method',
            1 => 'type',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      1972 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.deposit.thirdparty.remove',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      2020 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.withdraw.method',
            'type' => NULL,
          ),
          1 => 
          array (
            0 => 'method_id',
            1 => 'type',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      2045 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.withdraw.details',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      2070 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.withdraw.method.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.withdraw.method.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      2115 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.report.login.ipHistory',
          ),
          1 => 
          array (
            0 => 'ip',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      2143 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.roles.show',
          ),
          1 => 
          array (
            0 => 'role',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      2157 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.roles.edit',
          ),
          1 => 
          array (
            0 => 'role',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2166 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.roles.update',
          ),
          1 => 
          array (
            0 => 'role',
          ),
          2 => 
          array (
            'PUT' => 0,
            'PATCH' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.roles.destroy',
          ),
          1 => 
          array (
            0 => 'role',
          ),
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      2185 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.roles.delete',
          ),
          1 => 
          array (
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2203 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.roles.del',
          ),
          1 => 
          array (
            0 => 'role',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      2219 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.roles.assign',
          ),
          1 => 
          array (
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2263 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.extensions.install',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'POST' => 1,
            'HEAD' => 2,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      2290 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.extensions.activater',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      2314 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.extensions.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      2366 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.wallet.index',
          ),
          1 => 
          array (
            0 => 'chain',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2385 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.wallet.create',
          ),
          1 => 
          array (
            0 => 'chain',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2412 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.wallet.add.mnemonic',
          ),
          1 => 
          array (
            0 => 'chain',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2425 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.wallet.add.xpub',
          ),
          1 => 
          array (
            0 => 'chain',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2444 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.wallet.add.privateKey',
          ),
          1 => 
          array (
            0 => 'chain',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2454 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.wallet.add',
          ),
          1 => 
          array (
            0 => 'chain',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2470 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.wallet.remove',
          ),
          1 => 
          array (
            0 => 'chain',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2490 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.wallet.encryptData',
          ),
          1 => 
          array (
            0 => 'chain',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2510 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.tokens.index',
          ),
          1 => 
          array (
            0 => 'chain',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2526 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.tokens.new',
          ),
          1 => 
          array (
            0 => 'chain',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2552 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.tokens.store',
          ),
          1 => 
          array (
            0 => 'chain',
            1 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      2573 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.tokens.sync',
          ),
          1 => 
          array (
            0 => 'chain',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      2601 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.tokens.update',
          ),
          1 => 
          array (
            0 => 'chain',
            1 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      2616 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.tokens.update.status',
          ),
          1 => 
          array (
            0 => 'chain',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2635 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.tokens.remove',
          ),
          1 => 
          array (
            0 => 'chain',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2650 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.tokens.register',
          ),
          1 => 
          array (
            0 => 'chain',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2686 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.tokens.fetch.contract',
          ),
          1 => 
          array (
            0 => 'chain',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      2712 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.tokens.fees.account.create',
          ),
          1 => 
          array (
            0 => 'chain',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2740 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.tokens.add.contract',
          ),
          1 => 
          array (
            0 => 'chain',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2753 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.tokens.add.icon',
          ),
          1 => 
          array (
            0 => 'chain',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2763 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.tokens.add',
          ),
          1 => 
          array (
            0 => 'chain',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2779 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.tokens.deploy',
          ),
          1 => 
          array (
            0 => 'chain',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2819 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.tokens.withdraw.settings',
            'isMainnet' => NULL,
          ),
          1 => 
          array (
            0 => 'chain',
            1 => 'isMainnet',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      2837 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.fees.index',
          ),
          1 => 
          array (
            0 => 'chain',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2855 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.fees.withdraw',
          ),
          1 => 
          array (
            0 => 'chain',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2879 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.mainnet.tokens.index',
          ),
          1 => 
          array (
            0 => 'chain',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2909 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.addresses.index',
          ),
          1 => 
          array (
            0 => 'chain',
            1 => 'currency',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2927 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.addresses.store',
          ),
          1 => 
          array (
            0 => 'chain',
            1 => 'currency',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      2956 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.addresses.activate',
          ),
          1 => 
          array (
            0 => 'chain',
            1 => 'currency',
            2 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      2979 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.addresses.verify',
          ),
          1 => 
          array (
            0 => 'chain',
            1 => 'currency',
            2 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      2998 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.utxo.index',
          ),
          1 => 
          array (
            0 => 'chain',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3016 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.utxo.store',
          ),
          1 => 
          array (
            0 => 'chain',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3030 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.utxo.clean',
          ),
          1 => 
          array (
            0 => 'chain',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3050 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.utxo.encryptData',
          ),
          1 => 
          array (
            0 => 'chain',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3080 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.blockchain.withdrawal.index',
          ),
          1 => 
          array (
            0 => 'chain',
            1 => 'currency',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3111 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.eco.transactions.show',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      3158 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ecommerce.category.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      3175 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ecommerce.category.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'PUT' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      3199 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ecommerce.category.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      3233 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ecommerce.product.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      3257 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ecommerce.product.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'PUT' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      3281 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ecommerce.product.delete',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      3309 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ecommerce.product.license',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      3323 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ecommerce.product.license.store',
          ),
          1 => 
          array (
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3338 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ecommerce.product.license.update',
          ),
          1 => 
          array (
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3372 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.bot.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      3397 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.bot.time.index',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      3411 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.bot.time.store',
          ),
          1 => 
          array (
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3426 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.bot.time.update',
          ),
          1 => 
          array (
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3457 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.ico.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      3514 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.investment.plans.toggleStatus',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'PUT' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3534 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.investment.plans.toggleRecommanded',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'PUT' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3544 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.investment.plans.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.investment.plans.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'PUT' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
        2 => 
        array (
          0 => 
          array (
            '_route' => 'admin.investment.plans.destroy',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      3574 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.investment.logs.cancel',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3605 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mlm.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      3657 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.campaigns.create',
            'template_id' => NULL,
          ),
          1 => 
          array (
            0 => 'template_id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      3685 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.campaigns.edit',
          ),
          1 => 
          array (
            0 => 'campaign',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3702 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.campaigns.start',
          ),
          1 => 
          array (
            0 => 'campaign',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3713 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.campaigns.stop',
          ),
          1 => 
          array (
            0 => 'campaign',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3733 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.campaigns.restart',
          ),
          1 => 
          array (
            0 => 'campaign',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3745 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.campaigns.resume',
          ),
          1 => 
          array (
            0 => 'campaign',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3760 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.campaigns.pause',
          ),
          1 => 
          array (
            0 => 'campaign',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3776 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.campaigns.targets',
          ),
          1 => 
          array (
            0 => 'campaign',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3786 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.campaigns.update',
          ),
          1 => 
          array (
            0 => 'campaign',
          ),
          2 => 
          array (
            'PUT' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.campaigns.destroy',
          ),
          1 => 
          array (
            0 => 'campaign',
          ),
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      3823 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.templates.edit',
          ),
          1 => 
          array (
            0 => 'template',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      3832 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.templates.update',
          ),
          1 => 
          array (
            0 => 'template',
          ),
          2 => 
          array (
            'PUT' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.mailwiz.templates.destroy',
          ),
          1 => 
          array (
            0 => 'template',
          ),
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      3869 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.forex.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      3902 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.forex.investment.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      3932 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.forex.signals.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      3967 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.seo.content',
          ),
          1 => 
          array (
            0 => 'key',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4004 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.staking.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4028 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.staking.verify',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4070 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.sidebar.edit',
          ),
          1 => 
          array (
            0 => 'type',
            1 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4103 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.sidebar.update',
          ),
          1 => 
          array (
            0 => 'type',
            1 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4132 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.sidebar.activate',
          ),
          1 => 
          array (
            0 => 'type',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4151 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.sidebar.deactivate',
          ),
          1 => 
          array (
            0 => 'type',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4200 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.sidebar.submenu.edit',
          ),
          1 => 
          array (
            0 => 'type',
            1 => 'id',
            2 => 'submenu_id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4250 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.sidebar.submenu.update',
          ),
          1 => 
          array (
            0 => 'type',
            1 => 'id',
            2 => 'submenu_id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4305 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.sidebar.submenu.activate',
          ),
          1 => 
          array (
            0 => 'type',
            1 => 'id',
            2 => 'submenu_id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4342 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.sidebar.submenu.deactivate',
          ),
          1 => 
          array (
            0 => 'type',
            1 => 'id',
            2 => 'submenu_id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4392 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.settings.mail.template.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4416 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.settings.mail.template.update',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4465 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.categories.show',
          ),
          1 => 
          array (
            0 => 'category',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4479 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.categories.edit',
          ),
          1 => 
          array (
            0 => 'category',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4488 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.categories.update',
          ),
          1 => 
          array (
            0 => 'category',
          ),
          2 => 
          array (
            'PUT' => 0,
            'PATCH' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.categories.destroy',
          ),
          1 => 
          array (
            0 => 'category',
          ),
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4514 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.tags.show',
          ),
          1 => 
          array (
            0 => 'tag',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4528 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.tags.edit',
          ),
          1 => 
          array (
            0 => 'tag',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4537 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.tags.update',
          ),
          1 => 
          array (
            0 => 'tag',
          ),
          2 => 
          array (
            'PUT' => 0,
            'PATCH' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.tags.destroy',
          ),
          1 => 
          array (
            0 => 'tag',
          ),
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4567 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.articles.show',
          ),
          1 => 
          array (
            0 => 'article',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4581 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.articles.edit',
          ),
          1 => 
          array (
            0 => 'article',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4590 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.articles.update',
          ),
          1 => 
          array (
            0 => 'article',
          ),
          2 => 
          array (
            'PUT' => 0,
            'PATCH' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.articles.destroy',
          ),
          1 => 
          array (
            0 => 'article',
          ),
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4630 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.faq-categories.show',
          ),
          1 => 
          array (
            0 => 'faq_category',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4644 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.faq-categories.edit',
          ),
          1 => 
          array (
            0 => 'faq_category',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4653 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.faq-categories.update',
          ),
          1 => 
          array (
            0 => 'faq_category',
          ),
          2 => 
          array (
            'PUT' => 0,
            'PATCH' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.faq-categories.destroy',
          ),
          1 => 
          array (
            0 => 'faq_category',
          ),
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4684 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.faq-questions.show',
          ),
          1 => 
          array (
            0 => 'faq_question',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4698 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.faq-questions.edit',
          ),
          1 => 
          array (
            0 => 'faq_question',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4707 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.faq-questions.update',
          ),
          1 => 
          array (
            0 => 'faq_question',
          ),
          2 => 
          array (
            'PUT' => 0,
            'PATCH' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'admin.knowledge.faq-questions.destroy',
          ),
          1 => 
          array (
            0 => 'faq_question',
          ),
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4747 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.kyc.template.edit',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4778 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'admin.kyc.view',
          ),
          1 => 
          array (
            0 => 'id',
            1 => 'type',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4843 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::hHxIyzyO3UMmA1S9',
          ),
          1 => 
          array (
            0 => 'symbol',
            1 => 'currency',
            2 => 'timeframe',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      4869 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::de0QFi8QLZy0p2yf',
          ),
          1 => 
          array (
            0 => 'symbol',
            1 => 'currency',
            2 => 'timeframe',
            3 => 'from',
            4 => 'to',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4893 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'app.',
          ),
          1 => 
          array (
            0 => 'any',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
            'POST' => 2,
            'PUT' => 3,
            'PATCH' => 4,
            'DELETE' => 5,
            'OPTIONS' => 6,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4938 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'ipn.flutterwave',
          ),
          1 => 
          array (
            0 => 'trx',
            1 => 'type',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4967 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'page',
          ),
          1 => 
          array (
            0 => 'title',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      4998 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'trade.trade',
          ),
          1 => 
          array (
            0 => 'symbol',
            1 => 'currency',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'trade.now',
          ),
          1 => 
          array (
            0 => 'symbol',
            1 => 'currency',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5037 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'placeholderImage',
          ),
          1 => 
          array (
            0 => 'size',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5074 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'password.reset',
          ),
          1 => 
          array (
            0 => 'token',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5098 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'refer.register',
          ),
          1 => 
          array (
            0 => 'reference',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5139 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'verification.verify',
          ),
          1 => 
          array (
            0 => 'id',
            1 => 'hash',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5189 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.generated::oT8U6yhZTeLxMEkO',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5228 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.generated::QAB4cUKiTtumeIKI',
          ),
          1 => 
          array (
            0 => 'symbol',
            1 => 'currency',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5273 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.binary.trade.now',
          ),
          1 => 
          array (
            0 => 'symbol',
            1 => 'currency',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5298 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.binary.trade.wining.contract.log',
          ),
          1 => 
          array (
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5323 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.binary.trade.losing.contract.log',
          ),
          1 => 
          array (
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5346 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.binary.trade.draw.contract.log',
          ),
          1 => 
          array (
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5382 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.binary.practice.now',
          ),
          1 => 
          array (
            0 => 'symbol',
            1 => 'currency',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5422 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.binary.contract.preview',
          ),
          1 => 
          array (
            0 => 'type',
            1 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5465 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.wallet',
          ),
          1 => 
          array (
            0 => 'type',
            1 => 'symbol',
            2 => 'address',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5486 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.fetch.ico.info',
          ),
          1 => 
          array (
            0 => 'symbol',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5519 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.trade.now',
          ),
          1 => 
          array (
            0 => 'symbol',
            1 => 'currency',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5564 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.wallet.',
          ),
          1 => 
          array (
            0 => 'trx',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5588 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.wallet.generated::nfqzYPB6lfaNQk2w',
          ),
          1 => 
          array (
            0 => 'trx',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5621 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.withdraw',
          ),
          1 => 
          array (
            0 => 'symbol',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5659 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::hbPNEbYShJGwffDq',
          ),
          1 => 
          array (
            0 => 'offer',
          ),
          2 => 
          array (
            'PUT' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::OaJdUsJikkg7sjoD',
          ),
          1 => 
          array (
            0 => 'offer',
          ),
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5686 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::KHjEfB8ucDgMNlMa',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::q20VEqXhc2zyMsq9',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'PUT' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
        2 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::Gbh2hiDlp4eM16vM',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5709 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::LmOK3hq0PjxeVVMt',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::XKFenrwOcgh1nrsI',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5725 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::FOnaRhZXsA5S5R0U',
          ),
          1 => 
          array (
            0 => 'order',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5739 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::ZyZDjD2oTmx9LyVp',
          ),
          1 => 
          array (
            0 => 'order',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5755 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::im6t4VAgEEkmG8Ns',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5775 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::BAGcBUUV3Rx5phMB',
          ),
          1 => 
          array (
            0 => 'order',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5808 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::j6CnXZBWobijDu0D',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::xARmYFvBLy4IoI68',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5826 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::dFG1Dm7a273KjpK0',
          ),
          1 => 
          array (
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5844 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::PWoyVjEsRQS4Rg8B',
          ),
          1 => 
          array (
            0 => 'offer',
          ),
          2 => 
          array (
            'PUT' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5859 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::fmQUrkdFrhu3juGK',
          ),
          1 => 
          array (
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5887 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::Lj8zmSOvJClIb0FF',
          ),
          1 => 
          array (
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      5908 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::Nffnn7wCNSXrZHfF',
          ),
          1 => 
          array (
            0 => 'paymentMethod',
          ),
          2 => 
          array (
            'PUT' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::GaitThtJAII7OoL5',
          ),
          1 => 
          array (
            0 => 'paymentMethod',
          ),
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5955 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::IJ4Il7iygad1toYl',
          ),
          1 => 
          array (
            0 => 'symbol',
            1 => 'address',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      5986 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::zpoLC9w9nHeVcLvc',
          ),
          1 => 
          array (
            0 => 'symbol',
            1 => 'address',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      6009 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::drcPGMJYDnOpfYbd',
          ),
          1 => 
          array (
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6059 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::GixyrrHDndzrpKVu',
          ),
          1 => 
          array (
            0 => 'symbol',
            1 => 'currency',
            2 => 'timeframe',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6075 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::wWV9eF6VY0dW55VJ',
          ),
          1 => 
          array (
            0 => 'symbol',
            1 => 'currency',
            2 => 'timeframe',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6101 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::EvFJptlHvBo7BHR2',
          ),
          1 => 
          array (
            0 => 'symbol',
            1 => 'currency',
            2 => 'timeframe',
            3 => 'from',
            4 => 'to',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      6153 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.knowledge.categories.show',
          ),
          1 => 
          array (
            0 => 'slug',
            1 => 'category',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      6184 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.knowledge.tags.show',
          ),
          1 => 
          array (
            0 => 'slug',
            1 => 'tag',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      6219 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.knowledge.articles.show',
          ),
          1 => 
          array (
            0 => 'slug',
            1 => 'article',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      6240 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.knowledge.faq.search',
          ),
          1 => 
          array (
            0 => 'search',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      6301 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.marketplace.generated::NtTTpkejkQF4gFfc',
          ),
          1 => 
          array (
            0 => 'id',
            1 => 'slug',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      6322 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.marketplace.generated::sL9d4ivqrsSxHlOT',
          ),
          1 => 
          array (
            0 => 'tag',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      6358 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.marketplace.generated::nZ4rHJnniDLTU1yB',
          ),
          1 => 
          array (
            0 => 'product_id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      6392 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.marketplace.generated::yNSNFgwzUMyMz0F1',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      6438 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.support.ticket.',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6451 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.support.ticket.generated::N51u67a50vPrlU9B',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'POST' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6486 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::b5MrXgLuoi93bZkk',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'PUT' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
        1 => 
        array (
          0 => 
          array (
            '_route' => 'user.generated::JapvXpZrRBbb6VCJ',
          ),
          1 => 
          array (
            0 => 'id',
          ),
          2 => 
          array (
            'DELETE' => 0,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
      ),
      6499 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'user.log.',
          ),
          1 => 
          array (
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => false,
          6 => NULL,
        ),
      ),
      6515 => 
      array (
        0 => 
        array (
          0 => 
          array (
            '_route' => 'generated::bMWZXq2nl5GpPrv8',
          ),
          1 => 
          array (
            0 => 'fallbackPlaceholder',
          ),
          2 => 
          array (
            'GET' => 0,
            'HEAD' => 1,
          ),
          3 => NULL,
          4 => false,
          5 => true,
          6 => NULL,
        ),
        1 => 
        array (
          0 => NULL,
          1 => NULL,
          2 => NULL,
          3 => NULL,
          4 => false,
          5 => false,
          6 => 0,
        ),
      ),
    ),
    4 => NULL,
  ),
  'attributes' => 
  array (
    'scramble.docs.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'docs/api.json',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
        ),
        'uses' => 'O:47:"Laravel\\SerializableClosure\\SerializableClosure":1:{s:12:"serializable";O:46:"Laravel\\SerializableClosure\\Serializers\\Signed":2:{s:12:"serializable";s:299:"O:46:"Laravel\\SerializableClosure\\Serializers\\Native":5:{s:3:"use";a:0:{}s:8:"function";s:84:"function (\\Dedoc\\Scramble\\Generator $generator) {
        return $generator();
    }";s:5:"scope";s:34:"Illuminate\\Support\\ServiceProvider";s:4:"this";N;s:4:"self";s:32:"0000000000000ca70000000000000000";}";s:4:"hash";s:44:"eKXucw/tkoHZvYWyyehv9q9vUN8K6V6uomPUFHqA03w=";}}',
        'namespace' => NULL,
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'scramble.docs.index',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'scramble.docs.api' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'docs/api',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
        ),
        'uses' => '\\Illuminate\\Routing\\ViewController@__invoke',
        'controller' => '\\Illuminate\\Routing\\ViewController',
        'namespace' => NULL,
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'scramble.docs.api',
      ),
      'fallback' => false,
      'defaults' => 
      array (
        'view' => 'scramble::docs',
        'data' => 
        array (
        ),
        'status' => 200,
        'headers' => 
        array (
        ),
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'terms.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'terms-of-service',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
        ),
        'uses' => 'Laravel\\Jetstream\\Http\\Controllers\\Livewire\\TermsOfServiceController@show',
        'controller' => 'Laravel\\Jetstream\\Http\\Controllers\\Livewire\\TermsOfServiceController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'terms.show',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'policy.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'privacy-policy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
        ),
        'uses' => 'Laravel\\Jetstream\\Http\\Controllers\\Livewire\\PrivacyPolicyController@show',
        'controller' => 'Laravel\\Jetstream\\Http\\Controllers\\Livewire\\PrivacyPolicyController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'policy.show',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.profile.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/profile',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'auth',
          3 => 'verified',
        ),
        'uses' => 'Laravel\\Jetstream\\Http\\Controllers\\Livewire\\UserProfileController@show',
        'controller' => 'Laravel\\Jetstream\\Http\\Controllers\\Livewire\\UserProfileController@show',
        'as' => 'user.profile.show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'api-tokens.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/api-tokens',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'auth',
          3 => 'verified',
        ),
        'uses' => 'Laravel\\Jetstream\\Http\\Controllers\\Livewire\\ApiTokenController@index',
        'controller' => 'Laravel\\Jetstream\\Http\\Controllers\\Livewire\\ApiTokenController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'api-tokens.index',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'sanctum.csrf-cookie' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'sanctum/csrf-cookie',
      'action' => 
      array (
        'uses' => 'Laravel\\Sanctum\\Http\\Controllers\\CsrfCookieController@show',
        'controller' => 'Laravel\\Sanctum\\Http\\Controllers\\CsrfCookieController@show',
        'namespace' => NULL,
        'prefix' => 'sanctum',
        'where' => 
        array (
        ),
        'middleware' => 
        array (
          0 => 'web',
        ),
        'as' => 'sanctum.csrf-cookie',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'livewire.message' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'livewire/message/{name}',
      'action' => 
      array (
        'uses' => 'Livewire\\Controllers\\HttpConnectionHandler@__invoke',
        'controller' => 'Livewire\\Controllers\\HttpConnectionHandler',
        'as' => 'livewire.message',
        'middleware' => 
        array (
          0 => 'web',
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'livewire.message-localized' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => '{locale}/livewire/message/{name}',
      'action' => 
      array (
        'uses' => 'Livewire\\Controllers\\HttpConnectionHandler@__invoke',
        'controller' => 'Livewire\\Controllers\\HttpConnectionHandler',
        'as' => 'livewire.message-localized',
        'middleware' => 
        array (
          0 => 'web',
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'livewire.upload-file' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'livewire/upload-file',
      'action' => 
      array (
        'uses' => 'Livewire\\Controllers\\FileUploadHandler@handle',
        'controller' => 'Livewire\\Controllers\\FileUploadHandler@handle',
        'as' => 'livewire.upload-file',
        'middleware' => 
        array (
          0 => 'web',
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'livewire.preview-file' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'livewire/preview-file/{filename}',
      'action' => 
      array (
        'uses' => 'Livewire\\Controllers\\FilePreviewHandler@handle',
        'controller' => 'Livewire\\Controllers\\FilePreviewHandler@handle',
        'as' => 'livewire.preview-file',
        'middleware' => 
        array (
          0 => 'web',
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::JwQr1idxQOFPdV9J' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'livewire/livewire.js',
      'action' => 
      array (
        'uses' => 'Livewire\\Controllers\\LivewireJavaScriptAssets@source',
        'controller' => 'Livewire\\Controllers\\LivewireJavaScriptAssets@source',
        'as' => 'generated::JwQr1idxQOFPdV9J',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::jYIgAmeb5kK6J3M7' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'livewire/livewire.js.map',
      'action' => 
      array (
        'uses' => 'Livewire\\Controllers\\LivewireJavaScriptAssets@maps',
        'controller' => 'Livewire\\Controllers\\LivewireJavaScriptAssets@maps',
        'as' => 'generated::jYIgAmeb5kK6J3M7',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'laravel-pix.qr-code.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'laravel-pix/pix/create',
      'action' => 
      array (
        'uses' => 'Junges\\Pix\\Http\\Controllers\\PixController@create',
        'controller' => 'Junges\\Pix\\Http\\Controllers\\PixController@create',
        'as' => 'laravel-pix.qr-code.create',
        'middleware' => 
        array (
          0 => '',
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'log-viewer.hosts' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/log-viewer/api/hosts',
      'action' => 
      array (
        'domain' => NULL,
        'middleware' => 
        array (
          0 => 'Opcodes\\LogViewer\\Http\\Middleware\\EnsureFrontendRequestsAreStateful',
          1 => 'Opcodes\\LogViewer\\Http\\Middleware\\AuthorizeLogViewer',
        ),
        'uses' => 'Opcodes\\LogViewer\\Http\\Controllers\\HostsController@index',
        'controller' => 'Opcodes\\LogViewer\\Http\\Controllers\\HostsController@index',
        'namespace' => 'Opcodes\\LogViewer\\Http\\Controllers',
        'prefix' => 'admin/log-viewer/api',
        'where' => 
        array (
        ),
        'as' => 'log-viewer.hosts',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'log-viewer.folders' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/log-viewer/api/folders',
      'action' => 
      array (
        'domain' => NULL,
        'middleware' => 
        array (
          0 => 'Opcodes\\LogViewer\\Http\\Middleware\\EnsureFrontendRequestsAreStateful',
          1 => 'Opcodes\\LogViewer\\Http\\Middleware\\AuthorizeLogViewer',
          2 => 'Opcodes\\LogViewer\\Http\\Middleware\\ForwardRequestToHostMiddleware',
        ),
        'uses' => 'Opcodes\\LogViewer\\Http\\Controllers\\FoldersController@index',
        'controller' => 'Opcodes\\LogViewer\\Http\\Controllers\\FoldersController@index',
        'namespace' => 'Opcodes\\LogViewer\\Http\\Controllers',
        'prefix' => 'admin/log-viewer/api',
        'where' => 
        array (
        ),
        'as' => 'log-viewer.folders',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'log-viewer.folders.download' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/log-viewer/api/folders/{folderIdentifier}/download',
      'action' => 
      array (
        'domain' => NULL,
        'middleware' => 
        array (
          0 => 'Opcodes\\LogViewer\\Http\\Middleware\\EnsureFrontendRequestsAreStateful',
          1 => 'Opcodes\\LogViewer\\Http\\Middleware\\AuthorizeLogViewer',
          2 => 'Opcodes\\LogViewer\\Http\\Middleware\\ForwardRequestToHostMiddleware',
        ),
        'uses' => 'Opcodes\\LogViewer\\Http\\Controllers\\FoldersController@download',
        'controller' => 'Opcodes\\LogViewer\\Http\\Controllers\\FoldersController@download',
        'namespace' => 'Opcodes\\LogViewer\\Http\\Controllers',
        'prefix' => 'admin/log-viewer/api',
        'where' => 
        array (
        ),
        'as' => 'log-viewer.folders.download',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'log-viewer.folders.clear-cache' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/log-viewer/api/folders/{folderIdentifier}/clear-cache',
      'action' => 
      array (
        'domain' => NULL,
        'middleware' => 
        array (
          0 => 'Opcodes\\LogViewer\\Http\\Middleware\\EnsureFrontendRequestsAreStateful',
          1 => 'Opcodes\\LogViewer\\Http\\Middleware\\AuthorizeLogViewer',
          2 => 'Opcodes\\LogViewer\\Http\\Middleware\\ForwardRequestToHostMiddleware',
        ),
        'uses' => 'Opcodes\\LogViewer\\Http\\Controllers\\FoldersController@clearCache',
        'controller' => 'Opcodes\\LogViewer\\Http\\Controllers\\FoldersController@clearCache',
        'namespace' => 'Opcodes\\LogViewer\\Http\\Controllers',
        'prefix' => 'admin/log-viewer/api',
        'where' => 
        array (
        ),
        'as' => 'log-viewer.folders.clear-cache',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'log-viewer.folders.delete' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'admin/log-viewer/api/folders/{folderIdentifier}',
      'action' => 
      array (
        'domain' => NULL,
        'middleware' => 
        array (
          0 => 'Opcodes\\LogViewer\\Http\\Middleware\\EnsureFrontendRequestsAreStateful',
          1 => 'Opcodes\\LogViewer\\Http\\Middleware\\AuthorizeLogViewer',
          2 => 'Opcodes\\LogViewer\\Http\\Middleware\\ForwardRequestToHostMiddleware',
        ),
        'uses' => 'Opcodes\\LogViewer\\Http\\Controllers\\FoldersController@delete',
        'controller' => 'Opcodes\\LogViewer\\Http\\Controllers\\FoldersController@delete',
        'namespace' => 'Opcodes\\LogViewer\\Http\\Controllers',
        'prefix' => 'admin/log-viewer/api',
        'where' => 
        array (
        ),
        'as' => 'log-viewer.folders.delete',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'log-viewer.files' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/log-viewer/api/files',
      'action' => 
      array (
        'domain' => NULL,
        'middleware' => 
        array (
          0 => 'Opcodes\\LogViewer\\Http\\Middleware\\EnsureFrontendRequestsAreStateful',
          1 => 'Opcodes\\LogViewer\\Http\\Middleware\\AuthorizeLogViewer',
          2 => 'Opcodes\\LogViewer\\Http\\Middleware\\ForwardRequestToHostMiddleware',
        ),
        'uses' => 'Opcodes\\LogViewer\\Http\\Controllers\\FilesController@index',
        'controller' => 'Opcodes\\LogViewer\\Http\\Controllers\\FilesController@index',
        'namespace' => 'Opcodes\\LogViewer\\Http\\Controllers',
        'prefix' => 'admin/log-viewer/api',
        'where' => 
        array (
        ),
        'as' => 'log-viewer.files',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'log-viewer.files.download' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/log-viewer/api/files/{fileIdentifier}/download',
      'action' => 
      array (
        'domain' => NULL,
        'middleware' => 
        array (
          0 => 'Opcodes\\LogViewer\\Http\\Middleware\\EnsureFrontendRequestsAreStateful',
          1 => 'Opcodes\\LogViewer\\Http\\Middleware\\AuthorizeLogViewer',
          2 => 'Opcodes\\LogViewer\\Http\\Middleware\\ForwardRequestToHostMiddleware',
        ),
        'uses' => 'Opcodes\\LogViewer\\Http\\Controllers\\FilesController@download',
        'controller' => 'Opcodes\\LogViewer\\Http\\Controllers\\FilesController@download',
        'namespace' => 'Opcodes\\LogViewer\\Http\\Controllers',
        'prefix' => 'admin/log-viewer/api',
        'where' => 
        array (
        ),
        'as' => 'log-viewer.files.download',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'log-viewer.files.clear-cache' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/log-viewer/api/files/{fileIdentifier}/clear-cache',
      'action' => 
      array (
        'domain' => NULL,
        'middleware' => 
        array (
          0 => 'Opcodes\\LogViewer\\Http\\Middleware\\EnsureFrontendRequestsAreStateful',
          1 => 'Opcodes\\LogViewer\\Http\\Middleware\\AuthorizeLogViewer',
          2 => 'Opcodes\\LogViewer\\Http\\Middleware\\ForwardRequestToHostMiddleware',
        ),
        'uses' => 'Opcodes\\LogViewer\\Http\\Controllers\\FilesController@clearCache',
        'controller' => 'Opcodes\\LogViewer\\Http\\Controllers\\FilesController@clearCache',
        'namespace' => 'Opcodes\\LogViewer\\Http\\Controllers',
        'prefix' => 'admin/log-viewer/api',
        'where' => 
        array (
        ),
        'as' => 'log-viewer.files.clear-cache',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'log-viewer.files.delete' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'admin/log-viewer/api/files/{fileIdentifier}',
      'action' => 
      array (
        'domain' => NULL,
        'middleware' => 
        array (
          0 => 'Opcodes\\LogViewer\\Http\\Middleware\\EnsureFrontendRequestsAreStateful',
          1 => 'Opcodes\\LogViewer\\Http\\Middleware\\AuthorizeLogViewer',
          2 => 'Opcodes\\LogViewer\\Http\\Middleware\\ForwardRequestToHostMiddleware',
        ),
        'uses' => 'Opcodes\\LogViewer\\Http\\Controllers\\FilesController@delete',
        'controller' => 'Opcodes\\LogViewer\\Http\\Controllers\\FilesController@delete',
        'namespace' => 'Opcodes\\LogViewer\\Http\\Controllers',
        'prefix' => 'admin/log-viewer/api',
        'where' => 
        array (
        ),
        'as' => 'log-viewer.files.delete',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'log-viewer.files.clear-cache-all' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/log-viewer/api/clear-cache-all',
      'action' => 
      array (
        'domain' => NULL,
        'middleware' => 
        array (
          0 => 'Opcodes\\LogViewer\\Http\\Middleware\\EnsureFrontendRequestsAreStateful',
          1 => 'Opcodes\\LogViewer\\Http\\Middleware\\AuthorizeLogViewer',
          2 => 'Opcodes\\LogViewer\\Http\\Middleware\\ForwardRequestToHostMiddleware',
        ),
        'uses' => 'Opcodes\\LogViewer\\Http\\Controllers\\FilesController@clearCacheAll',
        'controller' => 'Opcodes\\LogViewer\\Http\\Controllers\\FilesController@clearCacheAll',
        'namespace' => 'Opcodes\\LogViewer\\Http\\Controllers',
        'prefix' => 'admin/log-viewer/api',
        'where' => 
        array (
        ),
        'as' => 'log-viewer.files.clear-cache-all',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'log-viewer.files.delete-multiple-files' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/log-viewer/api/delete-multiple-files',
      'action' => 
      array (
        'domain' => NULL,
        'middleware' => 
        array (
          0 => 'Opcodes\\LogViewer\\Http\\Middleware\\EnsureFrontendRequestsAreStateful',
          1 => 'Opcodes\\LogViewer\\Http\\Middleware\\AuthorizeLogViewer',
          2 => 'Opcodes\\LogViewer\\Http\\Middleware\\ForwardRequestToHostMiddleware',
        ),
        'uses' => 'Opcodes\\LogViewer\\Http\\Controllers\\FilesController@deleteMultipleFiles',
        'controller' => 'Opcodes\\LogViewer\\Http\\Controllers\\FilesController@deleteMultipleFiles',
        'namespace' => 'Opcodes\\LogViewer\\Http\\Controllers',
        'prefix' => 'admin/log-viewer/api',
        'where' => 
        array (
        ),
        'as' => 'log-viewer.files.delete-multiple-files',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'log-viewer.logs' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/log-viewer/api/logs',
      'action' => 
      array (
        'domain' => NULL,
        'middleware' => 
        array (
          0 => 'Opcodes\\LogViewer\\Http\\Middleware\\EnsureFrontendRequestsAreStateful',
          1 => 'Opcodes\\LogViewer\\Http\\Middleware\\AuthorizeLogViewer',
          2 => 'Opcodes\\LogViewer\\Http\\Middleware\\ForwardRequestToHostMiddleware',
        ),
        'uses' => 'Opcodes\\LogViewer\\Http\\Controllers\\LogsController@index',
        'controller' => 'Opcodes\\LogViewer\\Http\\Controllers\\LogsController@index',
        'namespace' => 'Opcodes\\LogViewer\\Http\\Controllers',
        'prefix' => 'admin/log-viewer/api',
        'where' => 
        array (
        ),
        'as' => 'log-viewer.logs',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'log-viewer.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/log-viewer/{view?}',
      'action' => 
      array (
        'domain' => NULL,
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin',
        ),
        'uses' => 'Opcodes\\LogViewer\\Http\\Controllers\\IndexController@__invoke',
        'controller' => 'Opcodes\\LogViewer\\Http\\Controllers\\IndexController',
        'namespace' => 'Opcodes\\LogViewer\\Http\\Controllers',
        'prefix' => 'admin/log-viewer',
        'where' => 
        array (
        ),
        'as' => 'log-viewer.index',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
        'view' => '(.*)',
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ignition.healthCheck' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => '_ignition/health-check',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'Spatie\\LaravelIgnition\\Http\\Middleware\\RunnableSolutionsEnabled',
        ),
        'uses' => 'Spatie\\LaravelIgnition\\Http\\Controllers\\HealthCheckController@__invoke',
        'controller' => 'Spatie\\LaravelIgnition\\Http\\Controllers\\HealthCheckController',
        'as' => 'ignition.healthCheck',
        'namespace' => NULL,
        'prefix' => '_ignition',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ignition.executeSolution' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => '_ignition/execute-solution',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'Spatie\\LaravelIgnition\\Http\\Middleware\\RunnableSolutionsEnabled',
        ),
        'uses' => 'Spatie\\LaravelIgnition\\Http\\Controllers\\ExecuteSolutionController@__invoke',
        'controller' => 'Spatie\\LaravelIgnition\\Http\\Controllers\\ExecuteSolutionController',
        'as' => 'ignition.executeSolution',
        'namespace' => NULL,
        'prefix' => '_ignition',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ignition.updateConfig' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => '_ignition/update-config',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'Spatie\\LaravelIgnition\\Http\\Middleware\\RunnableSolutionsEnabled',
        ),
        'uses' => 'Spatie\\LaravelIgnition\\Http\\Controllers\\UpdateConfigController@__invoke',
        'controller' => 'Spatie\\LaravelIgnition\\Http\\Controllers\\UpdateConfigController',
        'as' => 'ignition.updateConfig',
        'namespace' => NULL,
        'prefix' => '_ignition',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::nNlbpmiiStYMaHOO' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'POST',
        2 => 'HEAD',
      ),
      'uri' => 'broadcasting/auth',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => '\\Illuminate\\Broadcasting\\BroadcastController@authenticate',
        'controller' => '\\Illuminate\\Broadcasting\\BroadcastController@authenticate',
        'namespace' => NULL,
        'prefix' => '',
        'where' => 
        array (
        ),
        'excluded_middleware' => 
        array (
          0 => 'Illuminate\\Foundation\\Http\\Middleware\\VerifyCsrfToken',
        ),
        'as' => 'generated::nNlbpmiiStYMaHOO',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'token.login' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'api/login',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
          1 => 'sessions',
          2 => 'guest:web',
          3 => 'throttle:login',
        ),
        'uses' => 'App\\Http\\Controllers\\Api\\AuthController@authenticate',
        'controller' => 'App\\Http\\Controllers\\Api\\AuthController@authenticate',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'api',
        'where' => 
        array (
        ),
        'as' => 'token.login',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::4ce53XaRQI0FJlex' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'api/register',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
          1 => 'guest:web',
        ),
        'uses' => 'App\\Http\\Controllers\\Api\\AuthController@register',
        'controller' => 'App\\Http\\Controllers\\Api\\AuthController@register',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'api',
        'where' => 
        array (
        ),
        'as' => 'generated::4ce53XaRQI0FJlex',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::r0jjYByYi6vfgbQH' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'api/news',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
        ),
        'uses' => 'App\\Http\\Controllers\\Api\\NewsController@fetch',
        'controller' => 'App\\Http\\Controllers\\Api\\NewsController@fetch',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'api',
        'where' => 
        array (
        ),
        'as' => 'generated::r0jjYByYi6vfgbQH',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::74Jp5O6PbivnQIL8' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'api/symbols',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
        ),
        'uses' => 'App\\Http\\Controllers\\Api\\MarketController@symbols',
        'controller' => 'App\\Http\\Controllers\\Api\\MarketController@symbols',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'api',
        'where' => 
        array (
        ),
        'as' => 'generated::74Jp5O6PbivnQIL8',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::KjheTHq6EM4vE1C8' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'api/tickers',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
        ),
        'uses' => 'App\\Http\\Controllers\\Api\\MarketController@tickers',
        'controller' => 'App\\Http\\Controllers\\Api\\MarketController@tickers',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'api',
        'where' => 
        array (
        ),
        'as' => 'generated::KjheTHq6EM4vE1C8',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::U5OI9NdXduJ1Gqqw' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'api/orderbook',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
        ),
        'uses' => 'App\\Http\\Controllers\\Api\\MarketController@orderbook',
        'controller' => 'App\\Http\\Controllers\\Api\\MarketController@orderbook',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'api',
        'where' => 
        array (
        ),
        'as' => 'generated::U5OI9NdXduJ1Gqqw',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::LvTHmHfKbyUeRu6v' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'api/chart',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
        ),
        'uses' => 'App\\Http\\Controllers\\Api\\MarketController@chart',
        'controller' => 'App\\Http\\Controllers\\Api\\MarketController@chart',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'api',
        'where' => 
        array (
        ),
        'as' => 'generated::LvTHmHfKbyUeRu6v',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::Mm404btBbO5DlTcs' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'api/trade',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
        ),
        'uses' => 'App\\Http\\Controllers\\Api\\MarketController@trade',
        'controller' => 'App\\Http\\Controllers\\Api\\MarketController@trade',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'api',
        'where' => 
        array (
        ),
        'as' => 'generated::Mm404btBbO5DlTcs',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::rupi0hDKdg6qIZO4' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'api/orders',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
        ),
        'uses' => 'App\\Http\\Controllers\\Api\\MarketController@orders',
        'controller' => 'App\\Http\\Controllers\\Api\\MarketController@orders',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'api',
        'where' => 
        array (
        ),
        'as' => 'generated::rupi0hDKdg6qIZO4',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::wtLY5bEzxLlWqZyC' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'api/wallets',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
        ),
        'uses' => 'App\\Http\\Controllers\\Api\\WalletController@wallets',
        'controller' => 'App\\Http\\Controllers\\Api\\WalletController@wallets',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'api',
        'where' => 
        array (
        ),
        'as' => 'generated::wtLY5bEzxLlWqZyC',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::z7X4NRNM9dI3knr3' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'api/wallet/transactions',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
        ),
        'uses' => 'App\\Http\\Controllers\\Api\\WalletController@wallet_transactions',
        'controller' => 'App\\Http\\Controllers\\Api\\WalletController@wallet_transactions',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'api',
        'where' => 
        array (
        ),
        'as' => 'generated::z7X4NRNM9dI3knr3',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::xvJbzXE5S3HtTYvU' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'api/deposit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
        ),
        'uses' => 'App\\Http\\Controllers\\Api\\WalletController@deposit',
        'controller' => 'App\\Http\\Controllers\\Api\\WalletController@deposit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'api',
        'where' => 
        array (
        ),
        'as' => 'generated::xvJbzXE5S3HtTYvU',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::nxhyLelOwNpfcCYz' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'api/v1/eco/index',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
          1 => 'api',
        ),
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\EcoController@index',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\EcoController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'api/v1/eco',
        'where' => 
        array (
        ),
        'as' => 'generated::nxhyLelOwNpfcCYz',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::S9NXGAmmOjAOv8Xn' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'api/v1/eco/trades',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
          1 => 'api',
        ),
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\EcoController@trades',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\EcoController@trades',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'api/v1/eco',
        'where' => 
        array (
        ),
        'as' => 'generated::S9NXGAmmOjAOv8Xn',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::7iYWfvXGLP4PwowP' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'api/v1/eco/orderbook',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
          1 => 'api',
        ),
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\OrderbookController@index',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\OrderbookController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'api/v1/eco',
        'where' => 
        array (
        ),
        'as' => 'generated::7iYWfvXGLP4PwowP',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::ilJWrmiD3lupWnAe' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'api/v1/eco/orders',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
          1 => 'api',
        ),
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\EcoController@orders',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\EcoController@orders',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'api/v1/eco',
        'where' => 
        array (
        ),
        'as' => 'generated::ilJWrmiD3lupWnAe',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::oHeNEq95YteqoZLi' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'api/v1/eco/trade/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
          1 => 'api',
        ),
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\OrderController@store',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\OrderController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'api/v1/eco',
        'where' => 
        array (
        ),
        'as' => 'generated::oHeNEq95YteqoZLi',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::ej8NzRVyQ0xHZThu' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'api/v1/eco/order/cancel',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
          1 => 'api',
        ),
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\OrderController@destroy',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\OrderController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'api/v1/eco',
        'where' => 
        array (
        ),
        'as' => 'generated::ej8NzRVyQ0xHZThu',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::hHxIyzyO3UMmA1S9' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'api/v1/eco/chart/{symbol}/{currency}/{timeframe}/json',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
          1 => 'api',
        ),
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\ChartController@getChartDataJson',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\ChartController@getChartDataJson',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'api/v1/eco',
        'where' => 
        array (
        ),
        'as' => 'generated::hHxIyzyO3UMmA1S9',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::de0QFi8QLZy0p2yf' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'api/v1/eco/chart/{symbol}/{currency}/{timeframe}/{from}/{to}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'api',
          1 => 'api',
        ),
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\ChartController@getPartialChartData',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\ChartController@getPartialChartData',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'api/v1/eco',
        'where' => 
        array (
        ),
        'as' => 'generated::de0QFi8QLZy0p2yf',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::j3j9pHK8VrmecAUH' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'clear',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'O:47:"Laravel\\SerializableClosure\\SerializableClosure":1:{s:12:"serializable";O:46:"Laravel\\SerializableClosure\\Serializers\\Signed":2:{s:12:"serializable";s:298:"O:46:"Laravel\\SerializableClosure\\Serializers\\Native":5:{s:3:"use";a:0:{}s:8:"function";s:80:"function () {
    \\Illuminate\\Support\\Facades\\Artisan::call(\'optimize:clear\');
}";s:5:"scope";s:37:"Illuminate\\Routing\\RouteFileRegistrar";s:4:"this";N;s:4:"self";s:32:"0000000000000dba0000000000000000";}";s:4:"hash";s:44:"7Jqnk/2MTCrDpPHLwxf+Rj7qeShsJ2fktIC3dY+4xiA=";}}',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'generated::j3j9pHK8VrmecAUH',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'login.wp.user' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'login/wp',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\UserController@authenticateWPUser',
        'controller' => 'App\\Http\\Controllers\\UserController@authenticateWPUser',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'login.wp.user',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::bMWZXq2nl5GpPrv8' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => '{fallbackPlaceholder}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'O:47:"Laravel\\SerializableClosure\\SerializableClosure":1:{s:12:"serializable";O:46:"Laravel\\SerializableClosure\\Serializers\\Signed":2:{s:12:"serializable";s:1360:"O:46:"Laravel\\SerializableClosure\\Serializers\\Native":5:{s:3:"use";a:0:{}s:8:"function";s:1140:"function ($path) {
    $frontendPath = \\App\\Models\\GeneralSetting::first()->frontend;
    $folderPath = \\substr($frontendPath, 0, \\strrpos($frontendPath, \'/\'));

    // Check if the requested file exists
    if (\\Illuminate\\Support\\Facades\\File::exists(\\public_path() . $folderPath . \'/\' . $path . \'.html\')) {
        // If the file exists, serve it with the correct base URL
        $htmlContent = \\Illuminate\\Support\\Facades\\File::get(\\public_path() . $folderPath . \'/\' . $path . \'.html\');
        $baseURL = \\url($folderPath);
        $baseTag = \'<base href="\' . $baseURL . \'/">\';
        $htmlContent = \\preg_replace(\'/<head>/\', \'<head>\' . $baseTag, $htmlContent);

        // Update the links in the HTML content
        $htmlContent = \\preg_replace_callback(
            \'/<a([^>]+)href="((?!http)(.*?)\\.html)"/\',
            function ($matches) {
                return \'<a\' . $matches[1] . \'href="/\' . $matches[3] . \'"\';
            },
            $htmlContent
        );

        return \\response($htmlContent)->header(\'Content-Type\', \'text/html\');
    }

    // If the file does not exist, return a 404 response
    \\abort(404);
}";s:5:"scope";s:37:"Illuminate\\Routing\\RouteFileRegistrar";s:4:"this";N;s:4:"self";s:32:"0000000000000db30000000000000000";}";s:4:"hash";s:44:"dyP+wRIlXzLHe43yFZYKQRudvAL5qVa62xnYNDoyKIQ=";}}',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'generated::bMWZXq2nl5GpPrv8',
      ),
      'fallback' => true,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
        'fallbackPlaceholder' => '.*',
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'verify-csrf' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'verify-csrf',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\UserController@verifyCsrf',
        'controller' => 'App\\Http\\Controllers\\UserController@verifyCsrf',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'verify-csrf',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'cron' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cron',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\CronController@trade_results',
        'controller' => 'App\\Http\\Controllers\\CronController@trade_results',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'cron',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'practice.cron' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cron/practice',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\CronController@practice_results',
        'controller' => 'App\\Http\\Controllers\\CronController@practice_results',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'practice.cron',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'schedule.cron' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cron/schedule',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\CronController@schedule_orders',
        'controller' => 'App\\Http\\Controllers\\CronController@schedule_orders',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'schedule.cron',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'crypt.price' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cron/crypto/price',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\CronController@store',
        'controller' => 'App\\Http\\Controllers\\CronController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'crypt.price',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'bot.result' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cron/bot/result',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Extensions\\Bot\\BotController@botResult',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Bot\\BotController@botResult',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'bot.result',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'bot.missed' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cron/bot/missed',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Extensions\\Bot\\BotController@botMissed',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Bot\\BotController@botMissed',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'bot.missed',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'mlm.ranks' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cron/mlm/ranks',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Extensions\\MLM\\MLMController@mlm_ranks',
        'controller' => 'App\\Http\\Controllers\\Extensions\\MLM\\MLMController@mlm_ranks',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'mlm.ranks',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'mlm.daily' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cron/mlm/daily',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Extensions\\MLM\\MLMController@mlm_daily',
        'controller' => 'App\\Http\\Controllers\\Extensions\\MLM\\MLMController@mlm_daily',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'mlm.daily',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'mlm.membership' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cron/mlm/membership',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Extensions\\MLM\\MLMController@mlm_membership',
        'controller' => 'App\\Http\\Controllers\\Extensions\\MLM\\MLMController@mlm_membership',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'mlm.membership',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'forex.result' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cron/forex/result',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Extensions\\Forex\\ForexController@ForexResult',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Forex\\ForexController@ForexResult',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'forex.result',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'forex.missed' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cron/forex/missed',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Extensions\\Forex\\ForexController@ForexMissed',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Forex\\ForexController@ForexMissed',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'forex.missed',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'staking.profit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cron/staking/profit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Extensions\\Staking\\StakingController@staking_profit',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Staking\\StakingController@staking_profit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'staking.profit',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'cron.utxo.verify.transaction' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cron/utxo/verify/transaction',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\WithdrawController@verifyTransfers',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\WithdrawController@verifyTransfers',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'cron.utxo.verify.transaction',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'cron.mailwiz.send' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cron/mailwiz/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@cron',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@cron',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'cron.mailwiz.send',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'provider.currencies' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cron/provider/currencies',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\CronController@currencies',
        'controller' => 'App\\Http\\Controllers\\CronController@currencies',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'provider.currencies',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'provider.currenciesToTable' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cron/provider/currenciesToTable',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\CronController@currencies_to_table',
        'controller' => 'App\\Http\\Controllers\\CronController@currencies_to_table',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'provider.currenciesToTable',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'provider.marketsToTable' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cron/provider/marketsToTable',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\CronController@markets_to_table',
        'controller' => 'App\\Http\\Controllers\\CronController@markets_to_table',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'provider.marketsToTable',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'provider.pairsToTable' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cron/provider/pairsToTable',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\CronController@pairs_to_table',
        'controller' => 'App\\Http\\Controllers\\CronController@pairs_to_table',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'provider.pairsToTable',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'provider.fetchorder' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cron/provider/fetch/order',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\CronController@fetch_order',
        'controller' => 'App\\Http\\Controllers\\CronController@fetch_order',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'provider.fetchorder',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'cron.check_update' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cron/check_update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\CronController@check_update',
        'controller' => 'App\\Http\\Controllers\\CronController@check_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'cron.check_update',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'cron.check_investment' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'cron/investment/check',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\InvestmentController@cron',
        'controller' => 'App\\Http\\Controllers\\InvestmentController@cron',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'cron.check_investment',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::1tGcxY9cc8CjCTQd' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'generate-qrcode',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\QrCodeController@index',
        'controller' => 'App\\Http\\Controllers\\QrCodeController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'generated::1tGcxY9cc8CjCTQd',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ipn.paypal' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ipn/paypal',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Gateway\\paypal\\ProcessController@ipn',
        'controller' => 'App\\Http\\Controllers\\Gateway\\paypal\\ProcessController@ipn',
        'as' => 'ipn.paypal',
        'namespace' => 'App\\Http\\Controllers\\Gateway',
        'prefix' => '/ipn',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ipn.paypal_sdk' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ipn/paypal_sdk',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Gateway\\paypal_sdk\\ProcessController@ipn',
        'controller' => 'App\\Http\\Controllers\\Gateway\\paypal_sdk\\ProcessController@ipn',
        'as' => 'ipn.paypal_sdk',
        'namespace' => 'App\\Http\\Controllers\\Gateway',
        'prefix' => '/ipn',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ipn.perfect_money' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ipn/perfect_money',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Gateway\\perfect_money\\ProcessController@ipn',
        'controller' => 'App\\Http\\Controllers\\Gateway\\perfect_money\\ProcessController@ipn',
        'as' => 'ipn.perfect_money',
        'namespace' => 'App\\Http\\Controllers\\Gateway',
        'prefix' => '/ipn',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ipn.stripe' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ipn/stripe',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Gateway\\stripe\\ProcessController@ipn',
        'controller' => 'App\\Http\\Controllers\\Gateway\\stripe\\ProcessController@ipn',
        'as' => 'ipn.stripe',
        'namespace' => 'App\\Http\\Controllers\\Gateway',
        'prefix' => '/ipn',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ipn.stripe_js' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ipn/stripe_js',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Gateway\\stripe_js\\ProcessController@ipn',
        'controller' => 'App\\Http\\Controllers\\Gateway\\stripe_js\\ProcessController@ipn',
        'as' => 'ipn.stripe_js',
        'namespace' => 'App\\Http\\Controllers\\Gateway',
        'prefix' => '/ipn',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ipn.stripe_v3' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ipn/stripe_v3',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Gateway\\stripe_v3\\ProcessController@ipn',
        'controller' => 'App\\Http\\Controllers\\Gateway\\stripe_v3\\ProcessController@ipn',
        'as' => 'ipn.stripe_v3',
        'namespace' => 'App\\Http\\Controllers\\Gateway',
        'prefix' => '/ipn',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ipn.skrill' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ipn/skrill',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Gateway\\skrill\\ProcessController@ipn',
        'controller' => 'App\\Http\\Controllers\\Gateway\\skrill\\ProcessController@ipn',
        'as' => 'ipn.skrill',
        'namespace' => 'App\\Http\\Controllers\\Gateway',
        'prefix' => '/ipn',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ipn.paytm' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ipn/paytm',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Gateway\\paytm\\ProcessController@ipn',
        'controller' => 'App\\Http\\Controllers\\Gateway\\paytm\\ProcessController@ipn',
        'as' => 'ipn.paytm',
        'namespace' => 'App\\Http\\Controllers\\Gateway',
        'prefix' => '/ipn',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ipn.payeer' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ipn/payeer',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Gateway\\payeer\\ProcessController@ipn',
        'controller' => 'App\\Http\\Controllers\\Gateway\\payeer\\ProcessController@ipn',
        'as' => 'ipn.payeer',
        'namespace' => 'App\\Http\\Controllers\\Gateway',
        'prefix' => '/ipn',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ipn.paystack' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ipn/paystack',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Gateway\\paystack\\ProcessController@ipn',
        'controller' => 'App\\Http\\Controllers\\Gateway\\paystack\\ProcessController@ipn',
        'as' => 'ipn.paystack',
        'namespace' => 'App\\Http\\Controllers\\Gateway',
        'prefix' => '/ipn',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ipn.voguepay' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ipn/voguepay',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Gateway\\voguepay\\ProcessController@ipn',
        'controller' => 'App\\Http\\Controllers\\Gateway\\voguepay\\ProcessController@ipn',
        'as' => 'ipn.voguepay',
        'namespace' => 'App\\Http\\Controllers\\Gateway',
        'prefix' => '/ipn',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ipn.flutterwave' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ipn/flutterwave/{trx}/{type}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Gateway\\flutterwave\\ProcessController@ipn',
        'controller' => 'App\\Http\\Controllers\\Gateway\\flutterwave\\ProcessController@ipn',
        'as' => 'ipn.flutterwave',
        'namespace' => 'App\\Http\\Controllers\\Gateway',
        'prefix' => '/ipn',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ipn.razorpay' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ipn/razorpay',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Gateway\\razorpay\\ProcessController@ipn',
        'controller' => 'App\\Http\\Controllers\\Gateway\\razorpay\\ProcessController@ipn',
        'as' => 'ipn.razorpay',
        'namespace' => 'App\\Http\\Controllers\\Gateway',
        'prefix' => '/ipn',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ipn.instamojo' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ipn/instamojo',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Gateway\\instamojo\\ProcessController@ipn',
        'controller' => 'App\\Http\\Controllers\\Gateway\\instamojo\\ProcessController@ipn',
        'as' => 'ipn.instamojo',
        'namespace' => 'App\\Http\\Controllers\\Gateway',
        'prefix' => '/ipn',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ipn.blockchain' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ipn/blockchain',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Gateway\\blockchain\\ProcessController@ipn',
        'controller' => 'App\\Http\\Controllers\\Gateway\\blockchain\\ProcessController@ipn',
        'as' => 'ipn.blockchain',
        'namespace' => 'App\\Http\\Controllers\\Gateway',
        'prefix' => '/ipn',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ipn.blockio' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ipn/blockio',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Gateway\\blockio\\ProcessController@ipn',
        'controller' => 'App\\Http\\Controllers\\Gateway\\blockio\\ProcessController@ipn',
        'as' => 'ipn.blockio',
        'namespace' => 'App\\Http\\Controllers\\Gateway',
        'prefix' => '/ipn',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ipn.coinpayments' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ipn/coinpayments',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Gateway\\coinpayments\\ProcessController@ipn',
        'controller' => 'App\\Http\\Controllers\\Gateway\\coinpayments\\ProcessController@ipn',
        'as' => 'ipn.coinpayments',
        'namespace' => 'App\\Http\\Controllers\\Gateway',
        'prefix' => '/ipn',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ipn.coinpayments_fiat' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ipn/coinpayments_fiat',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Gateway\\coinpayments_fiat\\ProcessController@ipn',
        'controller' => 'App\\Http\\Controllers\\Gateway\\coinpayments_fiat\\ProcessController@ipn',
        'as' => 'ipn.coinpayments_fiat',
        'namespace' => 'App\\Http\\Controllers\\Gateway',
        'prefix' => '/ipn',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ipn.coingate' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ipn/coingate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Gateway\\coingate\\ProcessController@ipn',
        'controller' => 'App\\Http\\Controllers\\Gateway\\coingate\\ProcessController@ipn',
        'as' => 'ipn.coingate',
        'namespace' => 'App\\Http\\Controllers\\Gateway',
        'prefix' => '/ipn',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ipn.coinbase_commerce' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ipn/coinbase_commerce',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Gateway\\coinbase_commerce\\ProcessController@ipn',
        'controller' => 'App\\Http\\Controllers\\Gateway\\coinbase_commerce\\ProcessController@ipn',
        'as' => 'ipn.coinbase_commerce',
        'namespace' => 'App\\Http\\Controllers\\Gateway',
        'prefix' => '/ipn',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ipn.mollie' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'ipn/mollie',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Gateway\\mollie\\ProcessController@ipn',
        'controller' => 'App\\Http\\Controllers\\Gateway\\mollie\\ProcessController@ipn',
        'as' => 'ipn.mollie',
        'namespace' => 'App\\Http\\Controllers\\Gateway',
        'prefix' => '/ipn',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'ipn.cashmaal' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'ipn/cashmaal',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Gateway\\cashmaal\\ProcessController@ipn',
        'controller' => 'App\\Http\\Controllers\\Gateway\\cashmaal\\ProcessController@ipn',
        'as' => 'ipn.cashmaal',
        'namespace' => 'App\\Http\\Controllers\\Gateway',
        'prefix' => '/ipn',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'install' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'install',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UpdateController@download_update',
        'controller' => 'App\\Http\\Controllers\\Admin\\UpdateController@download_update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'install',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'home' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => '/',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'O:47:"Laravel\\SerializableClosure\\SerializableClosure":1:{s:12:"serializable";O:46:"Laravel\\SerializableClosure\\Serializers\\Signed":2:{s:12:"serializable";s:292:"O:46:"Laravel\\SerializableClosure\\Serializers\\Native":5:{s:3:"use";a:0:{}s:8:"function";s:74:"function () {
            return \\redirect(\\route(\'user.home\'));
        }";s:5:"scope";s:37:"Illuminate\\Routing\\RouteFileRegistrar";s:4:"this";N;s:4:"self";s:32:"0000000000000dfe0000000000000000";}";s:4:"hash";s:44:"9Xa/oEIgYpf9UQgByJDUEV8sIV4nz6Uz2uK5yVN8q/Y=";}}',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'home',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'page' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'trading/{title}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\HomeController@page',
        'controller' => 'App\\Http\\Controllers\\HomeController@page',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'page',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'frontend.pages.about' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'about',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\HomeController@about',
        'controller' => 'App\\Http\\Controllers\\HomeController@about',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'frontend.pages.about',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'banned' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'banned',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\HomeController@banned',
        'controller' => 'App\\Http\\Controllers\\HomeController@banned',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'banned',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'subscribe' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'subscribe',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\SiteController@subscribe',
        'controller' => 'App\\Http\\Controllers\\SiteController@subscribe',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'subscribe',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'contact' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'contact',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\SiteController@contact',
        'controller' => 'App\\Http\\Controllers\\SiteController@contact',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'contact',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'contact.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'contact',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\SiteController@contactSubmit',
        'controller' => 'App\\Http\\Controllers\\SiteController@contactSubmit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'contact.send',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'placeholderImage' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'placeholder-image/{size}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\SiteController@placeholderImage',
        'controller' => 'App\\Http\\Controllers\\SiteController@placeholderImage',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'placeholderImage',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::c2LxJyOumLUJFUNS' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'lang/{locale}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\LanguageController@swap',
        'controller' => 'App\\Http\\Controllers\\LanguageController@swap',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'generated::c2LxJyOumLUJFUNS',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.profile.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/profile',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'auth',
          3 => 'verified',
        ),
        'uses' => 'Laravel\\Jetstream\\Http\\Controllers\\Livewire\\UserProfileController@show',
        'controller' => 'Laravel\\Jetstream\\Http\\Controllers\\Livewire\\UserProfileController@show',
        'as' => 'admin.profile.show',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'login' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'login',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'guest:web',
        ),
        'uses' => 'Laravel\\Fortify\\Http\\Controllers\\AuthenticatedSessionController@create',
        'controller' => 'Laravel\\Fortify\\Http\\Controllers\\AuthenticatedSessionController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'login',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::2s4dRYJRwYNVb5Vp' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'login',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'guest:web',
          3 => 'throttle:login',
        ),
        'uses' => 'Laravel\\Fortify\\Http\\Controllers\\AuthenticatedSessionController@store',
        'controller' => 'Laravel\\Fortify\\Http\\Controllers\\AuthenticatedSessionController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'generated::2s4dRYJRwYNVb5Vp',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'web3.login.message' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'login/web3-login-message',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'guest:web',
          3 => 'throttle:login',
        ),
        'uses' => 'App\\Http\\Controllers\\Web3LoginController@message',
        'controller' => 'App\\Http\\Controllers\\Web3LoginController@message',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'web3.login.message',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'web3.login.verify' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'login/web3-login-verify',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'guest:web',
          3 => 'throttle:login',
        ),
        'uses' => 'App\\Http\\Controllers\\Web3LoginController@verify',
        'controller' => 'App\\Http\\Controllers\\Web3LoginController@verify',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'web3.login.verify',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'web3.signature' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => '_web3/signature',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\Web3LoginController@signature',
        'controller' => 'App\\Http\\Controllers\\Web3LoginController@signature',
        'as' => 'web3.signature',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/_web3',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'web3.link' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => '_web3/link',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'web',
          3 => 'auth',
        ),
        'uses' => 'App\\Http\\Controllers\\Web3LoginController@link',
        'controller' => 'App\\Http\\Controllers\\Web3LoginController@link',
        'as' => 'web3.link',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/_web3',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'web3.login' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => '_web3/login',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'web',
          3 => 'guest',
        ),
        'uses' => 'App\\Http\\Controllers\\Web3LoginController@login',
        'controller' => 'App\\Http\\Controllers\\Web3LoginController@login',
        'as' => 'web3.login',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/_web3',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'logout' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'logout',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
        ),
        'uses' => 'Laravel\\Fortify\\Http\\Controllers\\AuthenticatedSessionController@destroy',
        'controller' => 'Laravel\\Fortify\\Http\\Controllers\\AuthenticatedSessionController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'logout',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'password.request' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'forgot-password',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'guest:web',
        ),
        'uses' => 'Laravel\\Fortify\\Http\\Controllers\\PasswordResetLinkController@create',
        'controller' => 'Laravel\\Fortify\\Http\\Controllers\\PasswordResetLinkController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'password.request',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'password.reset' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'reset-password/{token}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'guest:web',
        ),
        'uses' => 'Laravel\\Fortify\\Http\\Controllers\\NewPasswordController@create',
        'controller' => 'Laravel\\Fortify\\Http\\Controllers\\NewPasswordController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'password.reset',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'password.email' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'forgot-password',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'guest:web',
        ),
        'uses' => 'Laravel\\Fortify\\Http\\Controllers\\PasswordResetLinkController@store',
        'controller' => 'Laravel\\Fortify\\Http\\Controllers\\PasswordResetLinkController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'password.email',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'password.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'reset-password',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'guest:web',
        ),
        'uses' => 'Laravel\\Fortify\\Http\\Controllers\\NewPasswordController@store',
        'controller' => 'Laravel\\Fortify\\Http\\Controllers\\NewPasswordController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'password.update',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'register' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'register',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'guest:web',
          3 => 'regStatus',
        ),
        'uses' => 'Laravel\\Fortify\\Http\\Controllers\\RegisteredUserController@create',
        'controller' => 'Laravel\\Fortify\\Http\\Controllers\\RegisteredUserController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'register',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'refer.register' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'register/{reference}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'guest:web',
          3 => 'regStatus',
        ),
        'uses' => 'App\\Http\\Controllers\\UserController@createref',
        'controller' => 'App\\Http\\Controllers\\UserController@createref',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'refer.register',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::5OG6HLWzfULKSR4A' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'register',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'guest:web',
        ),
        'uses' => 'Laravel\\Fortify\\Http\\Controllers\\RegisteredUserController@store',
        'controller' => 'Laravel\\Fortify\\Http\\Controllers\\RegisteredUserController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'generated::5OG6HLWzfULKSR4A',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'verification.notice' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'email/verify',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'auth:web',
        ),
        'uses' => 'Laravel\\Fortify\\Http\\Controllers\\EmailVerificationPromptController@__invoke',
        'controller' => 'Laravel\\Fortify\\Http\\Controllers\\EmailVerificationPromptController@__invoke',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'verification.notice',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'verification.verify' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'email/verify/{id}/{hash}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'auth:web',
          3 => 'signed',
          4 => 'throttle:6,1',
        ),
        'uses' => 'Laravel\\Fortify\\Http\\Controllers\\VerifyEmailController@__invoke',
        'controller' => 'Laravel\\Fortify\\Http\\Controllers\\VerifyEmailController@__invoke',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'verification.verify',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'verification.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'email/verification-notification',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'auth:web',
          3 => 'throttle:6,1',
        ),
        'uses' => 'Laravel\\Fortify\\Http\\Controllers\\EmailVerificationNotificationController@store',
        'controller' => 'Laravel\\Fortify\\Http\\Controllers\\EmailVerificationNotificationController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'verification.send',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user-profile-information.update' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
      ),
      'uri' => 'user/profile-information',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'auth:web',
        ),
        'uses' => 'Laravel\\Fortify\\Http\\Controllers\\ProfileInformationController@update',
        'controller' => 'Laravel\\Fortify\\Http\\Controllers\\ProfileInformationController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'user-profile-information.update',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user-password.update' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
      ),
      'uri' => 'user/password',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'auth:web',
        ),
        'uses' => 'Laravel\\Fortify\\Http\\Controllers\\PasswordController@update',
        'controller' => 'Laravel\\Fortify\\Http\\Controllers\\PasswordController@update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'user-password.update',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'password.confirm' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/confirm-password',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'auth:web',
        ),
        'uses' => 'Laravel\\Fortify\\Http\\Controllers\\ConfirmablePasswordController@show',
        'controller' => 'Laravel\\Fortify\\Http\\Controllers\\ConfirmablePasswordController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'password.confirm',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'password.confirmation' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/confirmed-password-status',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'auth:web',
        ),
        'uses' => 'Laravel\\Fortify\\Http\\Controllers\\ConfirmedPasswordStatusController@show',
        'controller' => 'Laravel\\Fortify\\Http\\Controllers\\ConfirmedPasswordStatusController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'password.confirmation',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::Wv9XLVJ92EyM8cwB' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/confirm-password',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'auth:web',
        ),
        'uses' => 'Laravel\\Fortify\\Http\\Controllers\\ConfirmablePasswordController@store',
        'controller' => 'Laravel\\Fortify\\Http\\Controllers\\ConfirmablePasswordController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'generated::Wv9XLVJ92EyM8cwB',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'two-factor.login' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'two-factor-challenge',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'guest:web',
        ),
        'uses' => 'Laravel\\Fortify\\Http\\Controllers\\TwoFactorAuthenticatedSessionController@create',
        'controller' => 'Laravel\\Fortify\\Http\\Controllers\\TwoFactorAuthenticatedSessionController@create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'two-factor.login',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::St5aMuntbQd1xDe3' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'two-factor-challenge',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'guest:web',
          3 => 'throttle:two-factor',
        ),
        'uses' => 'Laravel\\Fortify\\Http\\Controllers\\TwoFactorAuthenticatedSessionController@store',
        'controller' => 'Laravel\\Fortify\\Http\\Controllers\\TwoFactorAuthenticatedSessionController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'generated::St5aMuntbQd1xDe3',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'two-factor.enable' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/two-factor-authentication',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'auth:web',
          3 => 'password.confirm',
        ),
        'uses' => 'Laravel\\Fortify\\Http\\Controllers\\TwoFactorAuthenticationController@store',
        'controller' => 'Laravel\\Fortify\\Http\\Controllers\\TwoFactorAuthenticationController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'two-factor.enable',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'two-factor.disable' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'user/two-factor-authentication',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'auth:web',
          3 => 'password.confirm',
        ),
        'uses' => 'Laravel\\Fortify\\Http\\Controllers\\TwoFactorAuthenticationController@destroy',
        'controller' => 'Laravel\\Fortify\\Http\\Controllers\\TwoFactorAuthenticationController@destroy',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'two-factor.disable',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'two-factor.qr-code' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/two-factor-qr-code',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'auth:web',
          3 => 'password.confirm',
        ),
        'uses' => 'Laravel\\Fortify\\Http\\Controllers\\TwoFactorQrCodeController@show',
        'controller' => 'Laravel\\Fortify\\Http\\Controllers\\TwoFactorQrCodeController@show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'two-factor.qr-code',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'two-factor.recovery-codes' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/two-factor-recovery-codes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'auth:web',
          3 => 'password.confirm',
        ),
        'uses' => 'Laravel\\Fortify\\Http\\Controllers\\RecoveryCodeController@index',
        'controller' => 'Laravel\\Fortify\\Http\\Controllers\\RecoveryCodeController@index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'two-factor.recovery-codes',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'generated::V3yyhbjRV9bt48xg' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/two-factor-recovery-codes',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'web',
          2 => 'auth:web',
          3 => 'password.confirm',
        ),
        'uses' => 'Laravel\\Fortify\\Http\\Controllers\\RecoveryCodeController@store',
        'controller' => 'Laravel\\Fortify\\Http\\Controllers\\RecoveryCodeController@store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '',
        'where' => 
        array (
        ),
        'as' => 'generated::V3yyhbjRV9bt48xg',
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'trade.trade' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'trade/{symbol}/{currency}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\HomeController@trade',
        'controller' => 'App\\Http\\Controllers\\HomeController@trade',
        'as' => 'trade.trade',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/trade',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'trade.now' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'trade/{symbol}/{currency}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\ExchangeController@trading',
        'controller' => 'App\\Http\\Controllers\\ExchangeController@trading',
        'as' => 'trade.now',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/trade',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'app.home' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
        2 => 'POST',
        3 => 'PUT',
        4 => 'PATCH',
        5 => 'DELETE',
        6 => 'OPTIONS',
      ),
      'uri' => 'app',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\UserController@index',
        'controller' => 'App\\Http\\Controllers\\UserController@index',
        'as' => 'app.home',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/app',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
        'any' => '[\\/\\w\\.-]*',
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'app.' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
        2 => 'POST',
        3 => 'PUT',
        4 => 'PATCH',
        5 => 'DELETE',
        6 => 'OPTIONS',
      ),
      'uri' => 'app/{any}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\UserController@index',
        'controller' => 'App\\Http\\Controllers\\UserController@index',
        'as' => 'app.',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/app',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
        'any' => '[\\/\\w\\.-]*',
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/pusher/auth',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\PusherController@authenticate',
        'controller' => 'App\\Http\\Controllers\\PusherController@authenticate',
        'as' => 'user.',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.profile.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/dashboard',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\UserController@updateProfile',
        'controller' => 'App\\Http\\Controllers\\UserController@updateProfile',
        'as' => 'user.profile.update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.home' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\UserController@index',
        'controller' => 'App\\Http\\Controllers\\UserController@index',
        'as' => 'user.home',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.binary.crypto.rate' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/binary/crypto/rate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\TradeController@btcRate',
        'controller' => 'App\\Http\\Controllers\\TradeController@btcRate',
        'as' => 'user.binary.crypto.rate',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/binary',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.binary.trade.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/binary/trade/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\TradeController@store',
        'controller' => 'App\\Http\\Controllers\\TradeController@store',
        'as' => 'user.binary.trade.store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/binary/trade',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.binary.trade.result' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/binary/trade/result',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\TradeController@tradeResult',
        'controller' => 'App\\Http\\Controllers\\TradeController@tradeResult',
        'as' => 'user.binary.trade.result',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/binary/trade',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.binary.trade.schedule' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/binary/trade/schedule',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\TradeController@schedule',
        'controller' => 'App\\Http\\Controllers\\TradeController@schedule',
        'as' => 'user.binary.trade.schedule',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/binary/trade',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.binary.add.practice.balance' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/binary/add/practice/balance',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\BinaryController@addPracticeBalance',
        'controller' => 'App\\Http\\Controllers\\BinaryController@addPracticeBalance',
        'as' => 'user.binary.add.practice.balance',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/binary',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.binary.practice.crypto.rate' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/binary/practice/crypto/rate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\PracticeController@btcRate',
        'controller' => 'App\\Http\\Controllers\\PracticeController@btcRate',
        'as' => 'user.binary.practice.crypto.rate',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/binary/practice',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.binary.practice.exchange' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/binary/practice/exchange',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\PracticeController@exchange',
        'controller' => 'App\\Http\\Controllers\\PracticeController@exchange',
        'as' => 'user.binary.practice.exchange',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/binary/practice',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.binary.practice.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/binary/practice/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\PracticeController@store',
        'controller' => 'App\\Http\\Controllers\\PracticeController@store',
        'as' => 'user.binary.practice.store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/binary/practice',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.binary.practice.result' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/binary/practice/result',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\PracticeController@tradeResult',
        'controller' => 'App\\Http\\Controllers\\PracticeController@tradeResult',
        'as' => 'user.binary.practice.result',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/binary/practice',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.binary.practice.schedule' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/binary/practice/schedule',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\PracticeController@schedule',
        'controller' => 'App\\Http\\Controllers\\PracticeController@schedule',
        'as' => 'user.binary.practice.schedule',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/binary/practice',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::m4uMkqLhtgzBe87f' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/api/tokens/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\UserController@api_tokens_edit',
        'controller' => 'App\\Http\\Controllers\\UserController@api_tokens_edit',
        'as' => 'user.generated::m4uMkqLhtgzBe87f',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::0Hc0JTIXWaIMePbn' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/api/tokens/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\UserController@api_tokens_store',
        'controller' => 'App\\Http\\Controllers\\UserController@api_tokens_store',
        'as' => 'user.generated::0Hc0JTIXWaIMePbn',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::veRSC1YL0JPOb9ge' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/api/tokens/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\UserController@api_tokens_delete',
        'controller' => 'App\\Http\\Controllers\\UserController@api_tokens_delete',
        'as' => 'user.generated::veRSC1YL0JPOb9ge',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/fetch/api/tokens',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\UserController@api_tokens',
        'controller' => 'App\\Http\\Controllers\\UserController@api_tokens',
        'as' => 'user.fetch.',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/fetch',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.generated::6yrI7RNwDyCmmqnO' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/data',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\UserController@data',
        'controller' => 'App\\Http\\Controllers\\UserController@data',
        'as' => 'user.fetch.generated::6yrI7RNwDyCmmqnO',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/fetch',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.generated::oWvLHtJf02Qkk0wl' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/kyc/data',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\User\\KycController@fetchKycTemplate',
        'controller' => 'App\\Http\\Controllers\\User\\KycController@fetchKycTemplate',
        'as' => 'user.fetch.generated::oWvLHtJf02Qkk0wl',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/fetch',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.generated::sP6A5hDvXJvRRtc6' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/support',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\TicketController@fetch_tickets',
        'controller' => 'App\\Http\\Controllers\\TicketController@fetch_tickets',
        'as' => 'user.fetch.generated::sP6A5hDvXJvRRtc6',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/fetch',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.generated::oT8U6yhZTeLxMEkO' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/support/ticket/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\TicketController@fetch_ticket_messages',
        'controller' => 'App\\Http\\Controllers\\TicketController@fetch_ticket_messages',
        'as' => 'user.fetch.generated::oT8U6yhZTeLxMEkO',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/fetch',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.generated::nnQfYnK6tvtZvHAG' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/trade/orders',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\ExchangeController@trading_orders',
        'controller' => 'App\\Http\\Controllers\\ExchangeController@trading_orders',
        'as' => 'user.fetch.generated::nnQfYnK6tvtZvHAG',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/fetch',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.generated::QAB4cUKiTtumeIKI' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/trade/orders/{symbol}/{currency}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\ExchangeController@trading_market_orders',
        'controller' => 'App\\Http\\Controllers\\ExchangeController@trading_market_orders',
        'as' => 'user.fetch.generated::QAB4cUKiTtumeIKI',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/fetch',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.binary.' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/binary/data',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\BinaryController@index',
        'controller' => 'App\\Http\\Controllers\\BinaryController@index',
        'as' => 'user.fetch.binary.',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/fetch/binary',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.binary.trade.now' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/binary/trade/{symbol}/{currency}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\BinaryController@trade',
        'controller' => 'App\\Http\\Controllers\\BinaryController@trade',
        'as' => 'user.fetch.binary.trade.now',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/fetch/binary/trade',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.binary.trade.wallet' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/binary/trade/wallet',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\BinaryController@fetch_wallet',
        'controller' => 'App\\Http\\Controllers\\BinaryController@fetch_wallet',
        'as' => 'user.fetch.binary.trade.wallet',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/fetch/binary/trade',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.binary.trade.contract.log' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/binary/trade/contracts',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\BinaryController@binary_trade_log',
        'controller' => 'App\\Http\\Controllers\\BinaryController@binary_trade_log',
        'as' => 'user.fetch.binary.trade.contract.log',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/fetch/binary/trade',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.binary.trade.orders' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/binary/trade/orders',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\BinaryController@binary_trade_orders',
        'controller' => 'App\\Http\\Controllers\\BinaryController@binary_trade_orders',
        'as' => 'user.fetch.binary.trade.orders',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/fetch/binary/trade',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.binary.trade.wining.contract.log' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/binary/trade/wining/contracts',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\TradeController@winingTradeContract',
        'controller' => 'App\\Http\\Controllers\\TradeController@winingTradeContract',
        'as' => 'user.fetch.binary.trade.wining.contract.log',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/fetch/binary/trade',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.binary.trade.losing.contract.log' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/binary/trade/losing/contracts',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\TradeController@losingTradeContract',
        'controller' => 'App\\Http\\Controllers\\TradeController@losingTradeContract',
        'as' => 'user.fetch.binary.trade.losing.contract.log',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/fetch/binary/trade',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.binary.trade.draw.contract.log' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/binary/trade/draw/contracts',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\TradeController@drawTradeContract',
        'controller' => 'App\\Http\\Controllers\\TradeController@drawTradeContract',
        'as' => 'user.fetch.binary.trade.draw.contract.log',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/fetch/binary/trade',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.binary.practice.now' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/binary/practice/{symbol}/{currency}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\BinaryController@practice',
        'controller' => 'App\\Http\\Controllers\\BinaryController@practice',
        'as' => 'user.fetch.binary.practice.now',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/fetch/binary/practice',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.binary.practice.contract.log' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/binary/practice/contracts',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\BinaryController@binary_practice_log',
        'controller' => 'App\\Http\\Controllers\\BinaryController@binary_practice_log',
        'as' => 'user.fetch.binary.practice.contract.log',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/fetch/binary/practice',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.binary.practice.orders' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/binary/practice/orders',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\BinaryController@binary_practice_orders',
        'controller' => 'App\\Http\\Controllers\\BinaryController@binary_practice_orders',
        'as' => 'user.fetch.binary.practice.orders',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/fetch/binary/practice',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.binary.contract.preview' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/binary/contract/view/{type}/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\BinaryController@preview',
        'controller' => 'App\\Http\\Controllers\\BinaryController@preview',
        'as' => 'user.fetch.binary.contract.preview',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/fetch/binary',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.wallets' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/wallets',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\WalletController@fetch_wallets',
        'controller' => 'App\\Http\\Controllers\\WalletController@fetch_wallets',
        'as' => 'user.fetch.wallets',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/fetch',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.wallet' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/wallet/{type}/{symbol}/{address}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\WalletController@fetch_wallet',
        'controller' => 'App\\Http\\Controllers\\WalletController@fetch_wallet',
        'as' => 'user.fetch.wallet',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/fetch',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.wallet.balance' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/wallet',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\WalletController@fetch_wallet_balance',
        'controller' => 'App\\Http\\Controllers\\WalletController@fetch_wallet_balance',
        'as' => 'user.fetch.wallet.balance',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/fetch',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.withdraw.history' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/withdraw/history',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\UserController@fetch_withdraw_history',
        'controller' => 'App\\Http\\Controllers\\UserController@fetch_withdraw_history',
        'as' => 'user.fetch.withdraw.history',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/fetch',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.deposit.history' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/deposit/history',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\UserController@fetch_deposit_history',
        'controller' => 'App\\Http\\Controllers\\UserController@fetch_deposit_history',
        'as' => 'user.fetch.deposit.history',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/fetch',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.transaction.history' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/transaction/history',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\UserController@fetch_transaction_history',
        'controller' => 'App\\Http\\Controllers\\UserController@fetch_transaction_history',
        'as' => 'user.fetch.transaction.history',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/fetch',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.news' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/news',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\RssfeedController@fetch_news',
        'controller' => 'App\\Http\\Controllers\\RssfeedController@fetch_news',
        'as' => 'user.fetch.news',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/fetch',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.trade.now' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/trade/{symbol}/{currency}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\ExchangeController@trading',
        'controller' => 'App\\Http\\Controllers\\ExchangeController@trading',
        'as' => 'user.trade.now',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/trade',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.trade.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/trade/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
          4 => 'vue',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\ExchangeController@store',
        'controller' => 'App\\Http\\Controllers\\ExchangeController@store',
        'as' => 'user.trade.store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/trade',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.trade.cancel' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/trade/cancel',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
          4 => 'vue',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\ExchangeController@cancel',
        'controller' => 'App\\Http\\Controllers\\ExchangeController@cancel',
        'as' => 'user.trade.cancel',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/trade',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.trade.' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/trade/fetch_order',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\ExchangeController@fetch_order',
        'controller' => 'App\\Http\\Controllers\\ExchangeController@fetch_order',
        'as' => 'user.trade.',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/trade',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.wallet.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/wallet/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\WalletController@store',
        'controller' => 'App\\Http\\Controllers\\WalletController@store',
        'as' => 'user.wallet.store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/wallet',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.wallet.fetch' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/wallet/fetch',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\WalletController@fetchWallet',
        'controller' => 'App\\Http\\Controllers\\WalletController@fetchWallet',
        'as' => 'user.wallet.fetch',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/wallet',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.wallet.regenerate' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/wallet/regenerate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\WalletController@regenerate',
        'controller' => 'App\\Http\\Controllers\\WalletController@regenerate',
        'as' => 'user.wallet.regenerate',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/wallet',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.wallet.deposit' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/wallet/deposit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\WalletController@deposit',
        'controller' => 'App\\Http\\Controllers\\WalletController@deposit',
        'as' => 'user.wallet.deposit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/wallet',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.wallet.' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/wallet/deposit/verify/{trx}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\WalletController@verify',
        'controller' => 'App\\Http\\Controllers\\WalletController@verify',
        'as' => 'user.wallet.',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/wallet',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.wallet.generated::nfqzYPB6lfaNQk2w' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/wallet/deposit/cancel/{trx}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\WalletController@cancel',
        'controller' => 'App\\Http\\Controllers\\WalletController@cancel',
        'as' => 'user.wallet.generated::nfqzYPB6lfaNQk2w',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/wallet',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.wallet.withdraw' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/wallet/withdraw',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
          4 => 'vue',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\WalletController@withdraw',
        'controller' => 'App\\Http\\Controllers\\WalletController@withdraw',
        'as' => 'user.wallet.withdraw',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/wallet',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.wallet.transfer' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/wallet/transfer',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\WalletController@transfer',
        'controller' => 'App\\Http\\Controllers\\WalletController@transfer',
        'as' => 'user.wallet.transfer',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/wallet',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.wallet.connect' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/wallet/connect',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\WalletController@connect',
        'controller' => 'App\\Http\\Controllers\\WalletController@connect',
        'as' => 'user.wallet.connect',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/wallet',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.wallet.disconnect' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/wallet/disconnect',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\WalletController@disconnect',
        'controller' => 'App\\Http\\Controllers\\WalletController@disconnect',
        'as' => 'user.wallet.disconnect',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/wallet',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.watchlists' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/watchlists',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\WatchlistController@index',
        'controller' => 'App\\Http\\Controllers\\WatchlistController@index',
        'as' => 'user.watchlists',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::yXqlLuefBDxKI6FH' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/watchlist/data',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\WatchlistController@favs',
        'controller' => 'App\\Http\\Controllers\\WatchlistController@favs',
        'as' => 'user.generated::yXqlLuefBDxKI6FH',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.watchlist.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/watchlist/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\WatchlistController@store',
        'controller' => 'App\\Http\\Controllers\\WatchlistController@store',
        'as' => 'user.watchlist.store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.watchlist.delete' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/watchlist/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\WatchlistController@delete',
        'controller' => 'App\\Http\\Controllers\\WatchlistController@delete',
        'as' => 'user.watchlist.delete',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.kyc' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/kyc',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\User\\KycController@index',
        'controller' => 'App\\Http\\Controllers\\User\\KycController@index',
        'as' => 'user.kyc',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.kyc.application' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/kyc/application',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\User\\KycController@application',
        'controller' => 'App\\Http\\Controllers\\User\\KycController@application',
        'as' => 'user.kyc.application',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.kyc.application.view' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/kyc/application/view',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\User\\KycController@view',
        'controller' => 'App\\Http\\Controllers\\User\\KycController@view',
        'as' => 'user.kyc.application.view',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.kyc.submit' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/kyc/submit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\User\\KycController@submit',
        'controller' => 'App\\Http\\Controllers\\User\\KycController@submit',
        'as' => 'user.kyc.submit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.info' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/bot',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Bot\\BotController@fetch_info',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Bot\\BotController@fetch_info',
        'as' => 'user.fetch.info',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.bot' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/bot/info',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Bot\\BotController@fetch_bot',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Bot\\BotController@fetch_bot',
        'as' => 'user.fetch.bot',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.store.bot' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/store/bot',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Bot\\BotController@store',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Bot\\BotController@store',
        'as' => 'user.store.bot',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.ico' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/ico',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Ico\\IcoController@fetch_info',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Ico\\IcoController@fetch_info',
        'as' => 'user.fetch.ico',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.ico.info' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/ico/{symbol}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Ico\\IcoController@fetch_ico_info',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Ico\\IcoController@fetch_ico_info',
        'as' => 'user.fetch.ico.info',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.store.ico' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/store/ico',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Ico\\IcoController@store',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Ico\\IcoController@store',
        'as' => 'user.store.ico',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.store.ico.rec_wallet' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/store/ico/rec_wallet',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Ico\\IcoController@store_rec_wallet',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Ico\\IcoController@store_rec_wallet',
        'as' => 'user.store.ico.rec_wallet',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.network' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/network',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\MLM\\MLMController@fetch_network',
        'controller' => 'App\\Http\\Controllers\\Extensions\\MLM\\MLMController@fetch_network',
        'as' => 'user.fetch.network',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.mlm.withdraw' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/mlm/withdraw',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\MLM\\MLMController@withdraw',
        'controller' => 'App\\Http\\Controllers\\Extensions\\MLM\\MLMController@withdraw',
        'as' => 'user.mlm.withdraw',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/mlm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.mlm.deposit' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/mlm/deposit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\MLM\\MLMController@deposit',
        'controller' => 'App\\Http\\Controllers\\Extensions\\MLM\\MLMController@deposit',
        'as' => 'user.mlm.deposit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/mlm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.forex' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/forex',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Forex\\ForexController@fetch_info',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Forex\\ForexController@fetch_info',
        'as' => 'user.fetch.forex',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.forex.create' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/forex/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Forex\\ForexController@create',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Forex\\ForexController@create',
        'as' => 'user.forex.create',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/forex',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.forex.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/forex/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Forex\\ForexController@store',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Forex\\ForexController@store',
        'as' => 'user.forex.store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/forex',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.forex.withdraw' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/forex/withdraw',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Forex\\ForexController@withdraw',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Forex\\ForexController@withdraw',
        'as' => 'user.forex.withdraw',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/forex',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.forex.deposit' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/forex/deposit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Forex\\ForexController@deposit',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Forex\\ForexController@deposit',
        'as' => 'user.forex.deposit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/forex',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.staking' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/staking',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Staking\\StakingController@fetch_info',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Staking\\StakingController@fetch_info',
        'as' => 'user.fetch.staking',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.fetch.staking.logs' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/fetch/staking/logs',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Staking\\StakingController@fetch_log',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Staking\\StakingController@fetch_log',
        'as' => 'user.fetch.staking.logs',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.staking.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/staking/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Staking\\StakingController@store',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Staking\\StakingController@store',
        'as' => 'user.staking.store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/staking',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.staking.claim' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/staking/claim',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Staking\\StakingController@claim',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Staking\\StakingController@claim',
        'as' => 'user.staking.claim',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/staking',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.staking.cancel' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/staking/cancel',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Staking\\StakingController@cancel',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Staking\\StakingController@cancel',
        'as' => 'user.staking.cancel',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/staking',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::ZNNX3gJZ61dYt5s2' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/p2p/offers',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2POfferController@index',
        'controller' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2POfferController@index',
        'as' => 'user.generated::ZNNX3gJZ61dYt5s2',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/p2p',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::GYI5P3PI3NrVwSIm' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/p2p/offers',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2POfferController@store',
        'controller' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2POfferController@store',
        'as' => 'user.generated::GYI5P3PI3NrVwSIm',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/p2p',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::hbPNEbYShJGwffDq' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
      ),
      'uri' => 'user/p2p/offers/{offer}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2POfferController@update',
        'controller' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2POfferController@update',
        'as' => 'user.generated::hbPNEbYShJGwffDq',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/p2p',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::OaJdUsJikkg7sjoD' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'user/p2p/offers/{offer}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2POfferController@destroy',
        'controller' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2POfferController@destroy',
        'as' => 'user.generated::OaJdUsJikkg7sjoD',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/p2p',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::buC8oQARK49tGoOw' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/p2p/orders',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2POrderController@index',
        'controller' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2POrderController@index',
        'as' => 'user.generated::buC8oQARK49tGoOw',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/p2p',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::T0n1fHmmcFVqvwpD' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/p2p/orders/user',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2POrderController@orders',
        'controller' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2POrderController@orders',
        'as' => 'user.generated::T0n1fHmmcFVqvwpD',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/p2p',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::KHjEfB8ucDgMNlMa' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/p2p/orders/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2POrderController@show',
        'controller' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2POrderController@show',
        'as' => 'user.generated::KHjEfB8ucDgMNlMa',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/p2p',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::FFggc4NaEOy84BmQ' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/p2p/orders',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2POrderController@store',
        'controller' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2POrderController@store',
        'as' => 'user.generated::FFggc4NaEOy84BmQ',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/p2p',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::q20VEqXhc2zyMsq9' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
      ),
      'uri' => 'user/p2p/orders/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2POrderController@update',
        'controller' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2POrderController@update',
        'as' => 'user.generated::q20VEqXhc2zyMsq9',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/p2p',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::Gbh2hiDlp4eM16vM' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'user/p2p/orders/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2POrderController@destroy',
        'controller' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2POrderController@destroy',
        'as' => 'user.generated::Gbh2hiDlp4eM16vM',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/p2p',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::LmOK3hq0PjxeVVMt' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/p2p/orders/{id}/chat',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2PChatController@getMessages',
        'controller' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2PChatController@getMessages',
        'as' => 'user.generated::LmOK3hq0PjxeVVMt',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/p2p',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::XKFenrwOcgh1nrsI' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/p2p/orders/{id}/chat',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2PChatController@createMessage',
        'controller' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2PChatController@createMessage',
        'as' => 'user.generated::XKFenrwOcgh1nrsI',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/p2p',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::im6t4VAgEEkmG8Ns' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/p2p/orders/{id}/review',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2POrderController@submitReview',
        'controller' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2POrderController@submitReview',
        'as' => 'user.generated::im6t4VAgEEkmG8Ns',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/p2p',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::BAGcBUUV3Rx5phMB' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/p2p/orders/{order}/transaction',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2POrderController@submitTransactionId',
        'controller' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2POrderController@submitTransactionId',
        'as' => 'user.generated::BAGcBUUV3Rx5phMB',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/p2p',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::FOnaRhZXsA5S5R0U' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/p2p/orders/{order}/confirm',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2POrderController@confirmPayment',
        'controller' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2POrderController@confirmPayment',
        'as' => 'user.generated::FOnaRhZXsA5S5R0U',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/p2p',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::ZyZDjD2oTmx9LyVp' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/p2p/orders/{order}/cancel',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2POrderController@cancelOrder',
        'controller' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2POrderController@cancelOrder',
        'as' => 'user.generated::ZyZDjD2oTmx9LyVp',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/p2p',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::6mE1t6MYxiSfy1c2' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/p2p/seller',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2PSellerController@index',
        'controller' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2PSellerController@index',
        'as' => 'user.generated::6mE1t6MYxiSfy1c2',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/p2p',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::j6CnXZBWobijDu0D' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/p2p/seller/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2PSellerController@show',
        'controller' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2PSellerController@show',
        'as' => 'user.generated::j6CnXZBWobijDu0D',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/p2p',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::xARmYFvBLy4IoI68' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'user/p2p/seller/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2PSellerController@destroy',
        'controller' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2PSellerController@destroy',
        'as' => 'user.generated::xARmYFvBLy4IoI68',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/p2p',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::dFG1Dm7a273KjpK0' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/p2p/seller/offer',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2PSellerController@storeOffer',
        'controller' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2PSellerController@storeOffer',
        'as' => 'user.generated::dFG1Dm7a273KjpK0',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/p2p',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::PWoyVjEsRQS4Rg8B' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
      ),
      'uri' => 'user/p2p/seller/offer/{offer}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2PSellerController@updateOffer',
        'controller' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2PSellerController@updateOffer',
        'as' => 'user.generated::PWoyVjEsRQS4Rg8B',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/p2p',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::fmQUrkdFrhu3juGK' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/p2p/seller/apply',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2PSellerController@apply',
        'controller' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2PSellerController@apply',
        'as' => 'user.generated::fmQUrkdFrhu3juGK',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/p2p',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::Lj8zmSOvJClIb0FF' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/p2p/seller/payment-methods',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2PSellerController@storePaymentMethod',
        'controller' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2PSellerController@storePaymentMethod',
        'as' => 'user.generated::Lj8zmSOvJClIb0FF',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/p2p',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::Nffnn7wCNSXrZHfF' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
      ),
      'uri' => 'user/p2p/seller/payment-methods/{paymentMethod}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2PSellerController@updatePaymentMethod',
        'controller' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2PSellerController@updatePaymentMethod',
        'as' => 'user.generated::Nffnn7wCNSXrZHfF',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/p2p',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::GaitThtJAII7OoL5' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'user/p2p/seller/payment-methods/{paymentMethod}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2PSellerController@destroyPaymentMethod',
        'controller' => 'App\\Http\\Controllers\\Extensions\\P2P\\P2PSellerController@destroyPaymentMethod',
        'as' => 'user.generated::GaitThtJAII7OoL5',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/p2p',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::UEZLEhEYVw9M6tBX' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/eco/market/pair',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\EcoController@markets_by_pair',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\EcoController@markets_by_pair',
        'as' => 'user.generated::UEZLEhEYVw9M6tBX',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/eco',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::krLCTbTnY5HAW3go' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/eco/market/volume',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\EcoController@markets_by_volume',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\EcoController@markets_by_volume',
        'as' => 'user.generated::krLCTbTnY5HAW3go',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/eco',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::5AnSxyTgR3ubrexS' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/eco/market/symbol',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\EcoController@markets_by_symbol',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\EcoController@markets_by_symbol',
        'as' => 'user.generated::5AnSxyTgR3ubrexS',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/eco',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::VBBIiDDjBHsVwyDM' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/eco/trades',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\EcoController@trades',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\EcoController@trades',
        'as' => 'user.generated::VBBIiDDjBHsVwyDM',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/eco',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::XnCzPNIB8tNb8Glg' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/eco/orders',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\EcoController@orders',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\EcoController@orders',
        'as' => 'user.generated::XnCzPNIB8tNb8Glg',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/eco',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::vSiVu9aUdGKF0iAC' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/eco/orderbook',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\OrderbookController@getOrderBookDataJson',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\OrderbookController@getOrderBookDataJson',
        'as' => 'user.generated::vSiVu9aUdGKF0iAC',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/eco',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::BzvEJ7X5icqPmT15' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/eco/orderbook/history',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\OrderbookController@getOrderBookDataHistory',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\OrderbookController@getOrderBookDataHistory',
        'as' => 'user.generated::BzvEJ7X5icqPmT15',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/eco',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::P4LeDDiO4wMYpMMv' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/eco/index',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\EcoController@index',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\EcoController@index',
        'as' => 'user.generated::P4LeDDiO4wMYpMMv',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/eco',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::qCFMjLGsx2JJs3Rs' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/eco/trade/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\OrderController@store',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\OrderController@store',
        'as' => 'user.generated::qCFMjLGsx2JJs3Rs',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/eco',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::WQgXCBaV6DObS5s2' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/eco/order/cancel',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\OrderController@destroy',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\OrderController@destroy',
        'as' => 'user.generated::WQgXCBaV6DObS5s2',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/eco',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::TcqbSVLIe2GbUFkZ' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/eco/wallets',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\WalletController@index',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\WalletController@index',
        'as' => 'user.generated::TcqbSVLIe2GbUFkZ',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/eco',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::IJ4Il7iygad1toYl' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/eco/wallet/{symbol}/{address}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\WalletController@show',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\WalletController@show',
        'as' => 'user.generated::IJ4Il7iygad1toYl',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/eco/wallet',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::zpoLC9w9nHeVcLvc' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/eco/wallet/logs/{symbol}/{address}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\WalletController@logs',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\WalletController@logs',
        'as' => 'user.generated::zpoLC9w9nHeVcLvc',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/eco/wallet',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::crGub1u7gVgsHB6S' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/eco/wallet/balance',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\WalletController@balance',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\WalletController@balance',
        'as' => 'user.generated::crGub1u7gVgsHB6S',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/eco/wallet',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::sKEXfU4PjcFSXTL0' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/eco/wallet/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\WalletController@store',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\WalletController@store',
        'as' => 'user.generated::sKEXfU4PjcFSXTL0',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/eco/wallet',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::0nKcw00rLOFXPA6c' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/eco/wallet/transfer',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\WalletController@transfer',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\WalletController@transfer',
        'as' => 'user.generated::0nKcw00rLOFXPA6c',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/eco/wallet',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::drcPGMJYDnOpfYbd' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/eco/wallet/transfer/funds',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\WalletController@transferFunds',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\WalletController@transferFunds',
        'as' => 'user.generated::drcPGMJYDnOpfYbd',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/eco/wallet',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::YYkDPbo46o3zJbpz' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/eco/wallet/withdraw',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\WithdrawController@withdraw',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\WithdrawController@withdraw',
        'as' => 'user.generated::YYkDPbo46o3zJbpz',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/eco/wallet',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::GixyrrHDndzrpKVu' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/eco/chart/{symbol}/{currency}/{timeframe}/json',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\ChartController@getChartDataJson',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\ChartController@getChartDataJson',
        'as' => 'user.generated::GixyrrHDndzrpKVu',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/eco',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::wWV9eF6VY0dW55VJ' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/eco/chart/{symbol}/{currency}/{timeframe}/request',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\ChartController@requestChartData',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\ChartController@requestChartData',
        'as' => 'user.generated::wWV9eF6VY0dW55VJ',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/eco',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::EvFJptlHvBo7BHR2' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/eco/chart/{symbol}/{currency}/{timeframe}/{from}/{to}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Eco\\ChartController@getPartialChartData',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Eco\\ChartController@getPartialChartData',
        'as' => 'user.generated::EvFJptlHvBo7BHR2',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/eco',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.knowledge.categories.check_slug' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/knowledge/categories/check_slug',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\KnowledgeBase\\CategoryController@check_slug',
        'controller' => 'App\\Http\\Controllers\\Extensions\\KnowledgeBase\\CategoryController@check_slug',
        'as' => 'user.knowledge.categories.check_slug',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.knowledge.categories.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/knowledge/categories/{slug}/{category}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\KnowledgeBase\\CategoryController@show',
        'controller' => 'App\\Http\\Controllers\\Extensions\\KnowledgeBase\\CategoryController@show',
        'as' => 'user.knowledge.categories.show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.knowledge.tags.check_slug' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/knowledge/tags/check_slug',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\KnowledgeBase\\TagController@check_slug',
        'controller' => 'App\\Http\\Controllers\\Extensions\\KnowledgeBase\\TagController@check_slug',
        'as' => 'user.knowledge.tags.check_slug',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.knowledge.tags.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/knowledge/tags/{slug}/{tag}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\KnowledgeBase\\TagController@show',
        'controller' => 'App\\Http\\Controllers\\Extensions\\KnowledgeBase\\TagController@show',
        'as' => 'user.knowledge.tags.show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.knowledge.articles.check_slug' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/knowledge/articles/check_slug',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\KnowledgeBase\\ArticleController@check_slug',
        'controller' => 'App\\Http\\Controllers\\Extensions\\KnowledgeBase\\ArticleController@check_slug',
        'as' => 'user.knowledge.articles.check_slug',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.knowledge.articles.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/knowledge/articles/{slug}/{article}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\KnowledgeBase\\ArticleController@show',
        'controller' => 'App\\Http\\Controllers\\Extensions\\KnowledgeBase\\ArticleController@show',
        'as' => 'user.knowledge.articles.show',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.knowledge.articles.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/knowledge/articles',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\KnowledgeBase\\ArticleController@index',
        'controller' => 'App\\Http\\Controllers\\Extensions\\KnowledgeBase\\ArticleController@index',
        'as' => 'user.knowledge.articles.index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.knowledge.faq.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/knowledge/faq',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\KnowledgeBase\\FaqController@index',
        'controller' => 'App\\Http\\Controllers\\Extensions\\KnowledgeBase\\FaqController@index',
        'as' => 'user.knowledge.faq.index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.knowledge.faq.search' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/knowledge/faq/{search}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\KnowledgeBase\\FaqController@search',
        'controller' => 'App\\Http\\Controllers\\Extensions\\KnowledgeBase\\FaqController@search',
        'as' => 'user.knowledge.faq.search',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.knowledge.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/knowledge',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\KnowledgeBase\\HomeController@index',
        'controller' => 'App\\Http\\Controllers\\Extensions\\KnowledgeBase\\HomeController@index',
        'as' => 'user.knowledge.index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.marketplace.' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/marketplace/fetch',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Ecommerce\\EcommerceController@index',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Ecommerce\\EcommerceController@index',
        'as' => 'user.marketplace.',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/marketplace',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.marketplace.generated::QT0J3EtnFCBy75cM' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/marketplace/wishlist',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Ecommerce\\EcommerceController@wishlist',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Ecommerce\\EcommerceController@wishlist',
        'as' => 'user.marketplace.generated::QT0J3EtnFCBy75cM',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/marketplace',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.marketplace.generated::Db9DbCqyF1ZaCAyh' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/marketplace/order-history',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Ecommerce\\EcommerceController@getUserOrders',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Ecommerce\\EcommerceController@getUserOrders',
        'as' => 'user.marketplace.generated::Db9DbCqyF1ZaCAyh',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/marketplace',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.marketplace.generated::jaZDXO41vZWdFpHY' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/marketplace/order/activate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Ecommerce\\EcommerceController@activateOrder',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Ecommerce\\EcommerceController@activateOrder',
        'as' => 'user.marketplace.generated::jaZDXO41vZWdFpHY',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/marketplace',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.marketplace.generated::YGRzpe1aciIS3gPb' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/marketplace/purchase',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Ecommerce\\EcommerceController@purchase',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Ecommerce\\EcommerceController@purchase',
        'as' => 'user.marketplace.generated::YGRzpe1aciIS3gPb',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/marketplace',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.marketplace.generated::NtTTpkejkQF4gFfc' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/marketplace/product/details/{id}/{slug}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Ecommerce\\EcommerceController@ProductDetails',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Ecommerce\\EcommerceController@ProductDetails',
        'as' => 'user.marketplace.generated::NtTTpkejkQF4gFfc',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/marketplace',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.marketplace.generated::sL9d4ivqrsSxHlOT' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/marketplace/product/tag/{tag}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Extensions\\Ecommerce\\EcommerceController@TagWiseProduct',
        'controller' => 'App\\Http\\Controllers\\Extensions\\Ecommerce\\EcommerceController@TagWiseProduct',
        'as' => 'user.marketplace.generated::sL9d4ivqrsSxHlOT',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/marketplace',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.marketplace.generated::nZ4rHJnniDLTU1yB' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/marketplace/add-to-wishlist/{product_id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\CartController@AddToWishlist',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\CartController@AddToWishlist',
        'as' => 'user.marketplace.generated::nZ4rHJnniDLTU1yB',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/marketplace',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.marketplace.generated::ctPCTCNDBCGwAZHo' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/marketplace/wishlist/add',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\WishlistController@add',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\WishlistController@add',
        'as' => 'user.marketplace.generated::ctPCTCNDBCGwAZHo',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/marketplace',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.marketplace.generated::Bly3gAnhYstZnYjN' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/marketplace/wishlist/remove',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\WishlistController@remove',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\WishlistController@remove',
        'as' => 'user.marketplace.generated::Bly3gAnhYstZnYjN',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/marketplace',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.marketplace.generated::8MDeq92WFkKuxPiW' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/marketplace/get-wishlist-product',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\WishlistController@GetWishlistProduct',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\WishlistController@GetWishlistProduct',
        'as' => 'user.marketplace.generated::8MDeq92WFkKuxPiW',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/marketplace',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.marketplace.generated::yNSNFgwzUMyMz0F1' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/marketplace/wishlist-remove/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\WishlistController@RemoveWishlistProduct',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\WishlistController@RemoveWishlistProduct',
        'as' => 'user.marketplace.generated::yNSNFgwzUMyMz0F1',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/marketplace',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.deposit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
        2 => 'POST',
        3 => 'PUT',
        4 => 'PATCH',
        5 => 'DELETE',
        6 => 'OPTIONS',
      ),
      'uri' => 'user/deposit/wallet',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Gateway\\PaymentController@deposit',
        'controller' => 'App\\Http\\Controllers\\Gateway\\PaymentController@deposit',
        'as' => 'user.deposit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.deposit.insert' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/deposit/insert',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Gateway\\PaymentController@depositInsert',
        'controller' => 'App\\Http\\Controllers\\Gateway\\PaymentController@depositInsert',
        'as' => 'user.deposit.insert',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.deposit.preview' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/deposit/preview',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Gateway\\PaymentController@depositPreview',
        'controller' => 'App\\Http\\Controllers\\Gateway\\PaymentController@depositPreview',
        'as' => 'user.deposit.preview',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.deposit.confirm' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/deposit/confirm',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Gateway\\PaymentController@depositConfirm',
        'controller' => 'App\\Http\\Controllers\\Gateway\\PaymentController@depositConfirm',
        'as' => 'user.deposit.confirm',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.deposit.manual.confirm' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/deposit/manual',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Gateway\\PaymentController@manualDepositConfirm',
        'controller' => 'App\\Http\\Controllers\\Gateway\\PaymentController@manualDepositConfirm',
        'as' => 'user.deposit.manual.confirm',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.deposit.manual.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/deposit/manual',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Gateway\\PaymentController@manualDepositUpdate',
        'controller' => 'App\\Http\\Controllers\\Gateway\\PaymentController@manualDepositUpdate',
        'as' => 'user.deposit.manual.update',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.deposit.history' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/deposit/history',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\UserController@depositHistory',
        'controller' => 'App\\Http\\Controllers\\UserController@depositHistory',
        'as' => 'user.deposit.history',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.withdraw' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/withdraw/wallet/{symbol}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\UserController@withdrawMoney',
        'controller' => 'App\\Http\\Controllers\\UserController@withdrawMoney',
        'as' => 'user.withdraw',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.withdraw.money' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/withdraw',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\UserController@withdrawStore',
        'controller' => 'App\\Http\\Controllers\\UserController@withdrawStore',
        'as' => 'user.withdraw.money',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.withdraw.preview' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/withdraw/preview',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\UserController@withdrawPreview',
        'controller' => 'App\\Http\\Controllers\\UserController@withdrawPreview',
        'as' => 'user.withdraw.preview',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.withdraw.submit' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/withdraw/preview',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\UserController@withdrawSubmit',
        'controller' => 'App\\Http\\Controllers\\UserController@withdrawSubmit',
        'as' => 'user.withdraw.submit',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.withdraw.history' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/withdraw/history',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\UserController@withdrawLog',
        'controller' => 'App\\Http\\Controllers\\UserController@withdrawLog',
        'as' => 'user.withdraw.history',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.support.ticket.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/support/tickets',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\TicketController@index',
        'controller' => 'App\\Http\\Controllers\\TicketController@index',
        'as' => 'user.support.ticket.index',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/support/tickets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.support.ticket.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/support/tickets',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\TicketController@store',
        'controller' => 'App\\Http\\Controllers\\TicketController@store',
        'as' => 'user.support.ticket.store',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/support/tickets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.support.ticket.' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/support/tickets/{id}/messages',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\TicketController@getMessages',
        'controller' => 'App\\Http\\Controllers\\TicketController@getMessages',
        'as' => 'user.support.ticket.',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/support/tickets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.support.ticket.generated::N51u67a50vPrlU9B' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/support/tickets/{id}/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\TicketController@createMessage',
        'controller' => 'App\\Http\\Controllers\\TicketController@createMessage',
        'as' => 'user.support.ticket.generated::N51u67a50vPrlU9B',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/support/tickets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.support.ticket.upload-image' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/support/tickets/upload-image',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\TicketController@uploadImage',
        'controller' => 'App\\Http\\Controllers\\TicketController@uploadImage',
        'as' => 'user.support.ticket.upload-image',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/support/tickets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.popups.disable' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/popups/disable',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Admin\\PopupsController@disable_popup',
        'controller' => 'App\\Http\\Controllers\\Admin\\PopupsController@disable_popup',
        'as' => 'user.popups.disable',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/popups',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::sfKrhrSMHDyGxuM3' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/investment',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\InvestmentController@index',
        'controller' => 'App\\Http\\Controllers\\InvestmentController@index',
        'as' => 'user.generated::sfKrhrSMHDyGxuM3',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/investment',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::pLQVD9wat03zATeH' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/investment/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\InvestmentController@store',
        'controller' => 'App\\Http\\Controllers\\InvestmentController@store',
        'as' => 'user.generated::pLQVD9wat03zATeH',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/investment',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::b5MrXgLuoi93bZkk' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
      ),
      'uri' => 'user/investment/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\InvestmentController@update',
        'controller' => 'App\\Http\\Controllers\\InvestmentController@update',
        'as' => 'user.generated::b5MrXgLuoi93bZkk',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/investment',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.generated::JapvXpZrRBbb6VCJ' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'user/investment/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\InvestmentController@destroy',
        'controller' => 'App\\Http\\Controllers\\InvestmentController@destroy',
        'as' => 'user.generated::JapvXpZrRBbb6VCJ',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/investment',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.log.' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'user/investment/log',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\Admin\\InvestmentLogController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\InvestmentLogController@index',
        'as' => 'user.log.',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/investment/log',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'user.log.generated::ySnI3zeP11rglloD' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'user/investment/log/cancel',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'verified',
          3 => 'checkStatus',
        ),
        0 => 'role:user',
        'uses' => 'App\\Http\\Controllers\\InvestmentController@cancel',
        'controller' => 'App\\Http\\Controllers\\InvestmentController@cancel',
        'as' => 'user.log.generated::ySnI3zeP11rglloD',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => 'user/investment/log',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.dashboard' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/dashboard',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminController@dashboard',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminController@dashboard',
        'as' => 'admin.dashboard',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.market' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/market',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\MarketController@index',
        'controller' => 'App\\Http\\Controllers\\MarketController@index',
        'as' => 'admin.market',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.tokens.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/tokens',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.tokens.index',
        'uses' => 'App\\Http\\Controllers\\Admin\\TokensController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\TokensController@index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.tokens.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/tokens/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.tokens.create',
        'uses' => 'App\\Http\\Controllers\\Admin\\TokensController@create',
        'controller' => 'App\\Http\\Controllers\\Admin\\TokensController@create',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.tokens.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/tokens',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.tokens.store',
        'uses' => 'App\\Http\\Controllers\\Admin\\TokensController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\TokensController@store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.tokens.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/tokens/{token}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.tokens.show',
        'uses' => 'App\\Http\\Controllers\\Admin\\TokensController@show',
        'controller' => 'App\\Http\\Controllers\\Admin\\TokensController@show',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.tokens.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/tokens/{token}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.tokens.edit',
        'uses' => 'App\\Http\\Controllers\\Admin\\TokensController@edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\TokensController@edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.tokens.update' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
        1 => 'PATCH',
      ),
      'uri' => 'admin/tokens/{token}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.tokens.update',
        'uses' => 'App\\Http\\Controllers\\Admin\\TokensController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\TokensController@update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.tokens.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'admin/tokens/{token}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.tokens.destroy',
        'uses' => 'App\\Http\\Controllers\\Admin\\TokensController@destroy',
        'controller' => 'App\\Http\\Controllers\\Admin\\TokensController@destroy',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.api.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/api-tokens',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminController@api',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminController@api',
        'as' => 'admin.api.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.clean' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/clear',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminController@clean',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminController@clean',
        'as' => 'admin.clean',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.update' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'POST',
        2 => 'HEAD',
      ),
      'uri' => 'admin/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UpdateController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\UpdateController@index',
        'as' => 'admin.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.update.check' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/update/check',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UpdateController@check_new_version',
        'controller' => 'App\\Http\\Controllers\\Admin\\UpdateController@check_new_version',
        'as' => 'admin.update.check',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.lic.activate' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'POST',
        2 => 'HEAD',
      ),
      'uri' => 'admin/lic/activate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UpdateController@lic_activate',
        'controller' => 'App\\Http\\Controllers\\Admin\\UpdateController@lic_activate',
        'as' => 'admin.lic.activate',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.lic.deactivate' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'POST',
        2 => 'HEAD',
      ),
      'uri' => 'admin/lic/deactivate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UpdateController@lic_deactivate',
        'controller' => 'App\\Http\\Controllers\\Admin\\UpdateController@lic_deactivate',
        'as' => 'admin.lic.deactivate',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.tests' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/tests',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\TestController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\TestController@index',
        'as' => 'admin.tests',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.test.cors' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/test/cors',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\TestController@cors',
        'controller' => 'App\\Http\\Controllers\\Admin\\TestController@cors',
        'as' => 'admin.test.cors',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.terminal' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/terminal',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\TestController@terminal',
        'controller' => 'App\\Http\\Controllers\\Admin\\TestController@terminal',
        'as' => 'admin.terminal',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.terminal.run' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/terminal/run/{command}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\TestController@runCommand',
        'controller' => 'App\\Http\\Controllers\\Admin\\TestController@runCommand',
        'as' => 'admin.terminal.run',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.cron' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/cron',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\CronController@view',
        'controller' => 'App\\Http\\Controllers\\CronController@view',
        'as' => 'admin.cron',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.notification.read' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/notification/read/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminController@notificationRead',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminController@notificationRead',
        'as' => 'admin.notification.read',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.notifications' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/notification',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminController@notifications',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminController@notifications',
        'as' => 'admin.notifications',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.notifications.clean' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/notification/clean',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminController@notifications_clean',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminController@notifications_clean',
        'as' => 'admin.notifications.clean',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.notifications.clean.seen' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/notification/clean/seen',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminController@notifications_clean_seen',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminController@notifications_clean_seen',
        'as' => 'admin.notifications.clean.seen',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.all' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/users',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@allUsers',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@allUsers',
        'as' => 'admin.users.all',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/users',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.import' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/users/import',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@import',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@import',
        'as' => 'admin.users.import',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/users',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.importing' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/users/importing',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@importing',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@importing',
        'as' => 'admin.users.importing',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/users',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.template' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/users/template',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@downloadTemplate',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@downloadTemplate',
        'as' => 'admin.users.template',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/users',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.remove' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/users/remove',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@remove',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@remove',
        'as' => 'admin.users.remove',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/users',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.login.history.single' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/users/login/history/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@userLoginHistory',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@userLoginHistory',
        'as' => 'admin.users.login.history.single',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/users',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.email.all' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/users/send-email',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@showEmailAllForm',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@showEmailAllForm',
        'as' => 'admin.users.email.all',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/users',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.email.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/users/send-email',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@sendEmailAll',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@sendEmailAll',
        'as' => 'admin.users.email.send',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/users',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.referral.log' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/users/referral/log/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@referralLog',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@referralLog',
        'as' => 'admin.users.referral.log',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/users',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.detail' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/user/detail/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@detail',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@detail',
        'as' => 'admin.users.detail',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/user/update/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@update',
        'as' => 'admin.users.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.addSubBalance' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/user/add-sub-balance/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@addSubBalance',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@addSubBalance',
        'as' => 'admin.users.addSubBalance',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.wallet.create' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/user/wallet/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@wallet_create',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@wallet_create',
        'as' => 'admin.users.wallet.create',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/user/{id}/wallets/fetch',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@fetchWallets',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@fetchWallets',
        'as' => 'admin.users.',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.generated::1Jng4YmN5I4ii9Gd' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/user/{id}/wallets/eco',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@fetchEcoWallets',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@fetchEcoWallets',
        'as' => 'admin.users.generated::1Jng4YmN5I4ii9Gd',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.wallet.frozen.create' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/user/wallet/frozen/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@frozen_wallet_create',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@frozen_wallet_create',
        'as' => 'admin.users.wallet.frozen.create',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.addSubBalanceFrozen' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/user/add-sub-balance-frozen/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@addSubBalanceFrozen',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@addSubBalanceFrozen',
        'as' => 'admin.users.addSubBalanceFrozen',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.email.single' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/user/send-email/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@showEmailSingleForm',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@showEmailSingleForm',
        'as' => 'admin.users.email.single',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.generated::3BK5opYWfWsnHcul' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/user/send-email/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@sendEmailSingle',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@sendEmailSingle',
        'as' => 'admin.users.generated::3BK5opYWfWsnHcul',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.transactions' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/user/transactions/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@transactions',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@transactions',
        'as' => 'admin.users.transactions',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.deposits' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/user/deposits/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@deposits',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@deposits',
        'as' => 'admin.users.deposits',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.deposits.method' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/user/deposits/via/{method}/{type?}/{userId}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@depViaMethod',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@depViaMethod',
        'as' => 'admin.users.deposits.method',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.withdrawals' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/user/withdrawals/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@withdrawals',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@withdrawals',
        'as' => 'admin.users.withdrawals',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.withdrawals.method' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/user/withdrawals/via/{method}/{type?}/{userId}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@withdrawalsViaMethod',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@withdrawalsViaMethod',
        'as' => 'admin.users.withdrawals.method',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.practice.log' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/user/practice/trade/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@practiceLog',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@practiceLog',
        'as' => 'admin.users.practice.log',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.traded' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/user/trade/traded/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@traded',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@traded',
        'as' => 'admin.users.traded',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.wining' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/user/trade/wining/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@wining',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@wining',
        'as' => 'admin.users.wining',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.losing' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/user/trade/losing/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@losing',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@losing',
        'as' => 'admin.users.losing',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.draw' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/user/trade/draw/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@draw',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@draw',
        'as' => 'admin.users.draw',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/user',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.binary.trade.log.list' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/binary/trade/log',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\BinaryController@trade_log',
        'controller' => 'App\\Http\\Controllers\\Admin\\BinaryController@trade_log',
        'as' => 'admin.binary.trade.log.list',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/binary',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.binary.practice.log.list' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/binary/practice/trade/log',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\BinaryController@practice_log',
        'controller' => 'App\\Http\\Controllers\\Admin\\BinaryController@practice_log',
        'as' => 'admin.binary.practice.log.list',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/binary',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.exchange.log.list' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/trade/log',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ReportController@exchange_log',
        'controller' => 'App\\Http\\Controllers\\Admin\\ReportController@exchange_log',
        'as' => 'admin.exchange.log.list',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.provider.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/provider',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@index',
        'as' => 'admin.provider.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/provider',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.provider.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/provider/edit/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@edit',
        'as' => 'admin.provider.edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/provider',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.provider.balances' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/provider/balances/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@balances',
        'controller' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@balances',
        'as' => 'admin.provider.balances',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/provider',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.provider.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/provider/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@update',
        'as' => 'admin.provider.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/provider',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.provider.activate' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/provider/activate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@activate',
        'controller' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@activate',
        'as' => 'admin.provider.activate',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/provider',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.provider.deactivate' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/provider/deactivate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@deactivate',
        'controller' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@deactivate',
        'as' => 'admin.provider.deactivate',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/provider',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.provider.install' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'POST',
        2 => 'HEAD',
      ),
      'uri' => 'admin/provider/install/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Providers\\ProviderInstallController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Providers\\ProviderInstallController@index',
        'as' => 'admin.provider.install',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/provider',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.provider.activater' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/provider/activater/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Providers\\ProviderInstallController@activater',
        'controller' => 'App\\Http\\Controllers\\Admin\\Providers\\ProviderInstallController@activater',
        'as' => 'admin.provider.activater',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/provider',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.provider.verify' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/provider/verify',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Providers\\ProviderInstallController@activate_licenser',
        'controller' => 'App\\Http\\Controllers\\Admin\\Providers\\ProviderInstallController@activate_licenser',
        'as' => 'admin.provider.verify',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/provider',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.provider.updater' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/provider/updater/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Providers\\ProviderInstallController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\Providers\\ProviderInstallController@update',
        'as' => 'admin.provider.updater',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/provider',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.provider.currencies.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/provider/{provider}/currencies',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@currencies',
        'controller' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@currencies',
        'as' => 'admin.provider.currencies.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/provider',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.provider.markets.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/provider/{provider}/markets',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@markets',
        'controller' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@markets',
        'as' => 'admin.provider.markets.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/provider',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.provider.market.activate' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/provider/markets/activate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@market_activate',
        'controller' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@market_activate',
        'as' => 'admin.provider.market.activate',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/provider',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.provider.market.deactivate' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/provider/markets/deactivate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@market_deactivate',
        'controller' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@market_deactivate',
        'as' => 'admin.provider.market.deactivate',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/provider',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.provider.market.bulk.activate' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/provider/markets/bulk/activate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@bulk_market_activate',
        'controller' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@bulk_market_activate',
        'as' => 'admin.provider.market.bulk.activate',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/provider',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.provider.market.bulk.deactivate' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/provider/markets/bulk/deactivate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@bulk_market_deactivate',
        'controller' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@bulk_market_deactivate',
        'as' => 'admin.provider.market.bulk.deactivate',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/provider',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.provider.market.delete' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/provider/markets/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@market_delete',
        'controller' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@market_delete',
        'as' => 'admin.provider.market.delete',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/provider',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.provider.refresh' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/provider/refresh',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@refresh',
        'controller' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@refresh',
        'as' => 'admin.provider.refresh',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/provider',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.payment.provider.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/payment/provider',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\GatewayController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\GatewayController@index',
        'as' => 'admin.payment.provider.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/payment',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.payment.provider.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/payment/provider/edit/{alias}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\GatewayController@edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\GatewayController@edit',
        'as' => 'admin.payment.provider.edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/payment',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.payment.provider.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/payment/provider/update/{code}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\GatewayController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\GatewayController@update',
        'as' => 'admin.payment.provider.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/payment',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.payment.provider.remove' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/payment/provider/remove/{code}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\GatewayController@remove',
        'controller' => 'App\\Http\\Controllers\\Admin\\GatewayController@remove',
        'as' => 'admin.payment.provider.remove',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/payment',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.payment.manual.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/payment/manual',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ManualGatewayController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\ManualGatewayController@index',
        'as' => 'admin.payment.manual.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/payment',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.payment.manual.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/payment/manual/new',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ManualGatewayController@create',
        'controller' => 'App\\Http\\Controllers\\Admin\\ManualGatewayController@create',
        'as' => 'admin.payment.manual.create',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/payment',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.payment.manual.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/payment/manual/new',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ManualGatewayController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\ManualGatewayController@store',
        'as' => 'admin.payment.manual.store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/payment',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.payment.manual.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/payment/manual/edit/{alias}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ManualGatewayController@edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\ManualGatewayController@edit',
        'as' => 'admin.payment.manual.edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/payment',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.payment.manual.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/payment/manual/update/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ManualGatewayController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\ManualGatewayController@update',
        'as' => 'admin.payment.manual.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/payment',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.deposit.list' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/deposit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\DepositController@deposit',
        'controller' => 'App\\Http\\Controllers\\Admin\\DepositController@deposit',
        'as' => 'admin.deposit.list',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/deposit',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.deposit.details' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/deposit/details/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\DepositController@details',
        'controller' => 'App\\Http\\Controllers\\Admin\\DepositController@details',
        'as' => 'admin.deposit.details',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/deposit',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.deposit.method' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/deposit/via/{method}/{type?}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\DepositController@depViaMethod',
        'controller' => 'App\\Http\\Controllers\\Admin\\DepositController@depViaMethod',
        'as' => 'admin.deposit.method',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/deposit',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.deposit.reject' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/deposit/reject',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\DepositController@reject',
        'controller' => 'App\\Http\\Controllers\\Admin\\DepositController@reject',
        'as' => 'admin.deposit.reject',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/deposit',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.deposit.approve' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/deposit/approve',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\DepositController@approve',
        'controller' => 'App\\Http\\Controllers\\Admin\\DepositController@approve',
        'as' => 'admin.deposit.approve',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/deposit',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.deposit.thirdparty.confirm' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/deposit/thirdparty/confirm',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@confirmDeposit',
        'controller' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@confirmDeposit',
        'as' => 'admin.deposit.thirdparty.confirm',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/deposit',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.deposit.thirdparty.remove' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/deposit/thirdparty/remove/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@removeDeposit',
        'controller' => 'App\\Http\\Controllers\\Admin\\ThirdpartyController@removeDeposit',
        'as' => 'admin.deposit.thirdparty.remove',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/deposit',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.withdraw.log' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/withdraw/log',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\WithdrawalController@log',
        'controller' => 'App\\Http\\Controllers\\Admin\\WithdrawalController@log',
        'as' => 'admin.withdraw.log',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/withdraw',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.withdraw.method' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/withdraw/via/{method_id}/{type?}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\WithdrawalController@logViaMethod',
        'controller' => 'App\\Http\\Controllers\\Admin\\WithdrawalController@logViaMethod',
        'as' => 'admin.withdraw.method',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/withdraw',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.withdraw.details' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/withdraw/details/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\WithdrawalController@details',
        'controller' => 'App\\Http\\Controllers\\Admin\\WithdrawalController@details',
        'as' => 'admin.withdraw.details',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/withdraw',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.withdraw.approve' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/withdraw/approve',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\WithdrawalController@approve',
        'controller' => 'App\\Http\\Controllers\\Admin\\WithdrawalController@approve',
        'as' => 'admin.withdraw.approve',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/withdraw',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.withdraw.reject' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/withdraw/reject',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\WithdrawalController@reject',
        'controller' => 'App\\Http\\Controllers\\Admin\\WithdrawalController@reject',
        'as' => 'admin.withdraw.reject',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/withdraw',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.withdraw.method.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/withdraw',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\WithdrawMethodController@methods',
        'controller' => 'App\\Http\\Controllers\\Admin\\WithdrawMethodController@methods',
        'as' => 'admin.withdraw.method.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/withdraw',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.withdraw.method.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/withdraw/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\WithdrawMethodController@create',
        'controller' => 'App\\Http\\Controllers\\Admin\\WithdrawMethodController@create',
        'as' => 'admin.withdraw.method.create',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/withdraw',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.withdraw.method.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/withdraw/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\WithdrawMethodController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\WithdrawMethodController@store',
        'as' => 'admin.withdraw.method.store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/withdraw',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.withdraw.method.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/withdraw/edit/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\WithdrawMethodController@edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\WithdrawMethodController@edit',
        'as' => 'admin.withdraw.method.edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/withdraw',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.withdraw.method.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/withdraw/edit/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\WithdrawMethodController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\WithdrawMethodController@update',
        'as' => 'admin.withdraw.method.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/withdraw',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.withdraw.method.activate' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/withdraw/activate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\WithdrawMethodController@activate',
        'controller' => 'App\\Http\\Controllers\\Admin\\WithdrawMethodController@activate',
        'as' => 'admin.withdraw.method.activate',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/withdraw',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.withdraw.method.deactivate' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/withdraw/deactivate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\WithdrawMethodController@deactivate',
        'controller' => 'App\\Http\\Controllers\\Admin\\WithdrawMethodController@deactivate',
        'as' => 'admin.withdraw.method.deactivate',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/withdraw',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.report.transaction' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/report/transaction',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ReportController@transaction',
        'controller' => 'App\\Http\\Controllers\\Admin\\ReportController@transaction',
        'as' => 'admin.report.transaction',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/report',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.report.wallet' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/report/wallet',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ReportController@wallet',
        'controller' => 'App\\Http\\Controllers\\Admin\\ReportController@wallet',
        'as' => 'admin.report.wallet',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/report',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.report.wallet.cancel' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/report/wallet/cancel',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ReportController@wallet_trx_cancel',
        'controller' => 'App\\Http\\Controllers\\Admin\\ReportController@wallet_trx_cancel',
        'as' => 'admin.report.wallet.cancel',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/report',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.report.wallet.transfer.funding.approve' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/report/wallet/transfer/funding/approve',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ReportController@wallet_transfer_funding_approve',
        'controller' => 'App\\Http\\Controllers\\Admin\\ReportController@wallet_transfer_funding_approve',
        'as' => 'admin.report.wallet.transfer.funding.approve',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/report',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.report.wallet.transfer.funding.reject' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/report/wallet/transfer/funding/reject',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ReportController@wallet_transfer_funding_reject',
        'controller' => 'App\\Http\\Controllers\\Admin\\ReportController@wallet_transfer_funding_reject',
        'as' => 'admin.report.wallet.transfer.funding.reject',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/report',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.report.login.history' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/report/login/history',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ReportController@loginHistory',
        'controller' => 'App\\Http\\Controllers\\Admin\\ReportController@loginHistory',
        'as' => 'admin.report.login.history',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/report',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.report.login.ipHistory' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/report/login/ipHistory/{ip}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ReportController@loginIpHistory',
        'controller' => 'App\\Http\\Controllers\\Admin\\ReportController@loginIpHistory',
        'as' => 'admin.report.login.ipHistory',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/report',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ticket' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/tickets',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\SupportTicketController@tickets',
        'controller' => 'App\\Http\\Controllers\\Admin\\SupportTicketController@tickets',
        'as' => 'admin.ticket',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ticket.view' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/tickets/view/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\SupportTicketController@ticketReply',
        'controller' => 'App\\Http\\Controllers\\Admin\\SupportTicketController@ticketReply',
        'as' => 'admin.ticket.view',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ticket.chat.get' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/tickets/{id}/chat',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\SupportTicketController@getMessages',
        'controller' => 'App\\Http\\Controllers\\Admin\\SupportTicketController@getMessages',
        'as' => 'admin.ticket.chat.get',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ticket.chat.send' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/tickets/{id}/chat',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\SupportTicketController@createMessage',
        'controller' => 'App\\Http\\Controllers\\Admin\\SupportTicketController@createMessage',
        'as' => 'admin.ticket.chat.send',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ticket.reply' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/ticket/reply/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\SupportTicketController@ticketReplySend',
        'controller' => 'App\\Http\\Controllers\\Admin\\SupportTicketController@ticketReplySend',
        'as' => 'admin.ticket.reply',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ticket.close' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/ticket/close/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\SupportTicketController@close',
        'controller' => 'App\\Http\\Controllers\\Admin\\SupportTicketController@close',
        'as' => 'admin.ticket.close',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ticket.download' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/ticket/download/{ticket}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\SupportTicketController@ticketDownload',
        'controller' => 'App\\Http\\Controllers\\Admin\\SupportTicketController@ticketDownload',
        'as' => 'admin.ticket.download',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ticket.delete' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/ticket/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\SupportTicketController@ticketDelete',
        'controller' => 'App\\Http\\Controllers\\Admin\\SupportTicketController@ticketDelete',
        'as' => 'admin.ticket.delete',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.setting.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/settings',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\GeneralSettingController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\GeneralSettingController@index',
        'as' => 'admin.setting.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.setting.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/settings',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\GeneralSettingController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\GeneralSettingController@update',
        'as' => 'admin.setting.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.setting.cors.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/settings/cors/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\GeneralSettingController@create_cors',
        'controller' => 'App\\Http\\Controllers\\Admin\\GeneralSettingController@create_cors',
        'as' => 'admin.setting.cors.create',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.currency.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/currencies',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\GeneralSettingController@currencies',
        'controller' => 'App\\Http\\Controllers\\Admin\\GeneralSettingController@currencies',
        'as' => 'admin.currency.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.currency.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/currencies',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\GeneralSettingController@currency_update',
        'controller' => 'App\\Http\\Controllers\\Admin\\GeneralSettingController@currency_update',
        'as' => 'admin.currency.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.currency.rates' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/currencies/rates',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\GeneralSettingController@updateExchangeRates',
        'controller' => 'App\\Http\\Controllers\\Admin\\GeneralSettingController@updateExchangeRates',
        'as' => 'admin.currency.rates',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.currency.activate' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/activate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\GeneralSettingController@currency_activate',
        'controller' => 'App\\Http\\Controllers\\Admin\\GeneralSettingController@currency_activate',
        'as' => 'admin.currency.activate',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.scripts' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/scripts',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ScriptsController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\ScriptsController@index',
        'as' => 'admin.scripts',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.script.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/scripts',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ScriptsController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\ScriptsController@store',
        'as' => 'admin.script.store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.script.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/scripts/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ScriptsController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\ScriptsController@update',
        'as' => 'admin.script.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.script.delete' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'admin/scripts',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ScriptsController@delete',
        'controller' => 'App\\Http\\Controllers\\Admin\\ScriptsController@delete',
        'as' => 'admin.script.delete',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.platform' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/platform',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\PlatformController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\PlatformController@index',
        'as' => 'admin.platform',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.platform.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/platform',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\PlatformController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\PlatformController@update',
        'as' => 'admin.platform.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.setting.logo_icon' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/setting/logo-icon',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\GeneralSettingController@logoIcon',
        'controller' => 'App\\Http\\Controllers\\Admin\\GeneralSettingController@logoIcon',
        'as' => 'admin.setting.logo_icon',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.setting.logo_icon_update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/setting/logo-icon',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\GeneralSettingController@logoIconUpdate',
        'controller' => 'App\\Http\\Controllers\\Admin\\GeneralSettingController@logoIconUpdate',
        'as' => 'admin.setting.logo_icon_update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.extensions.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/extensions',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ExtensionController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\ExtensionController@index',
        'as' => 'admin.extensions.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/extensions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.extensions.install' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'POST',
        2 => 'HEAD',
      ),
      'uri' => 'admin/extensions/install/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Ext\\InstallController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Ext\\InstallController@index',
        'as' => 'admin.extensions.install',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/extensions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.extensions.activater' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/extensions/activater/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Ext\\InstallController@activater',
        'controller' => 'App\\Http\\Controllers\\Admin\\Ext\\InstallController@activater',
        'as' => 'admin.extensions.activater',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/extensions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.extensions.verify' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/extensions/verify',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Ext\\InstallController@activate_licenser',
        'controller' => 'App\\Http\\Controllers\\Admin\\Ext\\InstallController@activate_licenser',
        'as' => 'admin.extensions.verify',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/extensions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.extensions.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/extensions/update/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ExtensionController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\ExtensionController@update',
        'as' => 'admin.extensions.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/extensions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.extensions.activate' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/extensions/activate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ExtensionController@activate',
        'controller' => 'App\\Http\\Controllers\\Admin\\ExtensionController@activate',
        'as' => 'admin.extensions.activate',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/extensions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.extensions.deactivate' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/extensions/deactivate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\ExtensionController@deactivate',
        'controller' => 'App\\Http\\Controllers\\Admin\\ExtensionController@deactivate',
        'as' => 'admin.extensions.deactivate',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/extensions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.bot.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/bot',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Bot\\ManageBotController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Bot\\ManageBotController@index',
        'as' => 'admin.bot.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/bot',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.bot.new' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/bot/new',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Bot\\ManageBotController@new',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Bot\\ManageBotController@new',
        'as' => 'admin.bot.new',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/bot',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.bot.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/bot/edit/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Bot\\ManageBotController@edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Bot\\ManageBotController@edit',
        'as' => 'admin.bot.edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/bot',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.bot.set' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/bot/set',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Bot\\ManageBotController@set',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Bot\\ManageBotController@set',
        'as' => 'admin.bot.set',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/bot',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.bot.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/bot/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Bot\\ManageBotController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Bot\\ManageBotController@store',
        'as' => 'admin.bot.store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/bot',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.bot.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/bot/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Bot\\ManageBotController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Bot\\ManageBotController@update',
        'as' => 'admin.bot.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/bot',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.bot.log.list' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/bot/log',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Bot\\ManageBotController@log',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Bot\\ManageBotController@log',
        'as' => 'admin.bot.log.list',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/bot',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.bot.time.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/bot/time/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Bot\\ManageBotController@indexTime',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Bot\\ManageBotController@indexTime',
        'as' => 'admin.bot.time.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/bot/time',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.bot.time.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/bot/time/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Bot\\ManageBotController@storeTime',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Bot\\ManageBotController@storeTime',
        'as' => 'admin.bot.time.store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/bot/time',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.bot.time.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/bot/time/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Bot\\ManageBotController@updateTime',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Bot\\ManageBotController@updateTime',
        'as' => 'admin.bot.time.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/bot/time',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ico.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/ico',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ico\\ManageIcoController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ico\\ManageIcoController@index',
        'as' => 'admin.ico.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/ico',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ico.new' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/ico/new',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ico\\ManageIcoController@new',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ico\\ManageIcoController@new',
        'as' => 'admin.ico.new',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/ico',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ico.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/ico/edit/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ico\\ManageIcoController@edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ico\\ManageIcoController@edit',
        'as' => 'admin.ico.edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/ico',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ico.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/ico/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ico\\ManageIcoController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ico\\ManageIcoController@store',
        'as' => 'admin.ico.store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/ico',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ico.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/ico/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ico\\ManageIcoController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ico\\ManageIcoController@update',
        'as' => 'admin.ico.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/ico',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ico.log.list' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/ico/log',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ico\\ManageIcoController@log',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ico\\ManageIcoController@log',
        'as' => 'admin.ico.log.list',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/ico',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ico.pay' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/ico/log/pay',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ico\\ManageIcoController@pay',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ico\\ManageIcoController@pay',
        'as' => 'admin.ico.pay',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/ico',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mlm.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/mlm',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MLM\\ManageMLMController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MLM\\ManageMLMController@index',
        'as' => 'admin.mlm.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mlm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mlm.new' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/mlm/new',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MLM\\ManageMLMController@new',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MLM\\ManageMLMController@new',
        'as' => 'admin.mlm.new',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mlm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mlm.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/mlm/edit/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MLM\\ManageMLMController@edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MLM\\ManageMLMController@edit',
        'as' => 'admin.mlm.edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mlm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mlm.set' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/mlm/set',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MLM\\ManageMLMController@set',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MLM\\ManageMLMController@set',
        'as' => 'admin.mlm.set',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mlm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mlm.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/mlm/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MLM\\ManageMLMController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MLM\\ManageMLMController@store',
        'as' => 'admin.mlm.store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mlm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mlm.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/mlm/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MLM\\ManageMLMController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MLM\\ManageMLMController@update',
        'as' => 'admin.mlm.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mlm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mlm.remove' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/mlm/remove',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MLM\\ManageMLMController@remove',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MLM\\ManageMLMController@remove',
        'as' => 'admin.mlm.remove',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mlm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mlm.regenerate' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/mlm/regenerate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\DatabaseController@regenerate',
        'controller' => 'App\\Http\\Controllers\\Admin\\DatabaseController@regenerate',
        'as' => 'admin.mlm.regenerate',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mlm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mlm.log.list' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/mlm/log',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MLM\\ManageMLMController@log',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MLM\\ManageMLMController@log',
        'as' => 'admin.mlm.log.list',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mlm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mlm.transaction.logs' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/mlm/transaction/logs',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MLM\\ManageMLMController@transaction_logs',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MLM\\ManageMLMController@transaction_logs',
        'as' => 'admin.mlm.transaction.logs',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mlm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mlm.transaction.statusUpdate' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/mlm/transaction/statusUpdate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MLM\\ManageMLMController@transaction_statusUpdate',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MLM\\ManageMLMController@transaction_statusUpdate',
        'as' => 'admin.mlm.transaction.statusUpdate',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mlm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mlm.bv.logs' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/mlm/bv/logs',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MLM\\ManageMLMController@bv_logs',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MLM\\ManageMLMController@bv_logs',
        'as' => 'admin.mlm.bv.logs',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mlm',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.forex.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/forex',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexAccountsController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexAccountsController@index',
        'as' => 'admin.forex.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/forex',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.forex.new' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/forex/new',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexAccountsController@new',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexAccountsController@new',
        'as' => 'admin.forex.new',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/forex',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.forex.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/forex/edit/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexAccountsController@edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexAccountsController@edit',
        'as' => 'admin.forex.edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/forex',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.forex.verify' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/forex/verify',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexAccountsController@verify',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexAccountsController@verify',
        'as' => 'admin.forex.verify',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/forex',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.forex.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/forex/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexAccountsController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexAccountsController@store',
        'as' => 'admin.forex.store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/forex',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.forex.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/forex/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexAccountsController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexAccountsController@update',
        'as' => 'admin.forex.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/forex',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.forex.investment.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/forex/investment',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexInvestmentsController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexInvestmentsController@index',
        'as' => 'admin.forex.investment.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/forex/investment',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.forex.investment.new' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/forex/investment/new',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexInvestmentsController@new',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexInvestmentsController@new',
        'as' => 'admin.forex.investment.new',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/forex/investment',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.forex.investment.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/forex/investment/edit/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexInvestmentsController@edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexInvestmentsController@edit',
        'as' => 'admin.forex.investment.edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/forex/investment',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.forex.investment.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/forex/investment/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexInvestmentsController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexInvestmentsController@store',
        'as' => 'admin.forex.investment.store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/forex/investment',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.forex.investment.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/forex/investment/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexInvestmentsController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexInvestmentsController@update',
        'as' => 'admin.forex.investment.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/forex/investment',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.forex.investment.set' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/forex/investment/set',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexInvestmentsController@set',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexInvestmentsController@set',
        'as' => 'admin.forex.investment.set',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/forex/investment',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.forex.investment.log.list' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/forex/investment/log',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexInvestmentsController@log',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexInvestmentsController@log',
        'as' => 'admin.forex.investment.log.list',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/forex/investment',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.forex.signals.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/forex/signals',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexSignalsController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexSignalsController@index',
        'as' => 'admin.forex.signals.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/forex/signals',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.forex.signals.new' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/forex/signals/new',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexSignalsController@new',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexSignalsController@new',
        'as' => 'admin.forex.signals.new',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/forex/signals',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.forex.signals.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/forex/signals/edit/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexSignalsController@edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexSignalsController@edit',
        'as' => 'admin.forex.signals.edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/forex/signals',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.forex.signals.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/forex/signals/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexSignalsController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexSignalsController@store',
        'as' => 'admin.forex.signals.store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/forex/signals',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.forex.signals.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/forex/signals/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexSignalsController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexSignalsController@update',
        'as' => 'admin.forex.signals.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/forex/signals',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.forex.log.list' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/forex/log',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexAccountsController@log',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Forex\\ForexAccountsController@log',
        'as' => 'admin.forex.log.list',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/forex',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.staking.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/staking',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Staking\\ManageStakingController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Staking\\ManageStakingController@index',
        'as' => 'admin.staking.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/staking',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.staking.new' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/staking/new',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Staking\\ManageStakingController@new',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Staking\\ManageStakingController@new',
        'as' => 'admin.staking.new',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/staking',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.staking.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/staking/edit/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Staking\\ManageStakingController@edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Staking\\ManageStakingController@edit',
        'as' => 'admin.staking.edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/staking',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.staking.verify' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/staking/verify/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Staking\\ManageStakingController@verify',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Staking\\ManageStakingController@verify',
        'as' => 'admin.staking.verify',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/staking',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.staking.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/staking/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Staking\\ManageStakingController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Staking\\ManageStakingController@store',
        'as' => 'admin.staking.store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/staking',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.staking.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/staking/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Staking\\ManageStakingController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Staking\\ManageStakingController@update',
        'as' => 'admin.staking.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/staking',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.staking.log.list' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/staking/logs',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Staking\\ManageStakingController@log',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Staking\\ManageStakingController@log',
        'as' => 'admin.staking.log.list',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/staking',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.p2p.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/p2p',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\P2P\\P2PController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\P2P\\P2PController@index',
        'as' => 'admin.p2p.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/p2p',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.p2p.sellers.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/p2p/sellers',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\P2P\\P2PSellersController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\P2P\\P2PSellersController@index',
        'as' => 'admin.p2p.sellers.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/p2p/sellers',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.p2p.sellers.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/p2p/sellers/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\P2P\\P2PSellersController@show',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\P2P\\P2PSellersController@show',
        'as' => 'admin.p2p.sellers.show',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/p2p/sellers',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.p2p.orders.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/p2p/orders',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\P2P\\P2POrdersController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\P2P\\P2POrdersController@index',
        'as' => 'admin.p2p.orders.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/p2p/orders',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.p2p.orders.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/p2p/orders/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\P2P\\P2POrdersController@show',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\P2P\\P2POrdersController@show',
        'as' => 'admin.p2p.orders.show',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/p2p/orders',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.p2p.orders.offer' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/p2p/orders/offer/{offer_id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\P2P\\P2POrdersController@offer',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\P2P\\P2POrdersController@offer',
        'as' => 'admin.p2p.orders.offer',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/p2p/orders',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.p2p.orders.view' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/p2p/orders/view/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\P2P\\P2POrdersController@view',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\P2P\\P2POrdersController@view',
        'as' => 'admin.p2p.orders.view',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/p2p/orders',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.p2p.orders.message' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/p2p/orders/message',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\P2P\\P2POrdersController@message',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\P2P\\P2POrdersController@message',
        'as' => 'admin.p2p.orders.message',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/p2p/orders',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.p2p.orders.moderate' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/p2p/orders/moderate/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\P2P\\P2POrdersController@moderate',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\P2P\\P2POrdersController@moderate',
        'as' => 'admin.p2p.orders.moderate',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/p2p/orders',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.p2p.offers.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/p2p/offers',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\P2P\\P2POffersController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\P2P\\P2POffersController@index',
        'as' => 'admin.p2p.offers.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/p2p/offers',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.p2p.offers.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/p2p/offers/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\P2P\\P2POffersController@show',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\P2P\\P2POffersController@show',
        'as' => 'admin.p2p.offers.show',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/p2p/offers',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.p2p.methods.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/p2p/methods',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\P2P\\P2PMethodsController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\P2P\\P2PMethodsController@index',
        'as' => 'admin.p2p.methods.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/p2p/methods',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.p2p.methods.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/p2p/methods/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\P2P\\P2PMethodsController@show',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\P2P\\P2PMethodsController@show',
        'as' => 'admin.p2p.methods.show',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/p2p/methods',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/eco/blockchains',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\EcosystemController@blockchain',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\EcosystemController@blockchain',
        'as' => 'admin.eco.blockchain.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.wallet.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/wallet',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\MasterWalletController@wallet',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\MasterWalletController@wallet',
        'as' => 'admin.eco.blockchain.wallet.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/wallet',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.wallet.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/wallet/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\MasterWalletController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\MasterWalletController@store',
        'as' => 'admin.eco.blockchain.wallet.create',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/wallet',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.wallet.add.mnemonic' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/wallet/add/mnemonic',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\MasterWalletController@addMnemonic',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\MasterWalletController@addMnemonic',
        'as' => 'admin.eco.blockchain.wallet.add.mnemonic',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/wallet',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.wallet.add.xpub' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/wallet/add/xpub',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\MasterWalletController@addXpub',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\MasterWalletController@addXpub',
        'as' => 'admin.eco.blockchain.wallet.add.xpub',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/wallet',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.wallet.add.privateKey' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/wallet/add/privateKey',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\MasterWalletController@addPrivateKey',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\MasterWalletController@addPrivateKey',
        'as' => 'admin.eco.blockchain.wallet.add.privateKey',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/wallet',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.wallet.add' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/wallet/add',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\MasterWalletController@add',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\MasterWalletController@add',
        'as' => 'admin.eco.blockchain.wallet.add',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/wallet',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.wallet.remove' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/wallet/remove',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\MasterWalletController@delete',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\MasterWalletController@delete',
        'as' => 'admin.eco.blockchain.wallet.remove',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/wallet',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.wallet.encryptData' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/wallet/encryptData',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\MasterWalletController@encryptData',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\MasterWalletController@encryptData',
        'as' => 'admin.eco.blockchain.wallet.encryptData',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/wallet',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.tokens.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/tokens',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@tokens',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@tokens',
        'as' => 'admin.eco.blockchain.tokens.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/tokens',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.tokens.new' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/tokens/new',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@tokens_new',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@tokens_new',
        'as' => 'admin.eco.blockchain.tokens.new',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/tokens',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.tokens.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/tokens/store/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@tokens_store',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@tokens_store',
        'as' => 'admin.eco.blockchain.tokens.store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/tokens',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.tokens.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/tokens/update/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@tokens_update',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@tokens_update',
        'as' => 'admin.eco.blockchain.tokens.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/tokens',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.tokens.update.status' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/tokens/updateStatus',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@token_update_status',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@token_update_status',
        'as' => 'admin.eco.blockchain.tokens.update.status',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/tokens',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.tokens.remove' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/tokens/remove',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@tokens_remove',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@tokens_remove',
        'as' => 'admin.eco.blockchain.tokens.remove',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/tokens',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.tokens.register' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/tokens/register',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@token_register',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@token_register',
        'as' => 'admin.eco.blockchain.tokens.register',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/tokens',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.tokens.fetch.contract' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/tokens/fetch/contract/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@token_smart_contract_fetch',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@token_smart_contract_fetch',
        'as' => 'admin.eco.blockchain.tokens.fetch.contract',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/tokens',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.tokens.add.contract' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/tokens/add/contract',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@token_smart_contract_add',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@token_smart_contract_add',
        'as' => 'admin.eco.blockchain.tokens.add.contract',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/tokens',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.tokens.sync' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/tokens/sync/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@token_sync',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@token_sync',
        'as' => 'admin.eco.blockchain.tokens.sync',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/tokens',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.tokens.add.icon' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/tokens/add/icon',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@add_icon',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@add_icon',
        'as' => 'admin.eco.blockchain.tokens.add.icon',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/tokens',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.tokens.deploy' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/tokens/deploy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@token_deploy',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@token_deploy',
        'as' => 'admin.eco.blockchain.tokens.deploy',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/tokens',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.tokens.add' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/tokens/add',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@token_add',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@token_add',
        'as' => 'admin.eco.blockchain.tokens.add',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/tokens',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.tokens.withdraw.settings' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/tokens/withdraw/settings/{isMainnet?}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@token_withdraw_settings',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@token_withdraw_settings',
        'as' => 'admin.eco.blockchain.tokens.withdraw.settings',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/tokens',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.tokens.fees.account.create' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/tokens/fees/account/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@token_fees_account_create',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@token_fees_account_create',
        'as' => 'admin.eco.blockchain.tokens.fees.account.create',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/tokens',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.fees.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/fees',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\FeesController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\FeesController@index',
        'as' => 'admin.eco.blockchain.fees.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/fees',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.fees.withdraw' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/fees/withdraw',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\FeesController@withdraw',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\FeesController@withdraw',
        'as' => 'admin.eco.blockchain.fees.withdraw',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/fees',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.mainnet.tokens.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/mainnet_tokens',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@mainnet_tokens',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\TokensController@mainnet_tokens',
        'as' => 'admin.eco.blockchain.mainnet.tokens.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/mainnet_tokens',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.addresses.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/{currency}/addresses',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\AddressesController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\AddressesController@index',
        'as' => 'admin.eco.blockchain.addresses.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/{currency}/addresses',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.addresses.store' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/{currency}/addresses/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\AddressesController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\AddressesController@store',
        'as' => 'admin.eco.blockchain.addresses.store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/{currency}/addresses',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.addresses.activate' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/{currency}/addresses/activate/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\AddressesController@activate',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\AddressesController@activate',
        'as' => 'admin.eco.blockchain.addresses.activate',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/{currency}/addresses',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.addresses.verify' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/{currency}/addresses/activate/check/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\AddressesController@verify',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\AddressesController@verify',
        'as' => 'admin.eco.blockchain.addresses.verify',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/{currency}/addresses',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.utxo.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/utxo',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\UTXOController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\UTXOController@index',
        'as' => 'admin.eco.blockchain.utxo.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/utxo',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.utxo.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/utxo/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\UTXOController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\UTXOController@store',
        'as' => 'admin.eco.blockchain.utxo.store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/utxo',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.utxo.clean' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/utxo/clean',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\UTXOController@clean',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\UTXOController@clean',
        'as' => 'admin.eco.blockchain.utxo.clean',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/utxo',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.utxo.encryptData' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/utxo/encryptData',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\UTXOController@encryptData',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\UTXOController@encryptData',
        'as' => 'admin.eco.blockchain.utxo.encryptData',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}/utxo',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.blockchain.withdrawal.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/eco/blockchains/{chain}/{currency}/withdrawal',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\WithdrawalController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\WithdrawalController@index',
        'as' => 'admin.eco.blockchain.withdrawal.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/blockchains/{chain}',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.markets.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/eco/markets',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\MarketsController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\MarketsController@index',
        'as' => 'admin.eco.markets.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/markets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.markets.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/eco/markets/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\MarketsController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\MarketsController@store',
        'as' => 'admin.eco.markets.store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/markets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.markets.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/eco/markets/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\MarketsController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\MarketsController@update',
        'as' => 'admin.eco.markets.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/markets',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.transactions.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/eco/transactions',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\EcosystemController@transactions',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\EcosystemController@transactions',
        'as' => 'admin.eco.transactions.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/transactions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.eco.transactions.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/eco/transactions/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\EcosystemController@transaction',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Eco\\EcosystemController@transaction',
        'as' => 'admin.eco.transactions.show',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/eco/transactions',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.categories.massDestroy' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'admin/knowledge/categories/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\CategoriesController@massDestroy',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\CategoriesController@massDestroy',
        'as' => 'admin.knowledge.categories.massDestroy',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.categories.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/knowledge/categories',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.categories.index',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\CategoriesController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\CategoriesController@index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.categories.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/knowledge/categories/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.categories.create',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\CategoriesController@create',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\CategoriesController@create',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.categories.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/knowledge/categories',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.categories.store',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\CategoriesController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\CategoriesController@store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.categories.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/knowledge/categories/{category}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.categories.show',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\CategoriesController@show',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\CategoriesController@show',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.categories.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/knowledge/categories/{category}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.categories.edit',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\CategoriesController@edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\CategoriesController@edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.categories.update' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
        1 => 'PATCH',
      ),
      'uri' => 'admin/knowledge/categories/{category}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.categories.update',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\CategoriesController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\CategoriesController@update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.categories.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'admin/knowledge/categories/{category}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.categories.destroy',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\CategoriesController@destroy',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\CategoriesController@destroy',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.tags.massDestroy' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'admin/knowledge/tags/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\TagsController@massDestroy',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\TagsController@massDestroy',
        'as' => 'admin.knowledge.tags.massDestroy',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.tags.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/knowledge/tags',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.tags.index',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\TagsController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\TagsController@index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.tags.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/knowledge/tags/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.tags.create',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\TagsController@create',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\TagsController@create',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.tags.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/knowledge/tags',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.tags.store',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\TagsController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\TagsController@store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.tags.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/knowledge/tags/{tag}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.tags.show',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\TagsController@show',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\TagsController@show',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.tags.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/knowledge/tags/{tag}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.tags.edit',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\TagsController@edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\TagsController@edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.tags.update' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
        1 => 'PATCH',
      ),
      'uri' => 'admin/knowledge/tags/{tag}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.tags.update',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\TagsController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\TagsController@update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.tags.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'admin/knowledge/tags/{tag}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.tags.destroy',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\TagsController@destroy',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\TagsController@destroy',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.articles.massDestroy' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'admin/knowledge/articles/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\ArticlesController@massDestroy',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\ArticlesController@massDestroy',
        'as' => 'admin.knowledge.articles.massDestroy',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.articles.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/knowledge/articles',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.articles.index',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\ArticlesController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\ArticlesController@index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.articles.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/knowledge/articles/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.articles.create',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\ArticlesController@create',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\ArticlesController@create',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.articles.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/knowledge/articles',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.articles.store',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\ArticlesController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\ArticlesController@store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.articles.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/knowledge/articles/{article}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.articles.show',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\ArticlesController@show',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\ArticlesController@show',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.articles.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/knowledge/articles/{article}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.articles.edit',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\ArticlesController@edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\ArticlesController@edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.articles.update' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
        1 => 'PATCH',
      ),
      'uri' => 'admin/knowledge/articles/{article}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.articles.update',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\ArticlesController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\ArticlesController@update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.articles.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'admin/knowledge/articles/{article}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.articles.destroy',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\ArticlesController@destroy',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\ArticlesController@destroy',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.faq-categories.massDestroy' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'admin/knowledge/faq-categories/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqCategoryController@massDestroy',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqCategoryController@massDestroy',
        'as' => 'admin.knowledge.faq-categories.massDestroy',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.faq-categories.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/knowledge/faq-categories',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.faq-categories.index',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqCategoryController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqCategoryController@index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.faq-categories.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/knowledge/faq-categories/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.faq-categories.create',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqCategoryController@create',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqCategoryController@create',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.faq-categories.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/knowledge/faq-categories',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.faq-categories.store',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqCategoryController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqCategoryController@store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.faq-categories.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/knowledge/faq-categories/{faq_category}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.faq-categories.show',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqCategoryController@show',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqCategoryController@show',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.faq-categories.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/knowledge/faq-categories/{faq_category}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.faq-categories.edit',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqCategoryController@edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqCategoryController@edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.faq-categories.update' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
        1 => 'PATCH',
      ),
      'uri' => 'admin/knowledge/faq-categories/{faq_category}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.faq-categories.update',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqCategoryController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqCategoryController@update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.faq-categories.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'admin/knowledge/faq-categories/{faq_category}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.faq-categories.destroy',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqCategoryController@destroy',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqCategoryController@destroy',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.faq-questions.massDestroy' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'admin/knowledge/faq-questions/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqQuestionController@massDestroy',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqQuestionController@massDestroy',
        'as' => 'admin.knowledge.faq-questions.massDestroy',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.faq-questions.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/knowledge/faq-questions',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.faq-questions.index',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqQuestionController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqQuestionController@index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.faq-questions.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/knowledge/faq-questions/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.faq-questions.create',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqQuestionController@create',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqQuestionController@create',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.faq-questions.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/knowledge/faq-questions',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.faq-questions.store',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqQuestionController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqQuestionController@store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.faq-questions.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/knowledge/faq-questions/{faq_question}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.faq-questions.show',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqQuestionController@show',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqQuestionController@show',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.faq-questions.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/knowledge/faq-questions/{faq_question}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.faq-questions.edit',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqQuestionController@edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqQuestionController@edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.faq-questions.update' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
        1 => 'PATCH',
      ),
      'uri' => 'admin/knowledge/faq-questions/{faq_question}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.faq-questions.update',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqQuestionController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqQuestionController@update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.knowledge.faq-questions.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'admin/knowledge/faq-questions/{faq_question}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.knowledge.faq-questions.destroy',
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqQuestionController@destroy',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\KnowledgeBase\\FaqQuestionController@destroy',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/knowledge',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ecommerce.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/ecommerce/dashboard',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\EcommerceController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\EcommerceController@index',
        'as' => 'admin.ecommerce.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ecommerce.category.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/ecommerce/categories',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\CategoryController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\CategoryController@index',
        'as' => 'admin.ecommerce.category.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/ecommerce/categories',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ecommerce.category.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/ecommerce/categories/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\CategoryController@create',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\CategoryController@create',
        'as' => 'admin.ecommerce.category.create',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/ecommerce/categories',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ecommerce.category.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/ecommerce/categories',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\CategoryController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\CategoryController@store',
        'as' => 'admin.ecommerce.category.store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/ecommerce/categories',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ecommerce.category.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/ecommerce/categories/edit/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\CategoryController@edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\CategoryController@edit',
        'as' => 'admin.ecommerce.category.edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/ecommerce/categories',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ecommerce.category.update' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
      ),
      'uri' => 'admin/ecommerce/categories/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\CategoryController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\CategoryController@update',
        'as' => 'admin.ecommerce.category.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/ecommerce/categories',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ecommerce.category.delete' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'admin/ecommerce/categories/delete/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\CategoryController@delete',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\CategoryController@delete',
        'as' => 'admin.ecommerce.category.delete',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/ecommerce/categories',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ecommerce.orders.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/ecommerce/orders',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\OrdersController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\OrdersController@index',
        'as' => 'admin.ecommerce.orders.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/ecommerce',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ecommerce.product.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/ecommerce/product',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\ProductsController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\ProductsController@index',
        'as' => 'admin.ecommerce.product.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/ecommerce/product',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ecommerce.product.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/ecommerce/product/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\ProductsController@create',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\ProductsController@create',
        'as' => 'admin.ecommerce.product.create',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/ecommerce/product',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ecommerce.product.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/ecommerce/product/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\ProductsController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\ProductsController@store',
        'as' => 'admin.ecommerce.product.store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/ecommerce/product',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ecommerce.product.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/ecommerce/product/edit/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\ProductsController@edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\ProductsController@edit',
        'as' => 'admin.ecommerce.product.edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/ecommerce/product',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ecommerce.product.update' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
      ),
      'uri' => 'admin/ecommerce/product/update/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\ProductsController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\ProductsController@update',
        'as' => 'admin.ecommerce.product.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/ecommerce/product',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ecommerce.product.delete' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'admin/ecommerce/product/delete/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\ProductsController@delete',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\ProductsController@delete',
        'as' => 'admin.ecommerce.product.delete',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/ecommerce/product',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ecommerce.product.license' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/ecommerce/product/license/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\ProductsController@license',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\ProductsController@license',
        'as' => 'admin.ecommerce.product.license',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/ecommerce/product',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ecommerce.product.license.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/ecommerce/product/license/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\ProductsController@storeLicense',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\ProductsController@storeLicense',
        'as' => 'admin.ecommerce.product.license.store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/ecommerce/product',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.ecommerce.product.license.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/ecommerce/product/license/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\ProductsController@updateLicense',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\Ecommerce\\ProductsController@updateLicense',
        'as' => 'admin.ecommerce.product.license.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/ecommerce/product',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.campaigns.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/mailwiz/campaigns',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@index',
        'as' => 'admin.mailwiz.campaigns.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz/campaigns',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.campaigns.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/mailwiz/campaigns/create/{template_id?}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@create',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@create',
        'as' => 'admin.mailwiz.campaigns.create',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz/campaigns',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.campaigns.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/mailwiz/campaigns',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@store',
        'as' => 'admin.mailwiz.campaigns.store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz/campaigns',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.campaigns.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/mailwiz/campaigns/{campaign}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@edit',
        'as' => 'admin.mailwiz.campaigns.edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz/campaigns',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.campaigns.update' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
      ),
      'uri' => 'admin/mailwiz/campaigns/{campaign}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@update',
        'as' => 'admin.mailwiz.campaigns.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz/campaigns',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.campaigns.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'admin/mailwiz/campaigns/{campaign}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@destroy',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@destroy',
        'as' => 'admin.mailwiz.campaigns.destroy',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz/campaigns',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.campaigns.start' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/mailwiz/campaigns/{campaign}/start',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@start',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@start',
        'as' => 'admin.mailwiz.campaigns.start',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz/campaigns',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.campaigns.restart' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/mailwiz/campaigns/{campaign}/restart',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@restart',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@restart',
        'as' => 'admin.mailwiz.campaigns.restart',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz/campaigns',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.campaigns.pause' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/mailwiz/campaigns/{campaign}/pause',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@pause',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@pause',
        'as' => 'admin.mailwiz.campaigns.pause',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz/campaigns',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.campaigns.resume' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/mailwiz/campaigns/{campaign}/resume',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@resume',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@resume',
        'as' => 'admin.mailwiz.campaigns.resume',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz/campaigns',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.campaigns.stop' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/mailwiz/campaigns/{campaign}/stop',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@stop',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@stop',
        'as' => 'admin.mailwiz.campaigns.stop',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz/campaigns',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.campaigns.progress' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/mailwiz/campaigns/all/progress',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@getAllCampaignsProgress',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@getAllCampaignsProgress',
        'as' => 'admin.mailwiz.campaigns.progress',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz/campaigns',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.campaigns.targets' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/mailwiz/campaigns/{campaign}/targets',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@targets',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@targets',
        'as' => 'admin.mailwiz.campaigns.targets',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz/campaigns',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.templates.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/mailwiz/templates',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\TemplateController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\TemplateController@index',
        'as' => 'admin.mailwiz.templates.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz/templates',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.templates.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/mailwiz/templates/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\TemplateController@create',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\TemplateController@create',
        'as' => 'admin.mailwiz.templates.create',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz/templates',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.templates.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/mailwiz/templates',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\TemplateController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\TemplateController@store',
        'as' => 'admin.mailwiz.templates.store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz/templates',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.templates.rename' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/mailwiz/templates/rename',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\TemplateController@rename',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\TemplateController@rename',
        'as' => 'admin.mailwiz.templates.rename',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz/templates',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.templates.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/mailwiz/templates/{template}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\TemplateController@edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\TemplateController@edit',
        'as' => 'admin.mailwiz.templates.edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz/templates',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.templates.update' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
      ),
      'uri' => 'admin/mailwiz/templates/{template}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\TemplateController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\TemplateController@update',
        'as' => 'admin.mailwiz.templates.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz/templates',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.templates.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'admin/mailwiz/templates/{template}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\TemplateController@destroy',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\TemplateController@destroy',
        'as' => 'admin.mailwiz.templates.destroy',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz/templates',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.blocks.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/mailwiz/blocks',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\BlockController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\BlockController@store',
        'as' => 'admin.mailwiz.blocks.store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz/blocks',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.blocks.update' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
      ),
      'uri' => 'admin/mailwiz/blocks',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\BlockController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\BlockController@update',
        'as' => 'admin.mailwiz.blocks.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz/blocks',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.blocks.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'admin/mailwiz/blocks',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\BlockController@destroy',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\BlockController@destroy',
        'as' => 'admin.mailwiz.blocks.destroy',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz/blocks',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/mailwiz/editor/auth',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\MailWizController@auth',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\MailWizController@auth',
        'as' => 'admin.mailwiz.',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.generated::McnCjouBAo25ipbm' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/mailwiz/editor/session',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\MailWizController@session',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\MailWizController@session',
        'as' => 'admin.mailwiz.generated::McnCjouBAo25ipbm',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.generated::CF5rELYisRpD1rNV' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/mailwiz/editor/blocks',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\BlockController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\BlockController@index',
        'as' => 'admin.mailwiz.generated::CF5rELYisRpD1rNV',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.generated::iJPn2vh0zVDmK13y' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/mailwiz/editor/blocks/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\BlockController@delete',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\BlockController@delete',
        'as' => 'admin.mailwiz.generated::iJPn2vh0zVDmK13y',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.generated::cHHLpte7V4L81iF9' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/mailwiz/images/upload-url',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\MailWizController@uploadUrl',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\MailWizController@uploadUrl',
        'as' => 'admin.mailwiz.generated::cHHLpte7V4L81iF9',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.generated::z6SQaRtDEcUazt9d' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/mailwiz/images/upload',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\MailWizController@upload',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\MailWizController@upload',
        'as' => 'admin.mailwiz.generated::z6SQaRtDEcUazt9d',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.generated::F0oKJ0fDLKvnKlP6' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/mailwiz/images/save',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\MailWizController@save',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\MailWizController@save',
        'as' => 'admin.mailwiz.generated::F0oKJ0fDLKvnKlP6',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.generated::JTHh9rBpQAouNNr2' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/mailwiz/image',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\MailWizController@fetchImage',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\MailWizController@fetchImage',
        'as' => 'admin.mailwiz.generated::JTHh9rBpQAouNNr2',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.generated::sYVl8Ps49Ryq5eAT' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/mailwiz/images',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\MailWizController@images',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\MailWizController@images',
        'as' => 'admin.mailwiz.generated::sYVl8Ps49Ryq5eAT',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.mailwiz.generated::3n5Jkz8fOvkGv39O' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'admin/mailwiz/images',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\MailWizController@deleteImage',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\MailWizController@deleteImage',
        'as' => 'admin.mailwiz.generated::3n5Jkz8fOvkGv39O',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/mailwiz',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.totalEmailsSent' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/total-emails-sent',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'O:47:"Laravel\\SerializableClosure\\SerializableClosure":1:{s:12:"serializable";O:46:"Laravel\\SerializableClosure\\Serializers\\Signed":2:{s:12:"serializable";s:346:"O:46:"Laravel\\SerializableClosure\\Serializers\\Native":5:{s:3:"use";a:0:{}s:8:"function";s:170:"function() {
    $controller = \\app()->make(\\App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController::class);
    return $controller->totalEmailsSent(true);
}";s:5:"scope";N;s:4:"this";N;s:4:"self";s:32:"00000000000010180000000000000000";}";s:4:"hash";s:44:"v5q6GRXBqB6sNX7m/wYKudqhzWVkQ6qpPMrALt/l350=";}}',
        'as' => 'admin.totalEmailsSent',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.activeCampaignsCount' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/active-campaigns-count',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@activeCampaignsCount',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@activeCampaignsCount',
        'as' => 'admin.activeCampaignsCount',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.completedCampaignsCount' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/completed-campaigns-count',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@completedCampaignsCount',
        'controller' => 'App\\Http\\Controllers\\Admin\\Extensions\\MailWiz\\CampaignController@completedCampaignsCount',
        'as' => 'admin.completedCampaignsCount',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.seo' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/seo-manager',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\HomeController@seoEdit',
        'controller' => 'App\\Http\\Controllers\\HomeController@seoEdit',
        'as' => 'admin.seo',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.seo.content' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/frontend-content/{key}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\HomeController@frontendContent',
        'controller' => 'App\\Http\\Controllers\\HomeController@frontendContent',
        'as' => 'admin.seo.content',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.template.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/template/index',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminController@frontend',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminController@frontend',
        'as' => 'admin.template.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/template',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.template.save' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/template/save',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminController@frontend_save',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminController@frontend_save',
        'as' => 'admin.template.save',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/template',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.template.set' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/template/set',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminController@frontend_set',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminController@frontend_set',
        'as' => 'admin.template.set',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/template',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.kyc.list' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/kyc/list',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\KycController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\KycController@index',
        'as' => 'admin.kyc.list',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/kyc',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.kyc.templates' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/kyc/templates',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\KycController@templates',
        'controller' => 'App\\Http\\Controllers\\Admin\\KycController@templates',
        'as' => 'admin.kyc.templates',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/kyc',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.kyc.template.new' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/kyc/template/new',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\KycController@template_new',
        'controller' => 'App\\Http\\Controllers\\Admin\\KycController@template_new',
        'as' => 'admin.kyc.template.new',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/kyc',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.kyc.template.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/kyc/tempalte/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\KycController@template_store',
        'controller' => 'App\\Http\\Controllers\\Admin\\KycController@template_store',
        'as' => 'admin.kyc.template.store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/kyc',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.kyc.template.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/kyc/tempalte/edit/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\KycController@template_edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\KycController@template_edit',
        'as' => 'admin.kyc.template.edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/kyc',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.kyc.template.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/kyc/tempalte/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\KycController@template_update',
        'controller' => 'App\\Http\\Controllers\\Admin\\KycController@template_update',
        'as' => 'admin.kyc.template.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/kyc',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.kyc.view' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/kyc/view/{id}/{type}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\KycController@show',
        'controller' => 'App\\Http\\Controllers\\Admin\\KycController@show',
        'as' => 'admin.kyc.view',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/kyc',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.kyc.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/kyc/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\KycController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\KycController@update',
        'as' => 'admin.kyc.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/kyc',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.kyc.delete' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/kyc/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\KycController@delete',
        'controller' => 'App\\Http\\Controllers\\Admin\\KycController@delete',
        'as' => 'admin.kyc.delete',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/kyc',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.kyc.activate' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/kyc/activate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\KycController@activate',
        'controller' => 'App\\Http\\Controllers\\Admin\\KycController@activate',
        'as' => 'admin.kyc.activate',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/kyc',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.kyc.deactivate' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/kyc/deactivate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\KycController@deactivate',
        'controller' => 'App\\Http\\Controllers\\Admin\\KycController@deactivate',
        'as' => 'admin.kyc.deactivate',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/kyc',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.sidebar.admin' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/sidebar/admin',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminController@sidebar_admin',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminController@sidebar_admin',
        'as' => 'admin.sidebar.admin',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/sidebar',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.sidebar.user' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/sidebar/user',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminController@sidebar_user',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminController@sidebar_user',
        'as' => 'admin.sidebar.user',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/sidebar',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.sidebar.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/sidebar/edit/{type}/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminController@sidebar_edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminController@sidebar_edit',
        'as' => 'admin.sidebar.edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/sidebar',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.sidebar.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/sidebar/update/{type}/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminController@sidebar_update',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminController@sidebar_update',
        'as' => 'admin.sidebar.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/sidebar',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.sidebar.activate' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/sidebar/{type}/activate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminController@sidebar_activate',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminController@sidebar_activate',
        'as' => 'admin.sidebar.activate',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/sidebar',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.sidebar.deactivate' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/sidebar/{type}/deactivate',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminController@sidebar_deactivate',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminController@sidebar_deactivate',
        'as' => 'admin.sidebar.deactivate',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/sidebar',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.sidebar.submenu.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/sidebar/edit/{type}/{id}/submenu/{submenu_id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminController@sidebar_submenu_edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminController@sidebar_submenu_edit',
        'as' => 'admin.sidebar.submenu.edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/sidebar',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.sidebar.submenu.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/sidebar/update/{type}/{id}/submenu/{submenu_id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminController@sidebar_submenu_update',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminController@sidebar_submenu_update',
        'as' => 'admin.sidebar.submenu.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/sidebar',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.sidebar.submenu.activate' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/sidebar/submenu/{type}/activate/{id}/{submenu_id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminController@sidebar_submenu_activate',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminController@sidebar_submenu_activate',
        'as' => 'admin.sidebar.submenu.activate',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/sidebar',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.sidebar.submenu.deactivate' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/sidebar/submenu/{type}/deactivate/{id}/{submenu_id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminController@sidebar_submenu_deactivate',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminController@sidebar_submenu_deactivate',
        'as' => 'admin.sidebar.submenu.deactivate',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/sidebar',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.settings.database' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/settings/database',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\DatabaseController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\DatabaseController@index',
        'as' => 'admin.settings.database',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.database.binary.practice.logs.clean' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/database/binary/practice/logs/clean',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\DatabaseController@clean_binary_practice_logs',
        'controller' => 'App\\Http\\Controllers\\Admin\\DatabaseController@clean_binary_practice_logs',
        'as' => 'admin.database.binary.practice.logs.clean',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.database.binary.trade.logs.clean' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/database/binary/trade/logs/clean',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\DatabaseController@clean_binary_trade_logs',
        'controller' => 'App\\Http\\Controllers\\Admin\\DatabaseController@clean_binary_trade_logs',
        'as' => 'admin.database.binary.trade.logs.clean',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.database.trade.logs.clean' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/database/trade/logs/clean',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\DatabaseController@clean_trade_logs',
        'controller' => 'App\\Http\\Controllers\\Admin\\DatabaseController@clean_trade_logs',
        'as' => 'admin.database.trade.logs.clean',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.database.forex.investments.logs.clean' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/database/forex/investments/logs/clean',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\DatabaseController@clean_forex_investments_logs',
        'controller' => 'App\\Http\\Controllers\\Admin\\DatabaseController@clean_forex_investments_logs',
        'as' => 'admin.database.forex.investments.logs.clean',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.database.bot.investments.logs.clean' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/database/bot/investments/logs/clean',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\DatabaseController@clean_bot_investments_logs',
        'controller' => 'App\\Http\\Controllers\\Admin\\DatabaseController@clean_bot_investments_logs',
        'as' => 'admin.database.bot.investments.logs.clean',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.database.staking.logs.clean' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/database/staking/logs/clean',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\DatabaseController@clean_staking_logs',
        'controller' => 'App\\Http\\Controllers\\Admin\\DatabaseController@clean_staking_logs',
        'as' => 'admin.database.staking.logs.clean',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.database.ico.logs.clean' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/database/ico/logs/clean',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\DatabaseController@clean_ico_logs',
        'controller' => 'App\\Http\\Controllers\\Admin\\DatabaseController@clean_ico_logs',
        'as' => 'admin.database.ico.logs.clean',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.database.wallets.clean' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/database/wallets/clean',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\DatabaseController@clean_wallets',
        'controller' => 'App\\Http\\Controllers\\Admin\\DatabaseController@clean_wallets',
        'as' => 'admin.database.wallets.clean',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.database.refresh.permissions' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/database/refresh/permissions',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\DatabaseController@refresh_permissions',
        'controller' => 'App\\Http\\Controllers\\Admin\\DatabaseController@refresh_permissions',
        'as' => 'admin.database.refresh.permissions',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.database.refresh.sidebar' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/database/sidebar/refresh',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\DatabaseController@refresh_sidebar',
        'controller' => 'App\\Http\\Controllers\\Admin\\DatabaseController@refresh_sidebar',
        'as' => 'admin.database.refresh.sidebar',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.database.investment.table.fix' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/database/investment/table/fix',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\DatabaseController@checkAndAddLastProfitCalculationColumn',
        'controller' => 'App\\Http\\Controllers\\Admin\\DatabaseController@checkAndAddLastProfitCalculationColumn',
        'as' => 'admin.database.investment.table.fix',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.alerts.remove_install_file' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/alerts/remove/install',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\AdminController@remove_install_file',
        'controller' => 'App\\Http\\Controllers\\Admin\\AdminController@remove_install_file',
        'as' => 'admin.alerts.remove_install_file',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.popups.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/popups',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\PopupsController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\PopupsController@index',
        'as' => 'admin.popups.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/popups',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.popups.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/popups/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\PopupsController@create',
        'controller' => 'App\\Http\\Controllers\\Admin\\PopupsController@create',
        'as' => 'admin.popups.create',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/popups',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.popups.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/popups/edit/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\PopupsController@edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\PopupsController@edit',
        'as' => 'admin.popups.edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/popups',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.popups.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/popups/store',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\PopupsController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\PopupsController@store',
        'as' => 'admin.popups.store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/popups',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.popups.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/popups/update/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\PopupsController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\PopupsController@update',
        'as' => 'admin.popups.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/popups',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.popups.remove' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/popups/remove',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\PopupsController@remove',
        'controller' => 'App\\Http\\Controllers\\Admin\\PopupsController@remove',
        'as' => 'admin.popups.remove',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/popups',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.locale.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/locale',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'as' => 'admin.locale.index',
        'uses' => 'App\\Http\\Controllers\\Admin\\LocaleController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\LocaleController@index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.locale.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/locale/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'as' => 'admin.locale.create',
        'uses' => 'App\\Http\\Controllers\\Admin\\LocaleController@create',
        'controller' => 'App\\Http\\Controllers\\Admin\\LocaleController@create',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.locale.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/locale',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'as' => 'admin.locale.store',
        'uses' => 'App\\Http\\Controllers\\Admin\\LocaleController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\LocaleController@store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.locale.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/locale/{locale}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'as' => 'admin.locale.show',
        'uses' => 'App\\Http\\Controllers\\Admin\\LocaleController@show',
        'controller' => 'App\\Http\\Controllers\\Admin\\LocaleController@show',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.locale.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/locale/{locale}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'as' => 'admin.locale.edit',
        'uses' => 'App\\Http\\Controllers\\Admin\\LocaleController@edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\LocaleController@edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.locale.update' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
        1 => 'PATCH',
      ),
      'uri' => 'admin/locale/{locale}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'as' => 'admin.locale.update',
        'uses' => 'App\\Http\\Controllers\\Admin\\LocaleController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\LocaleController@update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.locale.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'admin/locale/{locale}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'as' => 'admin.locale.destroy',
        'uses' => 'App\\Http\\Controllers\\Admin\\LocaleController@destroy',
        'controller' => 'App\\Http\\Controllers\\Admin\\LocaleController@destroy',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.permissions.massDestroy' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'admin/permissions/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\PermissionsController@massDestroy',
        'controller' => 'App\\Http\\Controllers\\Admin\\PermissionsController@massDestroy',
        'as' => 'admin.permissions.massDestroy',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.permissions.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/permissions',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.permissions.index',
        'uses' => 'App\\Http\\Controllers\\Admin\\PermissionsController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\PermissionsController@index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.permissions.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/permissions/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.permissions.create',
        'uses' => 'App\\Http\\Controllers\\Admin\\PermissionsController@create',
        'controller' => 'App\\Http\\Controllers\\Admin\\PermissionsController@create',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.permissions.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/permissions',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.permissions.store',
        'uses' => 'App\\Http\\Controllers\\Admin\\PermissionsController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\PermissionsController@store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.permissions.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/permissions/{permission}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.permissions.show',
        'uses' => 'App\\Http\\Controllers\\Admin\\PermissionsController@show',
        'controller' => 'App\\Http\\Controllers\\Admin\\PermissionsController@show',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.permissions.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/permissions/{permission}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.permissions.edit',
        'uses' => 'App\\Http\\Controllers\\Admin\\PermissionsController@edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\PermissionsController@edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.permissions.update' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
        1 => 'PATCH',
      ),
      'uri' => 'admin/permissions/{permission}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.permissions.update',
        'uses' => 'App\\Http\\Controllers\\Admin\\PermissionsController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\PermissionsController@update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.permissions.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'admin/permissions/{permission}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'as' => 'admin.permissions.destroy',
        'uses' => 'App\\Http\\Controllers\\Admin\\PermissionsController@destroy',
        'controller' => 'App\\Http\\Controllers\\Admin\\PermissionsController@destroy',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.roles.massDestroy' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'admin/roles/destroy',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\RolesController@massDestroy',
        'controller' => 'App\\Http\\Controllers\\Admin\\RolesController@massDestroy',
        'as' => 'admin.roles.massDestroy',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.roles.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/roles',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'as' => 'admin.roles.index',
        'uses' => 'App\\Http\\Controllers\\Admin\\RolesController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\RolesController@index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.roles.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/roles/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'as' => 'admin.roles.create',
        'uses' => 'App\\Http\\Controllers\\Admin\\RolesController@create',
        'controller' => 'App\\Http\\Controllers\\Admin\\RolesController@create',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.roles.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/roles',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'as' => 'admin.roles.store',
        'uses' => 'App\\Http\\Controllers\\Admin\\RolesController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\RolesController@store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.roles.show' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/roles/{role}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'as' => 'admin.roles.show',
        'uses' => 'App\\Http\\Controllers\\Admin\\RolesController@show',
        'controller' => 'App\\Http\\Controllers\\Admin\\RolesController@show',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.roles.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/roles/{role}/edit',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'as' => 'admin.roles.edit',
        'uses' => 'App\\Http\\Controllers\\Admin\\RolesController@edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\RolesController@edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.roles.update' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
        1 => 'PATCH',
      ),
      'uri' => 'admin/roles/{role}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'as' => 'admin.roles.update',
        'uses' => 'App\\Http\\Controllers\\Admin\\RolesController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\RolesController@update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.roles.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'admin/roles/{role}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'as' => 'admin.roles.destroy',
        'uses' => 'App\\Http\\Controllers\\Admin\\RolesController@destroy',
        'controller' => 'App\\Http\\Controllers\\Admin\\RolesController@destroy',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.roles.delete' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/roles/delete',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\RolesController@delete',
        'controller' => 'App\\Http\\Controllers\\Admin\\RolesController@delete',
        'as' => 'admin.roles.delete',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.roles.del' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/roles/del/{role}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\RolesController@destroy',
        'controller' => 'App\\Http\\Controllers\\Admin\\RolesController@destroy',
        'as' => 'admin.roles.del',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.roles.assign' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/roles/assign',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\RolesController@assign',
        'controller' => 'App\\Http\\Controllers\\Admin\\RolesController@assign',
        'as' => 'admin.roles.assign',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.users.email' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/users/email/send',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\UsersController@send_email',
        'controller' => 'App\\Http\\Controllers\\Admin\\UsersController@send_email',
        'as' => 'admin.users.email',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => '/admin',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.settings.mail.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/settings/email',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\NotificationController@global',
        'controller' => 'App\\Http\\Controllers\\Admin\\NotificationController@global',
        'as' => 'admin.settings.mail.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/settings/email',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.settings.mail.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/settings/email/update',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\NotificationController@globalUpdate',
        'controller' => 'App\\Http\\Controllers\\Admin\\NotificationController@globalUpdate',
        'as' => 'admin.settings.mail.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/settings/email',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.settings.mail.templates' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/settings/email/templates',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\NotificationController@templates',
        'controller' => 'App\\Http\\Controllers\\Admin\\NotificationController@templates',
        'as' => 'admin.settings.mail.templates',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/settings/email',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.settings.mail.template.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/settings/email/template/edit/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\NotificationController@templateEdit',
        'controller' => 'App\\Http\\Controllers\\Admin\\NotificationController@templateEdit',
        'as' => 'admin.settings.mail.template.edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/settings/email',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.settings.mail.template.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/settings/email/template/update/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\NotificationController@templateUpdate',
        'controller' => 'App\\Http\\Controllers\\Admin\\NotificationController@templateUpdate',
        'as' => 'admin.settings.mail.template.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/settings/email',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.settings.mail.email' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/settings/email/settings',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\NotificationController@emailSetting',
        'controller' => 'App\\Http\\Controllers\\Admin\\NotificationController@emailSetting',
        'as' => 'admin.settings.mail.email',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/settings/email',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.settings.mail.settings.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/settings/email/settings',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\NotificationController@emailSettingUpdate',
        'controller' => 'App\\Http\\Controllers\\Admin\\NotificationController@emailSettingUpdate',
        'as' => 'admin.settings.mail.settings.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/settings/email',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.settings.mail.test' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/settings/email/test',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\NotificationController@emailTest',
        'controller' => 'App\\Http\\Controllers\\Admin\\NotificationController@emailTest',
        'as' => 'admin.settings.mail.test',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/settings/email',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.settings.mail.test.smtp' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/settings/email/test-smtp',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\NotificationController@emailSetting',
        'controller' => 'App\\Http\\Controllers\\Admin\\NotificationController@emailSetting',
        'as' => 'admin.settings.mail.test.smtp',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/settings/email',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.settings.mail.test.smtp.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/settings/email/test-smtp',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\NotificationController@testSMTP',
        'controller' => 'App\\Http\\Controllers\\Admin\\NotificationController@testSMTP',
        'as' => 'admin.settings.mail.test.smtp.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/settings/email',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.settings.mail.sms' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/settings/email/sms/settings',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\NotificationController@smsSetting',
        'controller' => 'App\\Http\\Controllers\\Admin\\NotificationController@smsSetting',
        'as' => 'admin.settings.mail.sms',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/settings/email',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.settings.mail.' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/settings/email/sms/settings',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\NotificationController@smsSettingUpdate',
        'controller' => 'App\\Http\\Controllers\\Admin\\NotificationController@smsSettingUpdate',
        'as' => 'admin.settings.mail.',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/settings/email',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.settings.mail.sms.test' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/settings/email/sms/test',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\NotificationController@smsTest',
        'controller' => 'App\\Http\\Controllers\\Admin\\NotificationController@smsTest',
        'as' => 'admin.settings.mail.sms.test',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/settings/email',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.settings.mail.push' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/settings/email/push-notification/settings',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\NotificationController@pushNotificationSetting',
        'controller' => 'App\\Http\\Controllers\\Admin\\NotificationController@pushNotificationSetting',
        'as' => 'admin.settings.mail.push',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/settings/email',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.settings.mail.push.update' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/settings/email/push-notification/settings',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
          3 => 'demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\NotificationController@pushNotificationSettingUpdate',
        'controller' => 'App\\Http\\Controllers\\Admin\\NotificationController@pushNotificationSettingUpdate',
        'as' => 'admin.settings.mail.push.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/settings/email',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.investment.plans.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/investment/plans',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\InvestmentPlanController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\InvestmentPlanController@index',
        'as' => 'admin.investment.plans.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/investment/plans',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.investment.plans.create' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/investment/plans/create',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\InvestmentPlanController@create',
        'controller' => 'App\\Http\\Controllers\\Admin\\InvestmentPlanController@create',
        'as' => 'admin.investment.plans.create',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/investment/plans',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.investment.plans.store' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/investment/plans',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\InvestmentPlanController@store',
        'controller' => 'App\\Http\\Controllers\\Admin\\InvestmentPlanController@store',
        'as' => 'admin.investment.plans.store',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/investment/plans',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.investment.plans.toggleStatus' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
      ),
      'uri' => 'admin/investment/plans/{id}/toggle-status',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\InvestmentPlanController@toggleStatus',
        'controller' => 'App\\Http\\Controllers\\Admin\\InvestmentPlanController@toggleStatus',
        'as' => 'admin.investment.plans.toggleStatus',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/investment/plans',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.investment.plans.toggleRecommanded' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
      ),
      'uri' => 'admin/investment/plans/{id}/toggle-recommanded',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\InvestmentPlanController@toggleRecommanded',
        'controller' => 'App\\Http\\Controllers\\Admin\\InvestmentPlanController@toggleRecommanded',
        'as' => 'admin.investment.plans.toggleRecommanded',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/investment/plans',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.investment.plans.edit' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/investment/plans/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\InvestmentPlanController@edit',
        'controller' => 'App\\Http\\Controllers\\Admin\\InvestmentPlanController@edit',
        'as' => 'admin.investment.plans.edit',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/investment/plans',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.investment.plans.update' => 
    array (
      'methods' => 
      array (
        0 => 'PUT',
      ),
      'uri' => 'admin/investment/plans/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\InvestmentPlanController@update',
        'controller' => 'App\\Http\\Controllers\\Admin\\InvestmentPlanController@update',
        'as' => 'admin.investment.plans.update',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/investment/plans',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.investment.plans.destroy' => 
    array (
      'methods' => 
      array (
        0 => 'DELETE',
      ),
      'uri' => 'admin/investment/plans/{id}',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\InvestmentPlanController@destroy',
        'controller' => 'App\\Http\\Controllers\\Admin\\InvestmentPlanController@destroy',
        'as' => 'admin.investment.plans.destroy',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/investment/plans',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.investment.logs.index' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'admin/investment/logs',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\InvestmentLogController@index',
        'controller' => 'App\\Http\\Controllers\\Admin\\InvestmentLogController@index',
        'as' => 'admin.investment.logs.index',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/investment/logs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'admin.investment.logs.cancel' => 
    array (
      'methods' => 
      array (
        0 => 'POST',
      ),
      'uri' => 'admin/investment/logs/{id}/cancel',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
          1 => 'auth',
          2 => 'role:admin,demo',
        ),
        'uses' => 'App\\Http\\Controllers\\Admin\\InvestmentLogController@cancel',
        'controller' => 'App\\Http\\Controllers\\Admin\\InvestmentLogController@cancel',
        'as' => 'admin.investment.logs.cancel',
        'namespace' => 'App\\Http\\Controllers\\Admin',
        'prefix' => 'admin/investment/logs',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
    'pix' => 
    array (
      'methods' => 
      array (
        0 => 'GET',
        1 => 'HEAD',
      ),
      'uri' => 'pix',
      'action' => 
      array (
        'middleware' => 
        array (
          0 => 'web',
        ),
        'uses' => 'App\\Http\\Controllers\\PixController@createOrder',
        'controller' => 'App\\Http\\Controllers\\PixController@createOrder',
        'as' => 'pix',
        'namespace' => 'App\\Http\\Controllers',
        'prefix' => '/pix',
        'where' => 
        array (
        ),
      ),
      'fallback' => false,
      'defaults' => 
      array (
      ),
      'wheres' => 
      array (
      ),
      'bindingFields' => 
      array (
      ),
      'lockSeconds' => NULL,
      'waitSeconds' => NULL,
      'withTrashed' => false,
    ),
  ),
)
);
